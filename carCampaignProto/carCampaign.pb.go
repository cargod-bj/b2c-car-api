// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.11.4
// source: carCampaignProto/carCampaign.proto

package carCampaignProto

import (
	carProto "github.com/cargod-bj/b2c-car-api/carProto"
	common "github.com/cargod-bj/b2c-proto-common/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 添加车辆费用
type CarCampaignReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 活动详情
	Campaign *CarCampaignDetail `protobuf:"bytes,1,opt,name=campaign,proto3" json:"campaign,omitempty"`
	// 活动车辆列表
	Cars []*CarCampaignCar `protobuf:"bytes,2,rep,name=cars,proto3" json:"cars,omitempty"`
	// 执行当前操作的用户id
	OperatorId uint64 `protobuf:"varint,3,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	// remark
	Remark string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	// 本地化类型
	Local string `protobuf:"bytes,100,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *CarCampaignReq) Reset() {
	*x = CarCampaignReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carCampaignProto_carCampaign_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarCampaignReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarCampaignReq) ProtoMessage() {}

func (x *CarCampaignReq) ProtoReflect() protoreflect.Message {
	mi := &file_carCampaignProto_carCampaign_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarCampaignReq.ProtoReflect.Descriptor instead.
func (*CarCampaignReq) Descriptor() ([]byte, []int) {
	return file_carCampaignProto_carCampaign_proto_rawDescGZIP(), []int{0}
}

func (x *CarCampaignReq) GetCampaign() *CarCampaignDetail {
	if x != nil {
		return x.Campaign
	}
	return nil
}

func (x *CarCampaignReq) GetCars() []*CarCampaignCar {
	if x != nil {
		return x.Cars
	}
	return nil
}

func (x *CarCampaignReq) GetOperatorId() uint64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *CarCampaignReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CarCampaignReq) GetLocal() string {
	if x != nil {
		return x.Local
	}
	return ""
}

// 删除活动
type DeleteCarCampaignReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 活动id
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// 执行当前操作的用户id
	OperatorId uint64 `protobuf:"varint,3,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
}

func (x *DeleteCarCampaignReq) Reset() {
	*x = DeleteCarCampaignReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carCampaignProto_carCampaign_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCarCampaignReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCarCampaignReq) ProtoMessage() {}

func (x *DeleteCarCampaignReq) ProtoReflect() protoreflect.Message {
	mi := &file_carCampaignProto_carCampaign_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCarCampaignReq.ProtoReflect.Descriptor instead.
func (*DeleteCarCampaignReq) Descriptor() ([]byte, []int) {
	return file_carCampaignProto_carCampaign_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteCarCampaignReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteCarCampaignReq) GetOperatorId() uint64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

// 删除活动
type ListCarCampaignReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 活动
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 开始时间：开始
	StartTimeStart uint64 `protobuf:"varint,3,opt,name=startTimeStart,proto3" json:"startTimeStart,omitempty"`
	// 开始时间：结束
	StartTimeEnd uint64 `protobuf:"varint,4,opt,name=startTimeEnd,proto3" json:"startTimeEnd,omitempty"`
	// 结束时间：开始
	EndTimeStart uint64 `protobuf:"varint,5,opt,name=endTimeStart,proto3" json:"endTimeStart,omitempty"`
	// 结束时间：结束
	EndTimeEnd uint64 `protobuf:"varint,6,opt,name=endTimeEnd,proto3" json:"endTimeEnd,omitempty"`
	// 创建时间：开始
	CreateTimeStart uint64 `protobuf:"varint,7,opt,name=createTimeStart,proto3" json:"createTimeStart,omitempty"`
	// 创建时间：结束
	CreateTimeEnd uint64 `protobuf:"varint,8,opt,name=createTimeEnd,proto3" json:"createTimeEnd,omitempty"`
	// 活动状态
	CampaignStatus uint32 `protobuf:"varint,9,opt,name=campaignStatus,proto3" json:"campaignStatus,omitempty"`
	// 本地化类型
	Local string `protobuf:"bytes,100,opt,name=local,proto3" json:"local,omitempty"`
	// 分页信息
	Page *common.Page `protobuf:"bytes,101,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListCarCampaignReq) Reset() {
	*x = ListCarCampaignReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carCampaignProto_carCampaign_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCarCampaignReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCarCampaignReq) ProtoMessage() {}

func (x *ListCarCampaignReq) ProtoReflect() protoreflect.Message {
	mi := &file_carCampaignProto_carCampaign_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCarCampaignReq.ProtoReflect.Descriptor instead.
func (*ListCarCampaignReq) Descriptor() ([]byte, []int) {
	return file_carCampaignProto_carCampaign_proto_rawDescGZIP(), []int{2}
}

func (x *ListCarCampaignReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListCarCampaignReq) GetStartTimeStart() uint64 {
	if x != nil {
		return x.StartTimeStart
	}
	return 0
}

func (x *ListCarCampaignReq) GetStartTimeEnd() uint64 {
	if x != nil {
		return x.StartTimeEnd
	}
	return 0
}

func (x *ListCarCampaignReq) GetEndTimeStart() uint64 {
	if x != nil {
		return x.EndTimeStart
	}
	return 0
}

func (x *ListCarCampaignReq) GetEndTimeEnd() uint64 {
	if x != nil {
		return x.EndTimeEnd
	}
	return 0
}

func (x *ListCarCampaignReq) GetCreateTimeStart() uint64 {
	if x != nil {
		return x.CreateTimeStart
	}
	return 0
}

func (x *ListCarCampaignReq) GetCreateTimeEnd() uint64 {
	if x != nil {
		return x.CreateTimeEnd
	}
	return 0
}

func (x *ListCarCampaignReq) GetCampaignStatus() uint32 {
	if x != nil {
		return x.CampaignStatus
	}
	return 0
}

func (x *ListCarCampaignReq) GetLocal() string {
	if x != nil {
		return x.Local
	}
	return ""
}

func (x *ListCarCampaignReq) GetPage() *common.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

// 活动日志
type ListCarCampaignLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 活动id
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 本地化类型
	Local string `protobuf:"bytes,100,opt,name=local,proto3" json:"local,omitempty"`
	// 分页信息
	Page *common.Page `protobuf:"bytes,101,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListCarCampaignLogReq) Reset() {
	*x = ListCarCampaignLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carCampaignProto_carCampaign_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCarCampaignLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCarCampaignLogReq) ProtoMessage() {}

func (x *ListCarCampaignLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_carCampaignProto_carCampaign_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCarCampaignLogReq.ProtoReflect.Descriptor instead.
func (*ListCarCampaignLogReq) Descriptor() ([]byte, []int) {
	return file_carCampaignProto_carCampaign_proto_rawDescGZIP(), []int{3}
}

func (x *ListCarCampaignLogReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListCarCampaignLogReq) GetLocal() string {
	if x != nil {
		return x.Local
	}
	return ""
}

func (x *ListCarCampaignLogReq) GetPage() *common.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

// 检查导入车辆信息
type CheckImportCarsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cars     []*CheckImportCarsItemDto `protobuf:"bytes,1,rep,name=cars,proto3" json:"cars,omitempty"`
	StoreIds []uint64                  `protobuf:"varint,2,rep,packed,name=storeIds,proto3" json:"storeIds,omitempty"`
}

func (x *CheckImportCarsReq) Reset() {
	*x = CheckImportCarsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carCampaignProto_carCampaign_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckImportCarsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckImportCarsReq) ProtoMessage() {}

func (x *CheckImportCarsReq) ProtoReflect() protoreflect.Message {
	mi := &file_carCampaignProto_carCampaign_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckImportCarsReq.ProtoReflect.Descriptor instead.
func (*CheckImportCarsReq) Descriptor() ([]byte, []int) {
	return file_carCampaignProto_carCampaign_proto_rawDescGZIP(), []int{4}
}

func (x *CheckImportCarsReq) GetCars() []*CheckImportCarsItemDto {
	if x != nil {
		return x.Cars
	}
	return nil
}

func (x *CheckImportCarsReq) GetStoreIds() []uint64 {
	if x != nil {
		return x.StoreIds
	}
	return nil
}

// 检查导入车辆信息
type CheckImportCarsItemDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 车辆no
	CarNo string `protobuf:"bytes,1,opt,name=carNo,proto3" json:"carNo,omitempty"`
	// 车辆placeNo
	LicensePlate string `protobuf:"bytes,2,opt,name=licensePlate,proto3" json:"licensePlate,omitempty"`
	// 导入车辆时指定的活动价格
	CampaignPrice string `protobuf:"bytes,3,opt,name=campaignPrice,proto3" json:"campaignPrice,omitempty"`
}

func (x *CheckImportCarsItemDto) Reset() {
	*x = CheckImportCarsItemDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carCampaignProto_carCampaign_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckImportCarsItemDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckImportCarsItemDto) ProtoMessage() {}

func (x *CheckImportCarsItemDto) ProtoReflect() protoreflect.Message {
	mi := &file_carCampaignProto_carCampaign_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckImportCarsItemDto.ProtoReflect.Descriptor instead.
func (*CheckImportCarsItemDto) Descriptor() ([]byte, []int) {
	return file_carCampaignProto_carCampaign_proto_rawDescGZIP(), []int{5}
}

func (x *CheckImportCarsItemDto) GetCarNo() string {
	if x != nil {
		return x.CarNo
	}
	return ""
}

func (x *CheckImportCarsItemDto) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

func (x *CheckImportCarsItemDto) GetCampaignPrice() string {
	if x != nil {
		return x.CampaignPrice
	}
	return ""
}

type CarCampaignList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 开始时间
	StartTime uint64 `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	// 结束时间
	EndTime uint64 `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
	// 活动状态
	CampaignStatus uint32 `protobuf:"varint,6,opt,name=campaignStatus,proto3" json:"campaignStatus,omitempty"`
	// 活动状态
	CampaignStatusName string `protobuf:"bytes,7,opt,name=campaignStatusName,proto3" json:"campaignStatusName,omitempty"`
	// 活动创建人id
	CreatorId uint64 `protobuf:"varint,8,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
	// 创建时间
	CreateTime uint64 `protobuf:"varint,9,opt,name=createTime,proto3" json:"createTime,omitempty"`
	// 车辆数
	CarsCount uint32 `protobuf:"varint,10,opt,name=carsCount,proto3" json:"carsCount,omitempty"`
}

func (x *CarCampaignList) Reset() {
	*x = CarCampaignList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carCampaignProto_carCampaign_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarCampaignList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarCampaignList) ProtoMessage() {}

func (x *CarCampaignList) ProtoReflect() protoreflect.Message {
	mi := &file_carCampaignProto_carCampaign_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarCampaignList.ProtoReflect.Descriptor instead.
func (*CarCampaignList) Descriptor() ([]byte, []int) {
	return file_carCampaignProto_carCampaign_proto_rawDescGZIP(), []int{6}
}

func (x *CarCampaignList) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CarCampaignList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CarCampaignList) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CarCampaignList) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *CarCampaignList) GetCampaignStatus() uint32 {
	if x != nil {
		return x.CampaignStatus
	}
	return 0
}

func (x *CarCampaignList) GetCampaignStatusName() string {
	if x != nil {
		return x.CampaignStatusName
	}
	return ""
}

func (x *CarCampaignList) GetCreatorId() uint64 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *CarCampaignList) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CarCampaignList) GetCarsCount() uint32 {
	if x != nil {
		return x.CarsCount
	}
	return 0
}

type CarCampaignLogList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作人员Id
	OperatorId uint64 `protobuf:"varint,2,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	// 备注
	Remark string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	// 活动状态
	CampaignStatus uint32 `protobuf:"varint,5,opt,name=campaignStatus,proto3" json:"campaignStatus,omitempty"`
	// 活动状态
	CampaignStatusName string `protobuf:"bytes,8,opt,name=campaignStatusName,proto3" json:"campaignStatusName,omitempty"`
	// 车辆数
	CarsCount uint32 `protobuf:"varint,6,opt,name=carsCount,proto3" json:"carsCount,omitempty"`
	// 创建时间
	CreateTime uint64 `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
}

func (x *CarCampaignLogList) Reset() {
	*x = CarCampaignLogList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carCampaignProto_carCampaign_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarCampaignLogList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarCampaignLogList) ProtoMessage() {}

func (x *CarCampaignLogList) ProtoReflect() protoreflect.Message {
	mi := &file_carCampaignProto_carCampaign_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarCampaignLogList.ProtoReflect.Descriptor instead.
func (*CarCampaignLogList) Descriptor() ([]byte, []int) {
	return file_carCampaignProto_carCampaign_proto_rawDescGZIP(), []int{7}
}

func (x *CarCampaignLogList) GetOperatorId() uint64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *CarCampaignLogList) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CarCampaignLogList) GetCampaignStatus() uint32 {
	if x != nil {
		return x.CampaignStatus
	}
	return 0
}

func (x *CarCampaignLogList) GetCampaignStatusName() string {
	if x != nil {
		return x.CampaignStatusName
	}
	return ""
}

func (x *CarCampaignLogList) GetCarsCount() uint32 {
	if x != nil {
		return x.CarsCount
	}
	return 0
}

func (x *CarCampaignLogList) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

// 活动详情
type CarCampaignDetailWithCars struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail *CarCampaignDetail      `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
	Cars   []*CarCampaignWithPrice `protobuf:"bytes,2,rep,name=cars,proto3" json:"cars,omitempty"`
}

func (x *CarCampaignDetailWithCars) Reset() {
	*x = CarCampaignDetailWithCars{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carCampaignProto_carCampaign_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarCampaignDetailWithCars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarCampaignDetailWithCars) ProtoMessage() {}

func (x *CarCampaignDetailWithCars) ProtoReflect() protoreflect.Message {
	mi := &file_carCampaignProto_carCampaign_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarCampaignDetailWithCars.ProtoReflect.Descriptor instead.
func (*CarCampaignDetailWithCars) Descriptor() ([]byte, []int) {
	return file_carCampaignProto_carCampaign_proto_rawDescGZIP(), []int{8}
}

func (x *CarCampaignDetailWithCars) GetDetail() *CarCampaignDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *CarCampaignDetailWithCars) GetCars() []*CarCampaignWithPrice {
	if x != nil {
		return x.Cars
	}
	return nil
}

// 车辆活动
type CarCampaignDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 开始时间
	StartTime uint64 `protobuf:"varint,4,opt,name=startTime,proto3" json:"startTime,omitempty"`
	// 结束时间
	EndTime uint64 `protobuf:"varint,5,opt,name=endTime,proto3" json:"endTime,omitempty"`
	// 活动tagid
	TagId uint64 `protobuf:"varint,6,opt,name=tagId,proto3" json:"tagId,omitempty"`
	// 活动创建人id
	CreatorId uint64 `protobuf:"varint,7,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
	// 活动页面图片资源
	ResWebDetailPriceBar string `protobuf:"bytes,8,opt,name=resWebDetailPriceBar,proto3" json:"resWebDetailPriceBar,omitempty"`
	// 活动页面图片资源
	ResWebListItemTag string `protobuf:"bytes,9,opt,name=resWebListItemTag,proto3" json:"resWebListItemTag,omitempty"`
	// 活动页面图片资源
	ResWebFilterTagSelected string `protobuf:"bytes,10,opt,name=resWebFilterTagSelected,proto3" json:"resWebFilterTagSelected,omitempty"`
	// 活动页面图片资源
	ResWebFilterTagUnselected string `protobuf:"bytes,11,opt,name=resWebFilterTagUnselected,proto3" json:"resWebFilterTagUnselected,omitempty"`
	// 活动页面图片资源
	ResH5DetailPriceBar string `protobuf:"bytes,12,opt,name=resH5DetailPriceBar,proto3" json:"resH5DetailPriceBar,omitempty"`
	// 活动页面图片资源
	ResH5ListItemTag string `protobuf:"bytes,13,opt,name=resH5ListItemTag,proto3" json:"resH5ListItemTag,omitempty"`
	// 活动页面图片资源
	ResH5FilterTagSelected string `protobuf:"bytes,14,opt,name=resH5FilterTagSelected,proto3" json:"resH5FilterTagSelected,omitempty"`
	// 活动页面图片资源
	ResH5FilterTagUnselected string `protobuf:"bytes,15,opt,name=resH5FilterTagUnselected,proto3" json:"resH5FilterTagUnselected,omitempty"`
	// 活动是否有效：1有效，2无效
	ActiveStatus uint32 `protobuf:"varint,16,opt,name=activeStatus,proto3" json:"activeStatus,omitempty"`
	// 活动页面图片资源
	ResWebBannerDetailPageRight string `protobuf:"bytes,17,opt,name=resWebBannerDetailPageRight,proto3" json:"resWebBannerDetailPageRight,omitempty"`
	//banner左侧label背景颜色
	BannerBgColorLeftLabel string `protobuf:"bytes,18,opt,name=bannerBgColorLeftLabel,proto3" json:"bannerBgColorLeftLabel,omitempty"`
	//banner右侧label背景颜色
	BannerBgColorRightLabel string `protobuf:"bytes,19,opt,name=bannerBgColorRightLabel,proto3" json:"bannerBgColorRightLabel,omitempty"`
	//banner title 颜色
	BannerTitleColor string `protobuf:"bytes,20,opt,name=bannerTitleColor,proto3" json:"bannerTitleColor,omitempty"`
	//banner date 颜色
	BannerDateColor string `protobuf:"bytes,21,opt,name=bannerDateColor,proto3" json:"bannerDateColor,omitempty"`
	// 卡片折扣文字颜色
	CardDiscountWordsColor string `protobuf:"bytes,22,opt,name=cardDiscountWordsColor,proto3" json:"cardDiscountWordsColor,omitempty"`
	// 卡片图片
	CardDiscountTag string `protobuf:"bytes,23,opt,name=cardDiscountTag,proto3" json:"cardDiscountTag,omitempty"`
}

func (x *CarCampaignDetail) Reset() {
	*x = CarCampaignDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carCampaignProto_carCampaign_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarCampaignDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarCampaignDetail) ProtoMessage() {}

func (x *CarCampaignDetail) ProtoReflect() protoreflect.Message {
	mi := &file_carCampaignProto_carCampaign_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarCampaignDetail.ProtoReflect.Descriptor instead.
func (*CarCampaignDetail) Descriptor() ([]byte, []int) {
	return file_carCampaignProto_carCampaign_proto_rawDescGZIP(), []int{9}
}

func (x *CarCampaignDetail) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CarCampaignDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CarCampaignDetail) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CarCampaignDetail) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *CarCampaignDetail) GetTagId() uint64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *CarCampaignDetail) GetCreatorId() uint64 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *CarCampaignDetail) GetResWebDetailPriceBar() string {
	if x != nil {
		return x.ResWebDetailPriceBar
	}
	return ""
}

func (x *CarCampaignDetail) GetResWebListItemTag() string {
	if x != nil {
		return x.ResWebListItemTag
	}
	return ""
}

func (x *CarCampaignDetail) GetResWebFilterTagSelected() string {
	if x != nil {
		return x.ResWebFilterTagSelected
	}
	return ""
}

func (x *CarCampaignDetail) GetResWebFilterTagUnselected() string {
	if x != nil {
		return x.ResWebFilterTagUnselected
	}
	return ""
}

func (x *CarCampaignDetail) GetResH5DetailPriceBar() string {
	if x != nil {
		return x.ResH5DetailPriceBar
	}
	return ""
}

func (x *CarCampaignDetail) GetResH5ListItemTag() string {
	if x != nil {
		return x.ResH5ListItemTag
	}
	return ""
}

func (x *CarCampaignDetail) GetResH5FilterTagSelected() string {
	if x != nil {
		return x.ResH5FilterTagSelected
	}
	return ""
}

func (x *CarCampaignDetail) GetResH5FilterTagUnselected() string {
	if x != nil {
		return x.ResH5FilterTagUnselected
	}
	return ""
}

func (x *CarCampaignDetail) GetActiveStatus() uint32 {
	if x != nil {
		return x.ActiveStatus
	}
	return 0
}

func (x *CarCampaignDetail) GetResWebBannerDetailPageRight() string {
	if x != nil {
		return x.ResWebBannerDetailPageRight
	}
	return ""
}

func (x *CarCampaignDetail) GetBannerBgColorLeftLabel() string {
	if x != nil {
		return x.BannerBgColorLeftLabel
	}
	return ""
}

func (x *CarCampaignDetail) GetBannerBgColorRightLabel() string {
	if x != nil {
		return x.BannerBgColorRightLabel
	}
	return ""
}

func (x *CarCampaignDetail) GetBannerTitleColor() string {
	if x != nil {
		return x.BannerTitleColor
	}
	return ""
}

func (x *CarCampaignDetail) GetBannerDateColor() string {
	if x != nil {
		return x.BannerDateColor
	}
	return ""
}

func (x *CarCampaignDetail) GetCardDiscountWordsColor() string {
	if x != nil {
		return x.CardDiscountWordsColor
	}
	return ""
}

func (x *CarCampaignDetail) GetCardDiscountTag() string {
	if x != nil {
		return x.CardDiscountTag
	}
	return ""
}

// 活动车辆
type CarCampaignCar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 活动车辆id
	CarId uint64 `protobuf:"varint,1,opt,name=carId,proto3" json:"carId,omitempty"`
	// 活动价
	CampaignPrice string `protobuf:"bytes,2,opt,name=campaignPrice,proto3" json:"campaignPrice,omitempty"`
}

func (x *CarCampaignCar) Reset() {
	*x = CarCampaignCar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carCampaignProto_carCampaign_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarCampaignCar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarCampaignCar) ProtoMessage() {}

func (x *CarCampaignCar) ProtoReflect() protoreflect.Message {
	mi := &file_carCampaignProto_carCampaign_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarCampaignCar.ProtoReflect.Descriptor instead.
func (*CarCampaignCar) Descriptor() ([]byte, []int) {
	return file_carCampaignProto_carCampaign_proto_rawDescGZIP(), []int{10}
}

func (x *CarCampaignCar) GetCarId() uint64 {
	if x != nil {
		return x.CarId
	}
	return 0
}

func (x *CarCampaignCar) GetCampaignPrice() string {
	if x != nil {
		return x.CampaignPrice
	}
	return ""
}

// 活动车辆
type CarCampaignWithPrice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 活动车辆
	Car *carProto.CarDto `protobuf:"bytes,1,opt,name=car,proto3" json:"car,omitempty"`
	// 活动价
	CampaignPrice string `protobuf:"bytes,2,opt,name=campaignPrice,proto3" json:"campaignPrice,omitempty"`
}

func (x *CarCampaignWithPrice) Reset() {
	*x = CarCampaignWithPrice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carCampaignProto_carCampaign_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarCampaignWithPrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarCampaignWithPrice) ProtoMessage() {}

func (x *CarCampaignWithPrice) ProtoReflect() protoreflect.Message {
	mi := &file_carCampaignProto_carCampaign_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarCampaignWithPrice.ProtoReflect.Descriptor instead.
func (*CarCampaignWithPrice) Descriptor() ([]byte, []int) {
	return file_carCampaignProto_carCampaign_proto_rawDescGZIP(), []int{11}
}

func (x *CarCampaignWithPrice) GetCar() *carProto.CarDto {
	if x != nil {
		return x.Car
	}
	return nil
}

func (x *CarCampaignWithPrice) GetCampaignPrice() string {
	if x != nil {
		return x.CampaignPrice
	}
	return ""
}

// 查询活动信息
type CarCampaignCond struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// carId
	CarId uint64 `protobuf:"varint,1,opt,name=carId,proto3" json:"carId,omitempty"`
	// campaign ID
	CampaignId uint64 `protobuf:"varint,2,opt,name=campaignId,proto3" json:"campaignId,omitempty"`
}

func (x *CarCampaignCond) Reset() {
	*x = CarCampaignCond{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carCampaignProto_carCampaign_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarCampaignCond) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarCampaignCond) ProtoMessage() {}

func (x *CarCampaignCond) ProtoReflect() protoreflect.Message {
	mi := &file_carCampaignProto_carCampaign_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarCampaignCond.ProtoReflect.Descriptor instead.
func (*CarCampaignCond) Descriptor() ([]byte, []int) {
	return file_carCampaignProto_carCampaign_proto_rawDescGZIP(), []int{12}
}

func (x *CarCampaignCond) GetCarId() uint64 {
	if x != nil {
		return x.CarId
	}
	return 0
}

func (x *CarCampaignCond) GetCampaignId() uint64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

// 检查导入车辆信息结果
type CheckImportCarsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 成功总数
	SuccessCount uint32 `protobuf:"varint,1,opt,name=successCount,proto3" json:"successCount,omitempty"`
	// 失败总数
	FailedCount uint32 `protobuf:"varint,2,opt,name=failedCount,proto3" json:"failedCount,omitempty"`
	// 具体结果
	List []*CheckImportCarsItem `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *CheckImportCarsResp) Reset() {
	*x = CheckImportCarsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carCampaignProto_carCampaign_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckImportCarsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckImportCarsResp) ProtoMessage() {}

func (x *CheckImportCarsResp) ProtoReflect() protoreflect.Message {
	mi := &file_carCampaignProto_carCampaign_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckImportCarsResp.ProtoReflect.Descriptor instead.
func (*CheckImportCarsResp) Descriptor() ([]byte, []int) {
	return file_carCampaignProto_carCampaign_proto_rawDescGZIP(), []int{13}
}

func (x *CheckImportCarsResp) GetSuccessCount() uint32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *CheckImportCarsResp) GetFailedCount() uint32 {
	if x != nil {
		return x.FailedCount
	}
	return 0
}

func (x *CheckImportCarsResp) GetList() []*CheckImportCarsItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 检查导入车辆信息结果
type CheckImportCarsItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 行号
	Index uint32 `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	// 失败原因，枚举值，对应enums.carCampaignImportFailed
	FailedReasonType uint32 `protobuf:"varint,4,opt,name=failedReasonType,proto3" json:"failedReasonType,omitempty"`
	// 活动车辆
	Car *carProto.CarDto `protobuf:"bytes,5,opt,name=car,proto3" json:"car,omitempty"`
	// 导入车辆时指定的活动价格
	CampaignPrice string `protobuf:"bytes,6,opt,name=campaignPrice,proto3" json:"campaignPrice,omitempty"`
}

func (x *CheckImportCarsItem) Reset() {
	*x = CheckImportCarsItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carCampaignProto_carCampaign_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckImportCarsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckImportCarsItem) ProtoMessage() {}

func (x *CheckImportCarsItem) ProtoReflect() protoreflect.Message {
	mi := &file_carCampaignProto_carCampaign_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckImportCarsItem.ProtoReflect.Descriptor instead.
func (*CheckImportCarsItem) Descriptor() ([]byte, []int) {
	return file_carCampaignProto_carCampaign_proto_rawDescGZIP(), []int{14}
}

func (x *CheckImportCarsItem) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *CheckImportCarsItem) GetFailedReasonType() uint32 {
	if x != nil {
		return x.FailedReasonType
	}
	return 0
}

func (x *CheckImportCarsItem) GetCar() *carProto.CarDto {
	if x != nil {
		return x.Car
	}
	return nil
}

func (x *CheckImportCarsItem) GetCampaignPrice() string {
	if x != nil {
		return x.CampaignPrice
	}
	return ""
}

var File_carCampaignProto_carCampaign_proto protoreflect.FileDescriptor

var file_carCampaignProto_carCampaign_proto_rawDesc = []byte{
	0x0a, 0x22, 0x63, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x63, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x64, 0x2d, 0x62, 0x6a, 0x2f, 0x62, 0x32, 0x63,
	0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x12, 0x63, 0x61, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd5, 0x01, 0x0a, 0x0e, 0x43, 0x61, 0x72, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x3f, 0x0a, 0x08, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x61, 0x72,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61,
	0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x08, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x34, 0x0a, 0x04, 0x63, 0x61, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x61, 0x72, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x43, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x43, 0x61, 0x72, 0x52, 0x04, 0x63, 0x61, 0x72, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x46, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0xe8, 0x02, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61,
	0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64,
	0x12, 0x26, 0x0a, 0x0e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x20,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x22, 0x5f, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12,
	0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x6e, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x61, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x3c, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x74, 0x6f, 0x52,
	0x04, 0x63, 0x61, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64,
	0x73, 0x22, 0x78, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x43, 0x61, 0x72, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x61, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x72, 0x4e,
	0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x50, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xa1, 0x02, 0x0a, 0x0f,
	0x43, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x61, 0x72, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xe2, 0x01, 0x0a, 0x12, 0x43, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4c,
	0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x26,
	0x0a, 0x0e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x61, 0x72, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x19, 0x43, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61,
	0x72, 0x73, 0x12, 0x3b, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x3a, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x63, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x57, 0x69, 0x74, 0x68,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x04, 0x63, 0x61, 0x72, 0x73, 0x22, 0xdf, 0x07, 0x0a, 0x11,
	0x43, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x61,
	0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x32, 0x0a, 0x14, 0x72, 0x65, 0x73, 0x57, 0x65, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x72, 0x65, 0x73, 0x57, 0x65, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x42, 0x61, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x57, 0x65, 0x62, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x72, 0x65, 0x73, 0x57, 0x65, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x54, 0x61, 0x67, 0x12, 0x38, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x57, 0x65, 0x62, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x54, 0x61, 0x67, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x72, 0x65, 0x73, 0x57, 0x65, 0x62, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x54, 0x61, 0x67, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x3c, 0x0a,
	0x19, 0x72, 0x65, 0x73, 0x57, 0x65, 0x62, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x67,
	0x55, 0x6e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x19, 0x72, 0x65, 0x73, 0x57, 0x65, 0x62, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61,
	0x67, 0x55, 0x6e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x72,
	0x65, 0x73, 0x48, 0x35, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42,
	0x61, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x73, 0x48, 0x35, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x61, 0x72, 0x12, 0x2a, 0x0a,
	0x10, 0x72, 0x65, 0x73, 0x48, 0x35, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x61,
	0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x73, 0x48, 0x35, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x67, 0x12, 0x36, 0x0a, 0x16, 0x72, 0x65, 0x73,
	0x48, 0x35, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x67, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x72, 0x65, 0x73, 0x48, 0x35,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x54, 0x61, 0x67, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x12, 0x3a, 0x0a, 0x18, 0x72, 0x65, 0x73, 0x48, 0x35, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x54, 0x61, 0x67, 0x55, 0x6e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x18, 0x72, 0x65, 0x73, 0x48, 0x35, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x54, 0x61, 0x67, 0x55, 0x6e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x40, 0x0a, 0x1b, 0x72, 0x65, 0x73, 0x57, 0x65, 0x62, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x72, 0x65, 0x73, 0x57, 0x65, 0x62, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x67, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x67, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x4c, 0x65, 0x66, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x38, 0x0a, 0x17, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x62, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x36, 0x0a, 0x16, 0x63,
	0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x63, 0x61, 0x72,
	0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x61,
	0x72, 0x64, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x22, 0x4c, 0x0a,
	0x0e, 0x43, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x43, 0x61, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x63, 0x61, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x5b, 0x0a, 0x14, 0x43,
	0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x03, 0x63, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x03, 0x63,
	0x61, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x47, 0x0a, 0x0f, 0x43, 0x61, 0x72, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x61, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x61, 0x72, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49,
	0x64, 0x22, 0x96, 0x01, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x61, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x39, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x63, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x73,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x13, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x73, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x03, 0x63, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x03,
	0x63, 0x61, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x32, 0xde, 0x04, 0x0a, 0x0b, 0x43, 0x61,
	0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x3b, 0x0a, 0x03, 0x41, 0x64, 0x64,
	0x12, 0x20, 0x2e, 0x63, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x26,
	0x2e, 0x63, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x64, 0x44, 0x74, 0x6f,
	0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x63,
	0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x20, 0x2e, 0x63, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52,
	0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x12, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x64, 0x44, 0x74,
	0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x2e, 0x63, 0x61,
	0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x1a, 0x10,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x27, 0x2e, 0x63, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a,
	0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x61, 0x72, 0x73,
	0x12, 0x24, 0x2e, 0x63, 0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x61, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x64, 0x2d,
	0x62, 0x6a, 0x2f, 0x62, 0x32, 0x63, 0x2d, 0x63, 0x61, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x61, 0x72, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_carCampaignProto_carCampaign_proto_rawDescOnce sync.Once
	file_carCampaignProto_carCampaign_proto_rawDescData = file_carCampaignProto_carCampaign_proto_rawDesc
)

func file_carCampaignProto_carCampaign_proto_rawDescGZIP() []byte {
	file_carCampaignProto_carCampaign_proto_rawDescOnce.Do(func() {
		file_carCampaignProto_carCampaign_proto_rawDescData = protoimpl.X.CompressGZIP(file_carCampaignProto_carCampaign_proto_rawDescData)
	})
	return file_carCampaignProto_carCampaign_proto_rawDescData
}

var file_carCampaignProto_carCampaign_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_carCampaignProto_carCampaign_proto_goTypes = []interface{}{
	(*CarCampaignReq)(nil),            // 0: carCampaignProto.CarCampaignReq
	(*DeleteCarCampaignReq)(nil),      // 1: carCampaignProto.DeleteCarCampaignReq
	(*ListCarCampaignReq)(nil),        // 2: carCampaignProto.ListCarCampaignReq
	(*ListCarCampaignLogReq)(nil),     // 3: carCampaignProto.ListCarCampaignLogReq
	(*CheckImportCarsReq)(nil),        // 4: carCampaignProto.CheckImportCarsReq
	(*CheckImportCarsItemDto)(nil),    // 5: carCampaignProto.CheckImportCarsItemDto
	(*CarCampaignList)(nil),           // 6: carCampaignProto.CarCampaignList
	(*CarCampaignLogList)(nil),        // 7: carCampaignProto.CarCampaignLogList
	(*CarCampaignDetailWithCars)(nil), // 8: carCampaignProto.CarCampaignDetailWithCars
	(*CarCampaignDetail)(nil),         // 9: carCampaignProto.CarCampaignDetail
	(*CarCampaignCar)(nil),            // 10: carCampaignProto.CarCampaignCar
	(*CarCampaignWithPrice)(nil),      // 11: carCampaignProto.CarCampaignWithPrice
	(*CarCampaignCond)(nil),           // 12: carCampaignProto.CarCampaignCond
	(*CheckImportCarsResp)(nil),       // 13: carCampaignProto.CheckImportCarsResp
	(*CheckImportCarsItem)(nil),       // 14: carCampaignProto.CheckImportCarsItem
	(*common.Page)(nil),               // 15: common.Page
	(*carProto.CarDto)(nil),           // 16: car.CarDto
	(*common.IdDto)(nil),              // 17: common.IdDto
	(*common.Response)(nil),           // 18: common.Response
}
var file_carCampaignProto_carCampaign_proto_depIdxs = []int32{
	9,  // 0: carCampaignProto.CarCampaignReq.campaign:type_name -> carCampaignProto.CarCampaignDetail
	10, // 1: carCampaignProto.CarCampaignReq.cars:type_name -> carCampaignProto.CarCampaignCar
	15, // 2: carCampaignProto.ListCarCampaignReq.page:type_name -> common.Page
	15, // 3: carCampaignProto.ListCarCampaignLogReq.page:type_name -> common.Page
	5,  // 4: carCampaignProto.CheckImportCarsReq.cars:type_name -> carCampaignProto.CheckImportCarsItemDto
	9,  // 5: carCampaignProto.CarCampaignDetailWithCars.detail:type_name -> carCampaignProto.CarCampaignDetail
	11, // 6: carCampaignProto.CarCampaignDetailWithCars.cars:type_name -> carCampaignProto.CarCampaignWithPrice
	16, // 7: carCampaignProto.CarCampaignWithPrice.car:type_name -> car.CarDto
	14, // 8: carCampaignProto.CheckImportCarsResp.list:type_name -> carCampaignProto.CheckImportCarsItem
	16, // 9: carCampaignProto.CheckImportCarsItem.car:type_name -> car.CarDto
	0,  // 10: carCampaignProto.CarCampaign.Add:input_type -> carCampaignProto.CarCampaignReq
	1,  // 11: carCampaignProto.CarCampaign.Stop:input_type -> carCampaignProto.DeleteCarCampaignReq
	17, // 12: carCampaignProto.CarCampaign.Get:input_type -> common.IdDto
	2,  // 13: carCampaignProto.CarCampaign.List:input_type -> carCampaignProto.ListCarCampaignReq
	0,  // 14: carCampaignProto.CarCampaign.Update:input_type -> carCampaignProto.CarCampaignReq
	17, // 15: carCampaignProto.CarCampaign.GetCurrentActiveCampaign:input_type -> common.IdDto
	12, // 16: carCampaignProto.CarCampaign.GetCarCampaignInfo:input_type -> carCampaignProto.CarCampaignCond
	3,  // 17: carCampaignProto.CarCampaign.RemarkList:input_type -> carCampaignProto.ListCarCampaignLogReq
	4,  // 18: carCampaignProto.CarCampaign.CheckImportCars:input_type -> carCampaignProto.CheckImportCarsReq
	18, // 19: carCampaignProto.CarCampaign.Add:output_type -> common.Response
	18, // 20: carCampaignProto.CarCampaign.Stop:output_type -> common.Response
	18, // 21: carCampaignProto.CarCampaign.Get:output_type -> common.Response
	18, // 22: carCampaignProto.CarCampaign.List:output_type -> common.Response
	18, // 23: carCampaignProto.CarCampaign.Update:output_type -> common.Response
	18, // 24: carCampaignProto.CarCampaign.GetCurrentActiveCampaign:output_type -> common.Response
	18, // 25: carCampaignProto.CarCampaign.GetCarCampaignInfo:output_type -> common.Response
	18, // 26: carCampaignProto.CarCampaign.RemarkList:output_type -> common.Response
	18, // 27: carCampaignProto.CarCampaign.CheckImportCars:output_type -> common.Response
	19, // [19:28] is the sub-list for method output_type
	10, // [10:19] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_carCampaignProto_carCampaign_proto_init() }
func file_carCampaignProto_carCampaign_proto_init() {
	if File_carCampaignProto_carCampaign_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_carCampaignProto_carCampaign_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarCampaignReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carCampaignProto_carCampaign_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCarCampaignReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carCampaignProto_carCampaign_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCarCampaignReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carCampaignProto_carCampaign_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCarCampaignLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carCampaignProto_carCampaign_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckImportCarsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carCampaignProto_carCampaign_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckImportCarsItemDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carCampaignProto_carCampaign_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarCampaignList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carCampaignProto_carCampaign_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarCampaignLogList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carCampaignProto_carCampaign_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarCampaignDetailWithCars); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carCampaignProto_carCampaign_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarCampaignDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carCampaignProto_carCampaign_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarCampaignCar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carCampaignProto_carCampaign_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarCampaignWithPrice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carCampaignProto_carCampaign_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarCampaignCond); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carCampaignProto_carCampaign_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckImportCarsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carCampaignProto_carCampaign_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckImportCarsItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_carCampaignProto_carCampaign_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_carCampaignProto_carCampaign_proto_goTypes,
		DependencyIndexes: file_carCampaignProto_carCampaign_proto_depIdxs,
		MessageInfos:      file_carCampaignProto_carCampaign_proto_msgTypes,
	}.Build()
	File_carCampaignProto_carCampaign_proto = out.File
	file_carCampaignProto_carCampaign_proto_rawDesc = nil
	file_carCampaignProto_carCampaign_proto_goTypes = nil
	file_carCampaignProto_carCampaign_proto_depIdxs = nil
}
