// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: carProto/car.proto

package carProto

import (
	reportProto "github.com/cargod-bj/b2c-car-api/reportProto"
	common "github.com/cargod-bj/b2c-proto-common/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetValidStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 车辆id
	CarId uint64 `protobuf:"varint,1,opt,name=carId,proto3" json:"carId,omitempty"`
	// 获取类型：1 只获取整备相关，2 只获取交易中(不包含)前 3 全量获取
	GetType uint32 `protobuf:"varint,2,opt,name=getType,proto3" json:"getType,omitempty"`
}

func (x *GetValidStateReq) Reset() {
	*x = GetValidStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetValidStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetValidStateReq) ProtoMessage() {}

func (x *GetValidStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetValidStateReq.ProtoReflect.Descriptor instead.
func (*GetValidStateReq) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{0}
}

func (x *GetValidStateReq) GetCarId() uint64 {
	if x != nil {
		return x.CarId
	}
	return 0
}

func (x *GetValidStateReq) GetGetType() uint32 {
	if x != nil {
		return x.GetType
	}
	return 0
}

// 更改车辆状态入参对象
type ChangeCarStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 要更改的车辆id
	CarId uint64 `protobuf:"varint,1,opt,name=carId,proto3" json:"carId,omitempty"`
	// 要更改的目标state，参见car-api项目 enums.CarStateXxx 枚举进行入参
	ToState  uint32 `protobuf:"varint,2,opt,name=toState,proto3" json:"toState,omitempty"`
	City     string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	CityName string `protobuf:"bytes,4,opt,name=cityName,proto3" json:"cityName,omitempty"`
	StoreId  uint64 `protobuf:"varint,5,opt,name=storeId,proto3" json:"storeId,omitempty"`
}

func (x *ChangeCarStateReq) Reset() {
	*x = ChangeCarStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeCarStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeCarStateReq) ProtoMessage() {}

func (x *ChangeCarStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeCarStateReq.ProtoReflect.Descriptor instead.
func (*ChangeCarStateReq) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{1}
}

func (x *ChangeCarStateReq) GetCarId() uint64 {
	if x != nil {
		return x.CarId
	}
	return 0
}

func (x *ChangeCarStateReq) GetToState() uint32 {
	if x != nil {
		return x.ToState
	}
	return 0
}

func (x *ChangeCarStateReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ChangeCarStateReq) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *ChangeCarStateReq) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

type SourceParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   *common.Page `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	LeadId string       `protobuf:"bytes,2,opt,name=lead_id,json=leadId,proto3" json:"lead_id,omitempty"`
}

func (x *SourceParams) Reset() {
	*x = SourceParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceParams) ProtoMessage() {}

func (x *SourceParams) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceParams.ProtoReflect.Descriptor instead.
func (*SourceParams) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{2}
}

func (x *SourceParams) GetPage() *common.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *SourceParams) GetLeadId() string {
	if x != nil {
		return x.LeadId
	}
	return ""
}

type AddFromSourceParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DealerId       uint64 `protobuf:"varint,2,opt,name=dealerId,proto3" json:"dealerId,omitempty"`
	StoreId        uint64 `protobuf:"varint,3,opt,name=storeId,proto3" json:"storeId,omitempty"`
	DealershipType uint64 `protobuf:"varint,4,opt,name=dealershipType,proto3" json:"dealershipType,omitempty"`
	// 操作人员id，现在对应b2c-gateway库中的sys_user表中的id字段
	OperatorId uint64 `protobuf:"varint,5,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	// 收车日期，只有自营车辆有
	CollectionDate uint64 `protobuf:"varint,6,opt,name=collectionDate,proto3" json:"collectionDate,omitempty"`
}

func (x *AddFromSourceParams) Reset() {
	*x = AddFromSourceParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFromSourceParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFromSourceParams) ProtoMessage() {}

func (x *AddFromSourceParams) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFromSourceParams.ProtoReflect.Descriptor instead.
func (*AddFromSourceParams) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{3}
}

func (x *AddFromSourceParams) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddFromSourceParams) GetDealerId() uint64 {
	if x != nil {
		return x.DealerId
	}
	return 0
}

func (x *AddFromSourceParams) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *AddFromSourceParams) GetDealershipType() uint64 {
	if x != nil {
		return x.DealershipType
	}
	return 0
}

func (x *AddFromSourceParams) GetOperatorId() uint64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *AddFromSourceParams) GetCollectionDate() uint64 {
	if x != nil {
		return x.CollectionDate
	}
	return 0
}

type AddFromSourceListParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*AddFromSourceParams `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	// 操作人员id，现在对应b2c-gateway库中的sys_user表中的id字段
	OperatorId uint64 `protobuf:"varint,2,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
}

func (x *AddFromSourceListParams) Reset() {
	*x = AddFromSourceListParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddFromSourceListParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFromSourceListParams) ProtoMessage() {}

func (x *AddFromSourceListParams) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFromSourceListParams.ProtoReflect.Descriptor instead.
func (*AddFromSourceListParams) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{4}
}

func (x *AddFromSourceListParams) GetList() []*AddFromSourceParams {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AddFromSourceListParams) GetOperatorId() uint64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

//新增第三方车辆
type AddPartnerCarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作人员id，现在对应b2c-gateway库中的sys_user表中的id字段
	OperatorId         uint64 `protobuf:"varint,1,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	DealerId           uint32 `protobuf:"varint,2,opt,name=dealerId,proto3" json:"dealerId,omitempty"`
	StoreId            uint64 `protobuf:"varint,3,opt,name=storeId,proto3" json:"storeId,omitempty"`
	BrandId            uint32 `protobuf:"varint,4,opt,name=brandId,proto3" json:"brandId,omitempty"`
	ModelId            uint32 `protobuf:"varint,5,opt,name=modelId,proto3" json:"modelId,omitempty"`
	Year               uint32 `protobuf:"varint,6,opt,name=year,proto3" json:"year,omitempty"`
	VariantId          uint32 `protobuf:"varint,7,opt,name=variantId,proto3" json:"variantId,omitempty"`
	Engine             string `protobuf:"bytes,8,opt,name=engine,proto3" json:"engine,omitempty"`
	Transmission       uint32 `protobuf:"varint,9,opt,name=transmission,proto3" json:"transmission,omitempty"`
	LicensePlateNumber string `protobuf:"bytes,10,opt,name=licensePlateNumber,proto3" json:"licensePlateNumber,omitempty"`
	VinCode            string `protobuf:"bytes,11,opt,name=vinCode,proto3" json:"vinCode,omitempty"`
}

func (x *AddPartnerCarReq) Reset() {
	*x = AddPartnerCarReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPartnerCarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPartnerCarReq) ProtoMessage() {}

func (x *AddPartnerCarReq) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPartnerCarReq.ProtoReflect.Descriptor instead.
func (*AddPartnerCarReq) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{5}
}

func (x *AddPartnerCarReq) GetOperatorId() uint64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *AddPartnerCarReq) GetDealerId() uint32 {
	if x != nil {
		return x.DealerId
	}
	return 0
}

func (x *AddPartnerCarReq) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *AddPartnerCarReq) GetBrandId() uint32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *AddPartnerCarReq) GetModelId() uint32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *AddPartnerCarReq) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *AddPartnerCarReq) GetVariantId() uint32 {
	if x != nil {
		return x.VariantId
	}
	return 0
}

func (x *AddPartnerCarReq) GetEngine() string {
	if x != nil {
		return x.Engine
	}
	return ""
}

func (x *AddPartnerCarReq) GetTransmission() uint32 {
	if x != nil {
		return x.Transmission
	}
	return 0
}

func (x *AddPartnerCarReq) GetLicensePlateNumber() string {
	if x != nil {
		return x.LicensePlateNumber
	}
	return ""
}

func (x *AddPartnerCarReq) GetVinCode() string {
	if x != nil {
		return x.VinCode
	}
	return ""
}

type CarListParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  *common.Page `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Local string       `protobuf:"bytes,2,opt,name=local,proto3" json:"local,omitempty"`
	// 车辆状态
	CarState uint32 `protobuf:"varint,4,opt,name=carState,proto3" json:"carState,omitempty"`
	// 在架状态
	SaleStatus uint32 `protobuf:"varint,5,opt,name=saleStatus,proto3" json:"saleStatus,omitempty"`
	// 库存状态
	InventoryStatus uint32 `protobuf:"varint,6,opt,name=inventoryStatus,proto3" json:"inventoryStatus,omitempty"`
	// dealer类型：carsome、partner
	DealerType uint32 `protobuf:"varint,7,opt,name=dealerType,proto3" json:"dealerType,omitempty"`
	// dealer id
	DealerId uint64 `protobuf:"varint,8,opt,name=dealerId,proto3" json:"dealerId,omitempty"`
	// brand id
	BrandId uint64 `protobuf:"varint,20,opt,name=brandId,proto3" json:"brandId,omitempty"`
	// model id
	ModelId uint64 `protobuf:"varint,21,opt,name=modelId,proto3" json:"modelId,omitempty"`
	// 车辆年份
	Year uint32 `protobuf:"varint,22,opt,name=year,proto3" json:"year,omitempty"`
	// 车辆variant
	VariantId int64 `protobuf:"varint,23,opt,name=variantId,proto3" json:"variantId,omitempty"`
	// 车辆engine
	Engine string `protobuf:"bytes,24,opt,name=engine,proto3" json:"engine,omitempty"`
	// 车辆变速箱：手动、自动
	Transmission uint32 `protobuf:"varint,25,opt,name=transmission,proto3" json:"transmission,omitempty"`
	// 导入时间：开始
	ImportTimeStart uint64 `protobuf:"varint,40,opt,name=importTimeStart,proto3" json:"importTimeStart,omitempty"`
	// 导入时间：结束
	ImportTimeEnd uint64 `protobuf:"varint,41,opt,name=importTimeEnd,proto3" json:"importTimeEnd,omitempty"`
	// 更新时间：开始
	UpdateTimeStart uint64 `protobuf:"varint,42,opt,name=updateTimeStart,proto3" json:"updateTimeStart,omitempty"`
	// 更新时间：结束
	UpdateTimeEnd uint64 `protobuf:"varint,43,opt,name=updateTimeEnd,proto3" json:"updateTimeEnd,omitempty"`
	// 车辆编号
	CarNo string `protobuf:"bytes,50,opt,name=carNo,proto3" json:"carNo,omitempty"`
	// c2b中的id
	InspectionId uint64 `protobuf:"varint,51,opt,name=inspectionId,proto3" json:"inspectionId,omitempty"`
	// 车牌号
	LicensePlate string `protobuf:"bytes,52,opt,name=licensePlate,proto3" json:"licensePlate,omitempty"`
	// 下次保养时间：开始
	NextMaintenanceDateStart uint64 `protobuf:"varint,53,opt,name=nextMaintenanceDateStart,proto3" json:"nextMaintenanceDateStart,omitempty"`
	// 下次保养时间：结束
	NextMaintenanceDateEnd uint64 `protobuf:"varint,54,opt,name=nextMaintenanceDateEnd,proto3" json:"nextMaintenanceDateEnd,omitempty"`
	// 检车：开始
	PuspakomUntilDateStart uint64 `protobuf:"varint,55,opt,name=puspakomUntilDateStart,proto3" json:"puspakomUntilDateStart,omitempty"`
	// 检车：结束
	PuspakomUntilDateEnd uint64 `protobuf:"varint,56,opt,name=puspakomUntilDateEnd,proto3" json:"puspakomUntilDateEnd,omitempty"`
	// store ids
	StoreIds []uint64 `protobuf:"varint,57,rep,packed,name=storeIds,proto3" json:"storeIds,omitempty"`
	// 最小车辆价格
	MinPrice string `protobuf:"bytes,58,opt,name=minPrice,proto3" json:"minPrice,omitempty"`
	// 最大车辆价格
	MaxPrice string `protobuf:"bytes,59,opt,name=maxPrice,proto3" json:"maxPrice,omitempty"`
	// 查询时忽略的车辆id
	IgnoreIds []uint64 `protobuf:"varint,60,rep,packed,name=ignoreIds,proto3" json:"ignoreIds,omitempty"`
}

func (x *CarListParams) Reset() {
	*x = CarListParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarListParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarListParams) ProtoMessage() {}

func (x *CarListParams) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarListParams.ProtoReflect.Descriptor instead.
func (*CarListParams) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{6}
}

func (x *CarListParams) GetPage() *common.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *CarListParams) GetLocal() string {
	if x != nil {
		return x.Local
	}
	return ""
}

func (x *CarListParams) GetCarState() uint32 {
	if x != nil {
		return x.CarState
	}
	return 0
}

func (x *CarListParams) GetSaleStatus() uint32 {
	if x != nil {
		return x.SaleStatus
	}
	return 0
}

func (x *CarListParams) GetInventoryStatus() uint32 {
	if x != nil {
		return x.InventoryStatus
	}
	return 0
}

func (x *CarListParams) GetDealerType() uint32 {
	if x != nil {
		return x.DealerType
	}
	return 0
}

func (x *CarListParams) GetDealerId() uint64 {
	if x != nil {
		return x.DealerId
	}
	return 0
}

func (x *CarListParams) GetBrandId() uint64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *CarListParams) GetModelId() uint64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *CarListParams) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *CarListParams) GetVariantId() int64 {
	if x != nil {
		return x.VariantId
	}
	return 0
}

func (x *CarListParams) GetEngine() string {
	if x != nil {
		return x.Engine
	}
	return ""
}

func (x *CarListParams) GetTransmission() uint32 {
	if x != nil {
		return x.Transmission
	}
	return 0
}

func (x *CarListParams) GetImportTimeStart() uint64 {
	if x != nil {
		return x.ImportTimeStart
	}
	return 0
}

func (x *CarListParams) GetImportTimeEnd() uint64 {
	if x != nil {
		return x.ImportTimeEnd
	}
	return 0
}

func (x *CarListParams) GetUpdateTimeStart() uint64 {
	if x != nil {
		return x.UpdateTimeStart
	}
	return 0
}

func (x *CarListParams) GetUpdateTimeEnd() uint64 {
	if x != nil {
		return x.UpdateTimeEnd
	}
	return 0
}

func (x *CarListParams) GetCarNo() string {
	if x != nil {
		return x.CarNo
	}
	return ""
}

func (x *CarListParams) GetInspectionId() uint64 {
	if x != nil {
		return x.InspectionId
	}
	return 0
}

func (x *CarListParams) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

func (x *CarListParams) GetNextMaintenanceDateStart() uint64 {
	if x != nil {
		return x.NextMaintenanceDateStart
	}
	return 0
}

func (x *CarListParams) GetNextMaintenanceDateEnd() uint64 {
	if x != nil {
		return x.NextMaintenanceDateEnd
	}
	return 0
}

func (x *CarListParams) GetPuspakomUntilDateStart() uint64 {
	if x != nil {
		return x.PuspakomUntilDateStart
	}
	return 0
}

func (x *CarListParams) GetPuspakomUntilDateEnd() uint64 {
	if x != nil {
		return x.PuspakomUntilDateEnd
	}
	return 0
}

func (x *CarListParams) GetStoreIds() []uint64 {
	if x != nil {
		return x.StoreIds
	}
	return nil
}

func (x *CarListParams) GetMinPrice() string {
	if x != nil {
		return x.MinPrice
	}
	return ""
}

func (x *CarListParams) GetMaxPrice() string {
	if x != nil {
		return x.MaxPrice
	}
	return ""
}

func (x *CarListParams) GetIgnoreIds() []uint64 {
	if x != nil {
		return x.IgnoreIds
	}
	return nil
}

type CarSourceDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location        string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	InspectionId    uint64 `protobuf:"varint,2,opt,name=inspection_id,json=inspectionId,proto3" json:"inspection_id,omitempty"`
	LeadId          uint64 `protobuf:"varint,3,opt,name=lead_id,json=leadId,proto3" json:"lead_id,omitempty"`
	InspectionDate  uint64 `protobuf:"varint,4,opt,name=inspection_date,json=inspectionDate,proto3" json:"inspection_date,omitempty"`
	Inspector       string `protobuf:"bytes,5,opt,name=inspector,proto3" json:"inspector,omitempty"`
	CarBrand        string `protobuf:"bytes,6,opt,name=car_brand,json=carBrand,proto3" json:"car_brand,omitempty"`
	CarModel        string `protobuf:"bytes,7,opt,name=car_model,json=carModel,proto3" json:"car_model,omitempty"`
	CarVariant      string `protobuf:"bytes,8,opt,name=car_variant,json=carVariant,proto3" json:"car_variant,omitempty"`
	CarEngine       string `protobuf:"bytes,9,opt,name=car_engine,json=carEngine,proto3" json:"car_engine,omitempty"`
	CarYear         string `protobuf:"bytes,10,opt,name=car_year,json=carYear,proto3" json:"car_year,omitempty"`
	CarMileage      string `protobuf:"bytes,11,opt,name=car_mileage,json=carMileage,proto3" json:"car_mileage,omitempty"`
	CarTransmission string `protobuf:"bytes,12,opt,name=car_transmission,json=carTransmission,proto3" json:"car_transmission,omitempty"`
	LicensePlate    string `protobuf:"bytes,13,opt,name=license_plate,json=licensePlate,proto3" json:"license_plate,omitempty"`
	Status          int32  `protobuf:"varint,14,opt,name=status,proto3" json:"status,omitempty"`
	DealerId        uint32 `protobuf:"varint,15,opt,name=dealer_id,json=dealerId,proto3" json:"dealer_id,omitempty"`
	DealerName      string `protobuf:"bytes,16,opt,name=dealer_name,json=dealerName,proto3" json:"dealer_name,omitempty"`
}

func (x *CarSourceDto) Reset() {
	*x = CarSourceDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarSourceDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarSourceDto) ProtoMessage() {}

func (x *CarSourceDto) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarSourceDto.ProtoReflect.Descriptor instead.
func (*CarSourceDto) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{7}
}

func (x *CarSourceDto) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *CarSourceDto) GetInspectionId() uint64 {
	if x != nil {
		return x.InspectionId
	}
	return 0
}

func (x *CarSourceDto) GetLeadId() uint64 {
	if x != nil {
		return x.LeadId
	}
	return 0
}

func (x *CarSourceDto) GetInspectionDate() uint64 {
	if x != nil {
		return x.InspectionDate
	}
	return 0
}

func (x *CarSourceDto) GetInspector() string {
	if x != nil {
		return x.Inspector
	}
	return ""
}

func (x *CarSourceDto) GetCarBrand() string {
	if x != nil {
		return x.CarBrand
	}
	return ""
}

func (x *CarSourceDto) GetCarModel() string {
	if x != nil {
		return x.CarModel
	}
	return ""
}

func (x *CarSourceDto) GetCarVariant() string {
	if x != nil {
		return x.CarVariant
	}
	return ""
}

func (x *CarSourceDto) GetCarEngine() string {
	if x != nil {
		return x.CarEngine
	}
	return ""
}

func (x *CarSourceDto) GetCarYear() string {
	if x != nil {
		return x.CarYear
	}
	return ""
}

func (x *CarSourceDto) GetCarMileage() string {
	if x != nil {
		return x.CarMileage
	}
	return ""
}

func (x *CarSourceDto) GetCarTransmission() string {
	if x != nil {
		return x.CarTransmission
	}
	return ""
}

func (x *CarSourceDto) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

func (x *CarSourceDto) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CarSourceDto) GetDealerId() uint32 {
	if x != nil {
		return x.DealerId
	}
	return 0
}

func (x *CarSourceDto) GetDealerName() string {
	if x != nil {
		return x.DealerName
	}
	return ""
}

// 新增车辆dto
type CarDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 车辆id，如果为新增，则此字段为0，否则为车辆id
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 车辆的创建时间，如果为新增，或更新，则此字段无效
	CreateTime uint64 `protobuf:"varint,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// 车辆的更新时间，如果为新增，或更新，则此字段无效
	UpdateTime uint64 `protobuf:"varint,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// 车辆编码
	CarNo string `protobuf:"bytes,4,opt,name=car_no,json=carNo,proto3" json:"car_no,omitempty"`
	// 车辆状态：100 待整备，110整备中，120待核查，130核查失败，200待交易，210交易中，220已出售
	CarState uint32 `protobuf:"varint,5,opt,name=car_state,json=carState,proto3" json:"car_state,omitempty"`
	// 上架状态：1 已上架，2未上架
	SaleStatus uint32 `protobuf:"varint,6,opt,name=sale_status,json=saleStatus,proto3" json:"sale_status,omitempty"`
	// 检查报告id
	InspectionId uint64 `protobuf:"varint,101,opt,name=inspection_id,json=inspectionId,proto3" json:"inspection_id,omitempty"`
	// 车辆状态
	Status uint32 `protobuf:"varint,102,opt,name=status,proto3" json:"status,omitempty"`
	// 门店id
	StoreId uint64 `protobuf:"varint,103,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// 线索id
	LeadId uint64 `protobuf:"varint,105,opt,name=lead_id,json=leadId,proto3" json:"lead_id,omitempty"`
	// 品牌id
	BrandId uint32 `protobuf:"varint,201,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
	// 车型id
	ModelId uint32 `protobuf:"varint,202,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	// 车variant
	CarVariant string `protobuf:"bytes,203,opt,name=car_variant,json=carVariant,proto3" json:"car_variant,omitempty"`
	// 品牌id
	BrandName string `protobuf:"bytes,204,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`
	// 车型id
	ModelName string `protobuf:"bytes,205,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	// 车variant
	VariantId int64 `protobuf:"varint,206,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	// vin码
	VinCode string `protobuf:"bytes,207,opt,name=vin_code,json=vinCode,proto3" json:"vin_code,omitempty"`
	// 车牌号
	LicensePlate string `protobuf:"bytes,208,opt,name=license_plate,json=licensePlate,proto3" json:"license_plate,omitempty"`
	// carBodyType
	CarTypeId uint32 `protobuf:"varint,209,opt,name=car_type_id,json=carTypeId,proto3" json:"car_type_id,omitempty"`
	// 车辆原始信息
	CarOriginalInfo string `protobuf:"bytes,210,opt,name=car_original_info,json=carOriginalInfo,proto3" json:"car_original_info,omitempty"`
	// 车辆钥匙：1有、2没有
	SpareKey     uint32 `protobuf:"varint,211,opt,name=spare_key,json=spareKey,proto3" json:"spare_key,omitempty"`
	SpareKeyName string `protobuf:"bytes,212,opt,name=spare_key_name,json=spareKeyName,proto3" json:"spare_key_name,omitempty"`
	// 车辆保修证书：1有、2没有
	ServiceBook     uint32 `protobuf:"varint,213,opt,name=service_book,json=serviceBook,proto3" json:"service_book,omitempty"`
	ServiceBookName string `protobuf:"bytes,214,opt,name=service_book_name,json=serviceBookName,proto3" json:"service_book_name,omitempty"`
	// 主机厂保修：1有、2没有
	PrincipleWarranty     uint32 `protobuf:"varint,215,opt,name=principle_warranty,json=principleWarranty,proto3" json:"principle_warranty,omitempty"`
	PrincipleWarrantyName string `protobuf:"bytes,216,opt,name=principle_warranty_name,json=principleWarrantyName,proto3" json:"principle_warranty_name,omitempty"`
	// 主机厂保修到期日
	WarrantyExpirationDate uint64 `protobuf:"varint,217,opt,name=warranty_expiration_date,json=warrantyExpirationDate,proto3" json:"warranty_expiration_date,omitempty"`
	// 主机厂保修最大公里
	WarrantyMaxMileage uint32 `protobuf:"varint,218,opt,name=warranty_max_mileage,json=warrantyMaxMileage,proto3" json:"warranty_max_mileage,omitempty"`
	// 主机厂保修最大公里是否有限制：1有限制，2无限制
	WarrantyMaxMileageStatus uint32 `protobuf:"varint,219,opt,name=warranty_max_mileage_status,json=warrantyMaxMileageStatus,proto3" json:"warranty_max_mileage_status,omitempty"`
	// 主机厂保修最大公里是否有限制：1有限制，2无限制
	WarrantyMaxMileageStatusName string `protobuf:"bytes,220,opt,name=warranty_max_mileage_status_name,json=warrantyMaxMileageStatusName,proto3" json:"warranty_max_mileage_status_name,omitempty"`
	// 车照片url
	Image string `protobuf:"bytes,301,opt,name=image,proto3" json:"image,omitempty"`
	// 图片列表: 内饰
	ImagesInner []*CarResourceDto `protobuf:"bytes,302,rep,name=images_inner,json=imagesInner,proto3" json:"images_inner,omitempty"`
	// 图片列表：外部
	ImagesOuter []*CarResourceDto `protobuf:"bytes,303,rep,name=images_outer,json=imagesOuter,proto3" json:"images_outer,omitempty"`
	// spinCar链接
	SpinCarUrl string `protobuf:"bytes,304,opt,name=spin_car_url,json=spinCarUrl,proto3" json:"spin_car_url,omitempty"`
	// 排量
	CarEngine string `protobuf:"bytes,401,opt,name=car_engine,json=carEngine,proto3" json:"car_engine,omitempty"`
	// 年份
	CarYear uint32 `protobuf:"varint,402,opt,name=car_year,json=carYear,proto3" json:"car_year,omitempty"`
	// 里程
	CarMileage uint32 `protobuf:"varint,403,opt,name=car_mileage,json=carMileage,proto3" json:"car_mileage,omitempty"`
	// 驾驶类型 手动,自动
	CarTransmission      uint32 `protobuf:"varint,404,opt,name=car_transmission,json=carTransmission,proto3" json:"car_transmission,omitempty"`
	CarTransmissionName  string `protobuf:"bytes,405,opt,name=car_transmission_name,json=carTransmissionName,proto3" json:"car_transmission_name,omitempty"`
	RegistrationType     uint32 `protobuf:"varint,406,opt,name=registration_type,json=registrationType,proto3" json:"registration_type,omitempty"`
	RegistrationTypeName string `protobuf:"bytes,407,opt,name=registration_type_name,json=registrationTypeName,proto3" json:"registration_type_name,omitempty"`
	RegistrationDate     uint64 `protobuf:"varint,408,opt,name=registration_date,json=registrationDate,proto3" json:"registration_date,omitempty"`
	Seat                 uint32 `protobuf:"varint,409,opt,name=seat,proto3" json:"seat,omitempty"`
	Color                uint32 `protobuf:"varint,410,opt,name=color,proto3" json:"color,omitempty"`
	FuelType             uint32 `protobuf:"varint,411,opt,name=fuel_type,json=fuelType,proto3" json:"fuel_type,omitempty"`
	FuelTypeName         string `protobuf:"bytes,412,opt,name=fuel_type_name,json=fuelTypeName,proto3" json:"fuel_type_name,omitempty"`
	ColorName            string `protobuf:"bytes,413,opt,name=colorName,proto3" json:"colorName,omitempty"`
	// 车辆上绑定的tag, 单选
	Tag *CarTags `protobuf:"bytes,414,opt,name=tag,proto3" json:"tag,omitempty"`
	// 车辆描述，主要是partner填写
	Description string `protobuf:"bytes,415,opt,name=description,proto3" json:"description,omitempty"`
	// c2b中的颜色
	C2BColor string `protobuf:"bytes,416,opt,name=c2b_color,json=c2bColor,proto3" json:"c2b_color,omitempty"`
	// c2b中的fuelType
	C2BFuelType string `protobuf:"bytes,417,opt,name=c2b_fuel_type,json=c2bFuelType,proto3" json:"c2b_fuel_type,omitempty"`
	// 下次整备日期
	NextMaintenanceDate uint64 `protobuf:"varint,418,opt,name=next_maintenance_date,json=nextMaintenanceDate,proto3" json:"next_maintenance_date,omitempty"`
	// 总费用
	TotalCost string `protobuf:"bytes,419,opt,name=totalCost,proto3" json:"totalCost,omitempty"`
	// 整备次数
	ReconditionTimes uint32 `protobuf:"varint,420,opt,name=reconditionTimes,proto3" json:"reconditionTimes,omitempty"`
	// 整备总花费
	ReconditionCostCount string `protobuf:"bytes,421,opt,name=reconditionCostCount,proto3" json:"reconditionCostCount,omitempty"`
	// 保险总次数
	MaintenanceTimes uint32 `protobuf:"varint,422,opt,name=maintenanceTimes,proto3" json:"maintenanceTimes,omitempty"`
	// 保险总费用
	MaintenanceCostCount string `protobuf:"bytes,423,opt,name=maintenanceCostCount,proto3" json:"maintenanceCostCount,omitempty"`
	// 验车总次数
	PuspakomTimes uint32 `protobuf:"varint,424,opt,name=puspakomTimes,proto3" json:"puspakomTimes,omitempty"`
	// 验车总费用
	PuspakomCostCount string `protobuf:"bytes,425,opt,name=puspakomCostCount,proto3" json:"puspakomCostCount,omitempty"`
	// 收车日期，只对carsome车辆有效
	CollectionDate uint64 `protobuf:"varint,426,opt,name=collectionDate,proto3" json:"collectionDate,omitempty"`
	// 运费次数
	LogisticTimes uint32 `protobuf:"varint,427,opt,name=logisticTimes,proto3" json:"logisticTimes,omitempty"`
	// 运费总数
	LogisticCostCount string `protobuf:"bytes,428,opt,name=logisticCostCount,proto3" json:"logisticCostCount,omitempty"`
	// 卖价
	ExpSellingPrice string `protobuf:"bytes,501,opt,name=exp_selling_price,json=expSellingPrice,proto3" json:"exp_selling_price,omitempty"`
	// 收车价
	PurchasePrice string `protobuf:"bytes,502,opt,name=purchase_price,json=purchasePrice,proto3" json:"purchase_price,omitempty"`
	// 交易佣金
	HandlingFee string `protobuf:"bytes,503,opt,name=handling_fee,json=handlingFee,proto3" json:"handling_fee,omitempty"`
	// 来源
	Source string `protobuf:"bytes,601,opt,name=source,proto3" json:"source,omitempty"`
	// 城市地区
	Location string `protobuf:"bytes,701,opt,name=location,proto3" json:"location,omitempty"`
	// 城市地区id
	LocationId uint64 `protobuf:"varint,702,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	// dealerId
	DealerId uint64 `protobuf:"varint,703,opt,name=dealer_id,json=dealerId,proto3" json:"dealer_id,omitempty"`
	// dealerType
	DealerType uint32 `protobuf:"varint,704,opt,name=dealer_type,json=dealerType,proto3" json:"dealer_type,omitempty"`
	// dealerTypeName
	DealerTypeName string `protobuf:"bytes,705,opt,name=dealer_type_name,json=dealerTypeName,proto3" json:"dealer_type_name,omitempty"`
	// 详细地址，如：地下停车场，B105车位
	LocationAddress string `protobuf:"bytes,706,opt,name=location_address,json=locationAddress,proto3" json:"location_address,omitempty"`
	// 车辆名称
	CarName string `protobuf:"bytes,707,opt,name=carName,proto3" json:"carName,omitempty"`
	// 整备渠道
	ReconditionChannel string `protobuf:"bytes,801,opt,name=recondition_channel,json=reconditionChannel,proto3" json:"recondition_channel,omitempty"`
	// 整备金
	ReconditionCost string `protobuf:"bytes,802,opt,name=recondition_cost,json=reconditionCost,proto3" json:"recondition_cost,omitempty"`
	// 整备项目
	ReconditionContent string `protobuf:"bytes,803,opt,name=recondition_content,json=reconditionContent,proto3" json:"recondition_content,omitempty"`
	// 整备单据
	ReconditionFiles []*CarResourceDto `protobuf:"bytes,804,rep,name=recondition_files,json=reconditionFiles,proto3" json:"recondition_files,omitempty"`
	// 库存状态
	InventoryStatus uint32 `protobuf:"varint,901,opt,name=inventory_status,json=inventoryStatus,proto3" json:"inventory_status,omitempty"`
	City            string `protobuf:"bytes,902,opt,name=city,proto3" json:"city,omitempty"`
	CityName        string `protobuf:"bytes,903,opt,name=cityName,proto3" json:"cityName,omitempty"`
	// 活动
	CampaignId           uint64 `protobuf:"varint,1001,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	CampaignPrice        string `protobuf:"bytes,1002,opt,name=campaign_price,json=campaignPrice,proto3" json:"campaign_price,omitempty"`
	CampaignName         string `protobuf:"bytes,1003,opt,name=campaignName,proto3" json:"campaignName,omitempty"`                 //限时活动名称
	ResWebDetailPriceBar string `protobuf:"bytes,1004,opt,name=resWebDetailPriceBar,proto3" json:"resWebDetailPriceBar,omitempty"` //限时活动详情图片
	ResWebListItemTag    string `protobuf:"bytes,1005,opt,name=resWebListItemTag,proto3" json:"resWebListItemTag,omitempty"`       //限时活动背景
	ResH5DetailPriceBar  string `protobuf:"bytes,1006,opt,name=resH5DetailPriceBar,proto3" json:"resH5DetailPriceBar,omitempty"`   //限时活动详情图片
	ResH5ListItemTag     string `protobuf:"bytes,1007,opt,name=resH5ListItemTag,proto3" json:"resH5ListItemTag,omitempty"`         //限时活动背景
}

func (x *CarDto) Reset() {
	*x = CarDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarDto) ProtoMessage() {}

func (x *CarDto) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarDto.ProtoReflect.Descriptor instead.
func (*CarDto) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{8}
}

func (x *CarDto) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CarDto) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CarDto) GetUpdateTime() uint64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *CarDto) GetCarNo() string {
	if x != nil {
		return x.CarNo
	}
	return ""
}

func (x *CarDto) GetCarState() uint32 {
	if x != nil {
		return x.CarState
	}
	return 0
}

func (x *CarDto) GetSaleStatus() uint32 {
	if x != nil {
		return x.SaleStatus
	}
	return 0
}

func (x *CarDto) GetInspectionId() uint64 {
	if x != nil {
		return x.InspectionId
	}
	return 0
}

func (x *CarDto) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CarDto) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *CarDto) GetLeadId() uint64 {
	if x != nil {
		return x.LeadId
	}
	return 0
}

func (x *CarDto) GetBrandId() uint32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *CarDto) GetModelId() uint32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *CarDto) GetCarVariant() string {
	if x != nil {
		return x.CarVariant
	}
	return ""
}

func (x *CarDto) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *CarDto) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *CarDto) GetVariantId() int64 {
	if x != nil {
		return x.VariantId
	}
	return 0
}

func (x *CarDto) GetVinCode() string {
	if x != nil {
		return x.VinCode
	}
	return ""
}

func (x *CarDto) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

func (x *CarDto) GetCarTypeId() uint32 {
	if x != nil {
		return x.CarTypeId
	}
	return 0
}

func (x *CarDto) GetCarOriginalInfo() string {
	if x != nil {
		return x.CarOriginalInfo
	}
	return ""
}

func (x *CarDto) GetSpareKey() uint32 {
	if x != nil {
		return x.SpareKey
	}
	return 0
}

func (x *CarDto) GetSpareKeyName() string {
	if x != nil {
		return x.SpareKeyName
	}
	return ""
}

func (x *CarDto) GetServiceBook() uint32 {
	if x != nil {
		return x.ServiceBook
	}
	return 0
}

func (x *CarDto) GetServiceBookName() string {
	if x != nil {
		return x.ServiceBookName
	}
	return ""
}

func (x *CarDto) GetPrincipleWarranty() uint32 {
	if x != nil {
		return x.PrincipleWarranty
	}
	return 0
}

func (x *CarDto) GetPrincipleWarrantyName() string {
	if x != nil {
		return x.PrincipleWarrantyName
	}
	return ""
}

func (x *CarDto) GetWarrantyExpirationDate() uint64 {
	if x != nil {
		return x.WarrantyExpirationDate
	}
	return 0
}

func (x *CarDto) GetWarrantyMaxMileage() uint32 {
	if x != nil {
		return x.WarrantyMaxMileage
	}
	return 0
}

func (x *CarDto) GetWarrantyMaxMileageStatus() uint32 {
	if x != nil {
		return x.WarrantyMaxMileageStatus
	}
	return 0
}

func (x *CarDto) GetWarrantyMaxMileageStatusName() string {
	if x != nil {
		return x.WarrantyMaxMileageStatusName
	}
	return ""
}

func (x *CarDto) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CarDto) GetImagesInner() []*CarResourceDto {
	if x != nil {
		return x.ImagesInner
	}
	return nil
}

func (x *CarDto) GetImagesOuter() []*CarResourceDto {
	if x != nil {
		return x.ImagesOuter
	}
	return nil
}

func (x *CarDto) GetSpinCarUrl() string {
	if x != nil {
		return x.SpinCarUrl
	}
	return ""
}

func (x *CarDto) GetCarEngine() string {
	if x != nil {
		return x.CarEngine
	}
	return ""
}

func (x *CarDto) GetCarYear() uint32 {
	if x != nil {
		return x.CarYear
	}
	return 0
}

func (x *CarDto) GetCarMileage() uint32 {
	if x != nil {
		return x.CarMileage
	}
	return 0
}

func (x *CarDto) GetCarTransmission() uint32 {
	if x != nil {
		return x.CarTransmission
	}
	return 0
}

func (x *CarDto) GetCarTransmissionName() string {
	if x != nil {
		return x.CarTransmissionName
	}
	return ""
}

func (x *CarDto) GetRegistrationType() uint32 {
	if x != nil {
		return x.RegistrationType
	}
	return 0
}

func (x *CarDto) GetRegistrationTypeName() string {
	if x != nil {
		return x.RegistrationTypeName
	}
	return ""
}

func (x *CarDto) GetRegistrationDate() uint64 {
	if x != nil {
		return x.RegistrationDate
	}
	return 0
}

func (x *CarDto) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *CarDto) GetColor() uint32 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (x *CarDto) GetFuelType() uint32 {
	if x != nil {
		return x.FuelType
	}
	return 0
}

func (x *CarDto) GetFuelTypeName() string {
	if x != nil {
		return x.FuelTypeName
	}
	return ""
}

func (x *CarDto) GetColorName() string {
	if x != nil {
		return x.ColorName
	}
	return ""
}

func (x *CarDto) GetTag() *CarTags {
	if x != nil {
		return x.Tag
	}
	return nil
}

func (x *CarDto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CarDto) GetC2BColor() string {
	if x != nil {
		return x.C2BColor
	}
	return ""
}

func (x *CarDto) GetC2BFuelType() string {
	if x != nil {
		return x.C2BFuelType
	}
	return ""
}

func (x *CarDto) GetNextMaintenanceDate() uint64 {
	if x != nil {
		return x.NextMaintenanceDate
	}
	return 0
}

func (x *CarDto) GetTotalCost() string {
	if x != nil {
		return x.TotalCost
	}
	return ""
}

func (x *CarDto) GetReconditionTimes() uint32 {
	if x != nil {
		return x.ReconditionTimes
	}
	return 0
}

func (x *CarDto) GetReconditionCostCount() string {
	if x != nil {
		return x.ReconditionCostCount
	}
	return ""
}

func (x *CarDto) GetMaintenanceTimes() uint32 {
	if x != nil {
		return x.MaintenanceTimes
	}
	return 0
}

func (x *CarDto) GetMaintenanceCostCount() string {
	if x != nil {
		return x.MaintenanceCostCount
	}
	return ""
}

func (x *CarDto) GetPuspakomTimes() uint32 {
	if x != nil {
		return x.PuspakomTimes
	}
	return 0
}

func (x *CarDto) GetPuspakomCostCount() string {
	if x != nil {
		return x.PuspakomCostCount
	}
	return ""
}

func (x *CarDto) GetCollectionDate() uint64 {
	if x != nil {
		return x.CollectionDate
	}
	return 0
}

func (x *CarDto) GetLogisticTimes() uint32 {
	if x != nil {
		return x.LogisticTimes
	}
	return 0
}

func (x *CarDto) GetLogisticCostCount() string {
	if x != nil {
		return x.LogisticCostCount
	}
	return ""
}

func (x *CarDto) GetExpSellingPrice() string {
	if x != nil {
		return x.ExpSellingPrice
	}
	return ""
}

func (x *CarDto) GetPurchasePrice() string {
	if x != nil {
		return x.PurchasePrice
	}
	return ""
}

func (x *CarDto) GetHandlingFee() string {
	if x != nil {
		return x.HandlingFee
	}
	return ""
}

func (x *CarDto) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *CarDto) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *CarDto) GetLocationId() uint64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *CarDto) GetDealerId() uint64 {
	if x != nil {
		return x.DealerId
	}
	return 0
}

func (x *CarDto) GetDealerType() uint32 {
	if x != nil {
		return x.DealerType
	}
	return 0
}

func (x *CarDto) GetDealerTypeName() string {
	if x != nil {
		return x.DealerTypeName
	}
	return ""
}

func (x *CarDto) GetLocationAddress() string {
	if x != nil {
		return x.LocationAddress
	}
	return ""
}

func (x *CarDto) GetCarName() string {
	if x != nil {
		return x.CarName
	}
	return ""
}

func (x *CarDto) GetReconditionChannel() string {
	if x != nil {
		return x.ReconditionChannel
	}
	return ""
}

func (x *CarDto) GetReconditionCost() string {
	if x != nil {
		return x.ReconditionCost
	}
	return ""
}

func (x *CarDto) GetReconditionContent() string {
	if x != nil {
		return x.ReconditionContent
	}
	return ""
}

func (x *CarDto) GetReconditionFiles() []*CarResourceDto {
	if x != nil {
		return x.ReconditionFiles
	}
	return nil
}

func (x *CarDto) GetInventoryStatus() uint32 {
	if x != nil {
		return x.InventoryStatus
	}
	return 0
}

func (x *CarDto) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CarDto) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *CarDto) GetCampaignId() uint64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

func (x *CarDto) GetCampaignPrice() string {
	if x != nil {
		return x.CampaignPrice
	}
	return ""
}

func (x *CarDto) GetCampaignName() string {
	if x != nil {
		return x.CampaignName
	}
	return ""
}

func (x *CarDto) GetResWebDetailPriceBar() string {
	if x != nil {
		return x.ResWebDetailPriceBar
	}
	return ""
}

func (x *CarDto) GetResWebListItemTag() string {
	if x != nil {
		return x.ResWebListItemTag
	}
	return ""
}

func (x *CarDto) GetResH5DetailPriceBar() string {
	if x != nil {
		return x.ResH5DetailPriceBar
	}
	return ""
}

func (x *CarDto) GetResH5ListItemTag() string {
	if x != nil {
		return x.ResH5ListItemTag
	}
	return ""
}

// 车辆更新Dto
type UpdateCarDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Car *CarDto `protobuf:"bytes,1,opt,name=car,proto3" json:"car,omitempty"`
	// 当编辑时变更的point信息
	Points []*reportProto.ReportDamagePointDto `protobuf:"bytes,2,rep,name=points,proto3" json:"points,omitempty"`
	Remark string                              `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
	// 操作人员id，现在对应b2c-gateway库中的sys_user表中的id字段
	OperatorId uint64 `protobuf:"varint,4,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
}

func (x *UpdateCarDto) Reset() {
	*x = UpdateCarDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCarDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCarDto) ProtoMessage() {}

func (x *UpdateCarDto) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCarDto.ProtoReflect.Descriptor instead.
func (*UpdateCarDto) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateCarDto) GetCar() *CarDto {
	if x != nil {
		return x.Car
	}
	return nil
}

func (x *UpdateCarDto) GetPoints() []*reportProto.ReportDamagePointDto {
	if x != nil {
		return x.Points
	}
	return nil
}

func (x *UpdateCarDto) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateCarDto) GetOperatorId() uint64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

// 车辆的id
type CarIdsDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 车辆id
	Ids   []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Local string   `protobuf:"bytes,2,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *CarIdsDto) Reset() {
	*x = CarIdsDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarIdsDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarIdsDto) ProtoMessage() {}

func (x *CarIdsDto) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarIdsDto.ProtoReflect.Descriptor instead.
func (*CarIdsDto) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{10}
}

func (x *CarIdsDto) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *CarIdsDto) GetLocal() string {
	if x != nil {
		return x.Local
	}
	return ""
}

// 车辆的id
type CarSimpleInfoParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 查询的车辆ids
	Ids   []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Local string   `protobuf:"bytes,2,opt,name=local,proto3" json:"local,omitempty"`
	// 是否查询tags，默认为false
	UseTags bool `protobuf:"varint,3,opt,name=useTags,proto3" json:"useTags,omitempty"`
	// 是否查询内饰照片，默认为false
	UseInnerImages bool `protobuf:"varint,4,opt,name=useInnerImages,proto3" json:"useInnerImages,omitempty"`
	// 是否查询外饰照片，默认为false
	UseOuterImages bool `protobuf:"varint,5,opt,name=useOuterImages,proto3" json:"useOuterImages,omitempty"`
	// 是否查询整备信息，默认为false
	UseRecondition bool `protobuf:"varint,6,opt,name=useRecondition,proto3" json:"useRecondition,omitempty"`
	// 是否查询活动信息，默认为false
	UseCampaign bool `protobuf:"varint,7,opt,name=useCampaign,proto3" json:"useCampaign,omitempty"`
	// 是否查询费用信息，默认为false
	UseCost bool `protobuf:"varint,8,opt,name=useCost,proto3" json:"useCost,omitempty"`
}

func (x *CarSimpleInfoParams) Reset() {
	*x = CarSimpleInfoParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarSimpleInfoParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarSimpleInfoParams) ProtoMessage() {}

func (x *CarSimpleInfoParams) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarSimpleInfoParams.ProtoReflect.Descriptor instead.
func (*CarSimpleInfoParams) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{11}
}

func (x *CarSimpleInfoParams) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *CarSimpleInfoParams) GetLocal() string {
	if x != nil {
		return x.Local
	}
	return ""
}

func (x *CarSimpleInfoParams) GetUseTags() bool {
	if x != nil {
		return x.UseTags
	}
	return false
}

func (x *CarSimpleInfoParams) GetUseInnerImages() bool {
	if x != nil {
		return x.UseInnerImages
	}
	return false
}

func (x *CarSimpleInfoParams) GetUseOuterImages() bool {
	if x != nil {
		return x.UseOuterImages
	}
	return false
}

func (x *CarSimpleInfoParams) GetUseRecondition() bool {
	if x != nil {
		return x.UseRecondition
	}
	return false
}

func (x *CarSimpleInfoParams) GetUseCampaign() bool {
	if x != nil {
		return x.UseCampaign
	}
	return false
}

func (x *CarSimpleInfoParams) GetUseCost() bool {
	if x != nil {
		return x.UseCost
	}
	return false
}

type CarDtoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarDtoList []*CarDto `protobuf:"bytes,1,rep,name=CarDtoList,proto3" json:"CarDtoList,omitempty"`
}

func (x *CarDtoList) Reset() {
	*x = CarDtoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarDtoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarDtoList) ProtoMessage() {}

func (x *CarDtoList) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarDtoList.ProtoReflect.Descriptor instead.
func (*CarDtoList) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{12}
}

func (x *CarDtoList) GetCarDtoList() []*CarDto {
	if x != nil {
		return x.CarDtoList
	}
	return nil
}

type CarTags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CarTags) Reset() {
	*x = CarTags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarTags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarTags) ProtoMessage() {}

func (x *CarTags) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarTags.ProtoReflect.Descriptor instead.
func (*CarTags) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{13}
}

func (x *CarTags) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CarTags) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CarResourceDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Url  string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *CarResourceDto) Reset() {
	*x = CarResourceDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarResourceDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarResourceDto) ProtoMessage() {}

func (x *CarResourceDto) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarResourceDto.ProtoReflect.Descriptor instead.
func (*CarResourceDto) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{14}
}

func (x *CarResourceDto) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CarResourceDto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CarResourceDto) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 车辆的id
type CarNoDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 车辆id
	CarNo     string   `protobuf:"bytes,1,opt,name=carNo,proto3" json:"carNo,omitempty"`
	StoreId   uint64   `protobuf:"varint,2,opt,name=storeId,proto3" json:"storeId,omitempty"`
	CarStatus []uint32 `protobuf:"varint,4,rep,packed,name=carStatus,proto3" json:"carStatus,omitempty"`
	Local     string   `protobuf:"bytes,5,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *CarNoDto) Reset() {
	*x = CarNoDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarNoDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarNoDto) ProtoMessage() {}

func (x *CarNoDto) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarNoDto.ProtoReflect.Descriptor instead.
func (*CarNoDto) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{15}
}

func (x *CarNoDto) GetCarNo() string {
	if x != nil {
		return x.CarNo
	}
	return ""
}

func (x *CarNoDto) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *CarNoDto) GetCarStatus() []uint32 {
	if x != nil {
		return x.CarStatus
	}
	return nil
}

func (x *CarNoDto) GetLocal() string {
	if x != nil {
		return x.Local
	}
	return ""
}

// 车辆no的请求实体
type CarNoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 车辆no
	CarNo string `protobuf:"bytes,1,opt,name=carNo,proto3" json:"carNo,omitempty"`
	// 本地化信息
	Local string `protobuf:"bytes,10,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *CarNoReq) Reset() {
	*x = CarNoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarNoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarNoReq) ProtoMessage() {}

func (x *CarNoReq) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarNoReq.ProtoReflect.Descriptor instead.
func (*CarNoReq) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{16}
}

func (x *CarNoReq) GetCarNo() string {
	if x != nil {
		return x.CarNo
	}
	return ""
}

func (x *CarNoReq) GetLocal() string {
	if x != nil {
		return x.Local
	}
	return ""
}

// 获取车辆详情页的访问token的返回结果。
type CarDetailAccessDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Url   string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *CarDetailAccessDataResp) Reset() {
	*x = CarDetailAccessDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarDetailAccessDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarDetailAccessDataResp) ProtoMessage() {}

func (x *CarDetailAccessDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarDetailAccessDataResp.ProtoReflect.Descriptor instead.
func (*CarDetailAccessDataResp) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{17}
}

func (x *CarDetailAccessDataResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CarDetailAccessDataResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 车辆的no或lp
type CarNoOrLicensePlateDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 车辆id
	CarNo        string `protobuf:"bytes,1,opt,name=carNo,proto3" json:"carNo,omitempty"`
	LicensePlate string `protobuf:"bytes,2,opt,name=licensePlate,proto3" json:"licensePlate,omitempty"`
}

func (x *CarNoOrLicensePlateDto) Reset() {
	*x = CarNoOrLicensePlateDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarNoOrLicensePlateDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarNoOrLicensePlateDto) ProtoMessage() {}

func (x *CarNoOrLicensePlateDto) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarNoOrLicensePlateDto.ProtoReflect.Descriptor instead.
func (*CarNoOrLicensePlateDto) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{18}
}

func (x *CarNoOrLicensePlateDto) GetCarNo() string {
	if x != nil {
		return x.CarNo
	}
	return ""
}

func (x *CarNoOrLicensePlateDto) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

// 车辆变更门店参数
type CarTransferStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 车辆id
	CarId   uint64 `protobuf:"varint,1,opt,name=carId,proto3" json:"carId,omitempty"`
	StoreId uint64 `protobuf:"varint,2,opt,name=storeId,proto3" json:"storeId,omitempty"`
	Remark  string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *CarTransferStore) Reset() {
	*x = CarTransferStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarTransferStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarTransferStore) ProtoMessage() {}

func (x *CarTransferStore) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarTransferStore.ProtoReflect.Descriptor instead.
func (*CarTransferStore) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{19}
}

func (x *CarTransferStore) GetCarId() uint64 {
	if x != nil {
		return x.CarId
	}
	return 0
}

func (x *CarTransferStore) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *CarTransferStore) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 车辆变更门店记录
type CarTransferStoreList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         *common.Page `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	CarNo        string       `protobuf:"bytes,2,opt,name=carNo,proto3" json:"carNo,omitempty"`
	LicensePlate string       `protobuf:"bytes,3,opt,name=licensePlate,proto3" json:"licensePlate,omitempty"`
	FromStoreIds []string     `protobuf:"bytes,4,rep,name=fromStoreIds,proto3" json:"fromStoreIds,omitempty"`
	ToStoreIds   []string     `protobuf:"bytes,5,rep,name=toStoreIds,proto3" json:"toStoreIds,omitempty"`
	OperatorId   uint64       `protobuf:"varint,6,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	BeginTime    uint64       `protobuf:"varint,7,opt,name=beginTime,proto3" json:"beginTime,omitempty"`
	EndTime      uint64       `protobuf:"varint,8,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Local        string       `protobuf:"bytes,9,opt,name=local,proto3" json:"local,omitempty"`
	FromStoreId  string       `protobuf:"bytes,10,opt,name=fromStoreId,proto3" json:"fromStoreId,omitempty"`
	ToStoreId    string       `protobuf:"bytes,11,opt,name=toStoreId,proto3" json:"toStoreId,omitempty"`
}

func (x *CarTransferStoreList) Reset() {
	*x = CarTransferStoreList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarTransferStoreList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarTransferStoreList) ProtoMessage() {}

func (x *CarTransferStoreList) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarTransferStoreList.ProtoReflect.Descriptor instead.
func (*CarTransferStoreList) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{20}
}

func (x *CarTransferStoreList) GetPage() *common.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *CarTransferStoreList) GetCarNo() string {
	if x != nil {
		return x.CarNo
	}
	return ""
}

func (x *CarTransferStoreList) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

func (x *CarTransferStoreList) GetFromStoreIds() []string {
	if x != nil {
		return x.FromStoreIds
	}
	return nil
}

func (x *CarTransferStoreList) GetToStoreIds() []string {
	if x != nil {
		return x.ToStoreIds
	}
	return nil
}

func (x *CarTransferStoreList) GetOperatorId() uint64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *CarTransferStoreList) GetBeginTime() uint64 {
	if x != nil {
		return x.BeginTime
	}
	return 0
}

func (x *CarTransferStoreList) GetEndTime() uint64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *CarTransferStoreList) GetLocal() string {
	if x != nil {
		return x.Local
	}
	return ""
}

func (x *CarTransferStoreList) GetFromStoreId() string {
	if x != nil {
		return x.FromStoreId
	}
	return ""
}

func (x *CarTransferStoreList) GetToStoreId() string {
	if x != nil {
		return x.ToStoreId
	}
	return ""
}

type CarTransferStoreDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CarId        uint64 `protobuf:"varint,2,opt,name=carId,proto3" json:"carId,omitempty"`
	FromStoreId  uint64 `protobuf:"varint,3,opt,name=fromStoreId,proto3" json:"fromStoreId,omitempty"`
	ToStoreId    uint64 `protobuf:"varint,4,opt,name=toStoreId,proto3" json:"toStoreId,omitempty"`
	OperatorId   uint64 `protobuf:"varint,5,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	Remark       string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	CreateTime   uint64 `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime   uint64 `protobuf:"varint,8,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	CarNo        string `protobuf:"bytes,9,opt,name=carNo,proto3" json:"carNo,omitempty"`
	LicensePlate string `protobuf:"bytes,10,opt,name=licensePlate,proto3" json:"licensePlate,omitempty"`
	CarName      string `protobuf:"bytes,11,opt,name=carName,proto3" json:"carName,omitempty"`
	Operator     string `protobuf:"bytes,12,opt,name=operator,proto3" json:"operator,omitempty"`
	FromStore    string `protobuf:"bytes,13,opt,name=fromStore,proto3" json:"fromStore,omitempty"`
	ToStore      string `protobuf:"bytes,14,opt,name=toStore,proto3" json:"toStore,omitempty"`
	Local        string `protobuf:"bytes,15,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *CarTransferStoreDto) Reset() {
	*x = CarTransferStoreDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarTransferStoreDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarTransferStoreDto) ProtoMessage() {}

func (x *CarTransferStoreDto) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarTransferStoreDto.ProtoReflect.Descriptor instead.
func (*CarTransferStoreDto) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{21}
}

func (x *CarTransferStoreDto) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CarTransferStoreDto) GetCarId() uint64 {
	if x != nil {
		return x.CarId
	}
	return 0
}

func (x *CarTransferStoreDto) GetFromStoreId() uint64 {
	if x != nil {
		return x.FromStoreId
	}
	return 0
}

func (x *CarTransferStoreDto) GetToStoreId() uint64 {
	if x != nil {
		return x.ToStoreId
	}
	return 0
}

func (x *CarTransferStoreDto) GetOperatorId() uint64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *CarTransferStoreDto) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CarTransferStoreDto) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CarTransferStoreDto) GetUpdateTime() uint64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *CarTransferStoreDto) GetCarNo() string {
	if x != nil {
		return x.CarNo
	}
	return ""
}

func (x *CarTransferStoreDto) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

func (x *CarTransferStoreDto) GetCarName() string {
	if x != nil {
		return x.CarName
	}
	return ""
}

func (x *CarTransferStoreDto) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *CarTransferStoreDto) GetFromStore() string {
	if x != nil {
		return x.FromStore
	}
	return ""
}

func (x *CarTransferStoreDto) GetToStore() string {
	if x != nil {
		return x.ToStore
	}
	return ""
}

func (x *CarTransferStoreDto) GetLocal() string {
	if x != nil {
		return x.Local
	}
	return ""
}

type CarLicensePlateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 车辆id
	CarLicensePlate string `protobuf:"bytes,1,opt,name=carLicensePlate,proto3" json:"carLicensePlate,omitempty"`
	Local           string `protobuf:"bytes,2,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *CarLicensePlateReq) Reset() {
	*x = CarLicensePlateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carProto_car_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarLicensePlateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarLicensePlateReq) ProtoMessage() {}

func (x *CarLicensePlateReq) ProtoReflect() protoreflect.Message {
	mi := &file_carProto_car_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarLicensePlateReq.ProtoReflect.Descriptor instead.
func (*CarLicensePlateReq) Descriptor() ([]byte, []int) {
	return file_carProto_car_proto_rawDescGZIP(), []int{22}
}

func (x *CarLicensePlateReq) GetCarLicensePlate() string {
	if x != nil {
		return x.CarLicensePlate
	}
	return ""
}

func (x *CarLicensePlateReq) GetLocal() string {
	if x != nil {
		return x.Local
	}
	return ""
}

var File_carProto_car_proto protoreflect.FileDescriptor

var file_carProto_car_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x61, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x63, 0x61, 0x72, 0x1a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x64, 0x2d, 0x62, 0x6a, 0x2f,
	0x62, 0x32, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x63, 0x61, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x65, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x61, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x61, 0x72, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x64, 0x22, 0x49, 0x0a, 0x0c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x49, 0x64, 0x22, 0xcb, 0x01,
	0x0a, 0x13, 0x41, 0x64, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x64,
	0x65, 0x61, 0x6c, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x64, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x22, 0x67, 0x0a, 0x17, 0x41,
	0x64, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x72,
	0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x22, 0xd4, 0x02, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x43, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x61,
	0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x61,
	0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xdb, 0x07, 0x0a, 0x0d,
	0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x61, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x64, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64,
	0x65, 0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x79,
	0x65, 0x61, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x28, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x45, 0x6e, 0x64, 0x18, 0x29, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x69, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x2a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x45, 0x6e, 0x64, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x72,
	0x4e, 0x6f, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x72, 0x4e, 0x6f, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x33, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c,
	0x61, 0x74, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x6e, 0x65, 0x78, 0x74, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x35, 0x20, 0x01, 0x28, 0x04, 0x52, 0x18, 0x6e, 0x65, 0x78, 0x74, 0x4d,
	0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x6e, 0x65, 0x78, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x36, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x16, 0x6e, 0x65, 0x78, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x44, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x70,
	0x75, 0x73, 0x70, 0x61, 0x6b, 0x6f, 0x6d, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x37, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x70, 0x75, 0x73,
	0x70, 0x61, 0x6b, 0x6f, 0x6d, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x70, 0x75, 0x73, 0x70, 0x61, 0x6b, 0x6f, 0x6d, 0x55,
	0x6e, 0x74, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x38, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x14, 0x70, 0x75, 0x73, 0x70, 0x61, 0x6b, 0x6f, 0x6d, 0x55, 0x6e, 0x74, 0x69, 0x6c,
	0x44, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x64, 0x73, 0x18, 0x39, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x3a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x3b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x73, 0x18, 0x3c, 0x20, 0x03, 0x28, 0x04, 0x52, 0x09,
	0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x73, 0x22, 0x8b, 0x04, 0x0a, 0x0c, 0x43, 0x61,
	0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x69,
	0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6c,
	0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x65,
	0x61, 0x64, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x69,
	0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x61, 0x72, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x72, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x5f, 0x76, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x5f, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x72, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x5f, 0x79, 0x65, 0x61,
	0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x59, 0x65, 0x61, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x5f, 0x6d, 0x69, 0x6c, 0x65, 0x61, 0x67, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x4d, 0x69, 0x6c, 0x65, 0x61, 0x67,
	0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x61, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x61, 0x72,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x61,
	0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65,
	0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x61, 0x6c, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x61,
	0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xc9, 0x1a, 0x0a, 0x06, 0x43, 0x61, 0x72, 0x44,
	0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x72, 0x4e, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x61, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x63, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x61, 0x6c, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73,
	0x61, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x69, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0xca, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x18, 0xcb, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0xcc, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0xcd, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0xce, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x76, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0xcf, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x18, 0xd0, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0xd1, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x61,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x61, 0x72, 0x5f, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0xd2, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x61, 0x72, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0xd3, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x70, 0x61, 0x72, 0x65, 0x4b,
	0x65, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0xd4, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x70, 0x61,
	0x72, 0x65, 0x4b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0xd5, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x2b, 0x0a,
	0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0xd6, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x72,
	0x69, 0x6e, 0x63, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x77, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x74, 0x79,
	0x18, 0xd7, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70,
	0x6c, 0x65, 0x57, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x17, 0x70, 0x72,
	0x69, 0x6e, 0x63, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x77, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x74, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0xd8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x70, 0x72,
	0x69, 0x6e, 0x63, 0x69, 0x70, 0x6c, 0x65, 0x57, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x74, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x18, 0x77, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x74, 0x79, 0x5f,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0xd9, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x77, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x74, 0x79,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x31,
	0x0a, 0x14, 0x77, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x74, 0x79, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6d,
	0x69, 0x6c, 0x65, 0x61, 0x67, 0x65, 0x18, 0xda, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x77,
	0x61, 0x72, 0x72, 0x61, 0x6e, 0x74, 0x79, 0x4d, 0x61, 0x78, 0x4d, 0x69, 0x6c, 0x65, 0x61, 0x67,
	0x65, 0x12, 0x3e, 0x0a, 0x1b, 0x77, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x74, 0x79, 0x5f, 0x6d, 0x61,
	0x78, 0x5f, 0x6d, 0x69, 0x6c, 0x65, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0xdb, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x77, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x74,
	0x79, 0x4d, 0x61, 0x78, 0x4d, 0x69, 0x6c, 0x65, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x47, 0x0a, 0x20, 0x77, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x74, 0x79, 0x5f, 0x6d, 0x61,
	0x78, 0x5f, 0x6d, 0x69, 0x6c, 0x65, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0xdc, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x77, 0x61,
	0x72, 0x72, 0x61, 0x6e, 0x74, 0x79, 0x4d, 0x61, 0x78, 0x4d, 0x69, 0x6c, 0x65, 0x61, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0xad, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x37, 0x0a, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x18, 0xae, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x43,
	0x61, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x74, 0x6f, 0x52, 0x0b, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x0c, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x5f, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18, 0xaf, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x44, 0x74, 0x6f, 0x52, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x4f, 0x75,
	0x74, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x69, 0x6e, 0x5f, 0x63, 0x61, 0x72, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0xb0, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x70, 0x69, 0x6e,
	0x43, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x5f, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x18, 0x91, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x72,
	0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x5f, 0x79, 0x65,
	0x61, 0x72, 0x18, 0x92, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x61, 0x72, 0x59, 0x65,
	0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x5f, 0x6d, 0x69, 0x6c, 0x65, 0x61, 0x67,
	0x65, 0x18, 0x93, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x4d, 0x69, 0x6c,
	0x65, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x61, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x94, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x63, 0x61, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x33, 0x0a, 0x15, 0x63, 0x61, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x95, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x63, 0x61, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x96, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x16, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x97, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x98, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x13, 0x0a, 0x04, 0x73, 0x65, 0x61, 0x74,
	0x18, 0x99, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65, 0x61, 0x74, 0x12, 0x15, 0x0a,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x9a, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x75, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x9b, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x75, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x9c, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x65,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x9d, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18,
	0x9e, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72,
	0x54, 0x61, 0x67, 0x73, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x21, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x9f, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x32, 0x62, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0xa0, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x32, 0x62, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x32,
	0x62, 0x5f, 0x66, 0x75, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0xa1, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x32, 0x62, 0x46, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x33, 0x0a, 0x15, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0xa2, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x13, 0x6e, 0x65, 0x78, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x73,
	0x74, 0x18, 0xa3, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0xa4, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10,
	0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x12, 0x33, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0xa5, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x73, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x10, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0xa6, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x12, 0x33, 0x0a, 0x14, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x43, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0xa7, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0d, 0x70, 0x75, 0x73, 0x70, 0x61,
	0x6b, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0xa8, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0d, 0x70, 0x75, 0x73, 0x70, 0x61, 0x6b, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2d,
	0x0a, 0x11, 0x70, 0x75, 0x73, 0x70, 0x61, 0x6b, 0x6f, 0x6d, 0x43, 0x6f, 0x73, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0xa9, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x75, 0x73, 0x70,
	0x61, 0x6b, 0x6f, 0x6d, 0x43, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a,
	0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18,
	0xaa, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0xab, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d,
	0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2d, 0x0a,
	0x11, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0xac, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6c, 0x6f, 0x67, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x43, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x11,
	0x65, 0x78, 0x70, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0xf5, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x53, 0x65, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0xf6, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65,
	0x65, 0x18, 0xf7, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x69,
	0x6e, 0x67, 0x46, 0x65, 0x65, 0x12, 0x17, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0xd9, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b,
	0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xbd, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0xbe, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0xbf, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x64, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x61, 0x6c, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0xc0, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x64, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x64, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0xc1, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x61, 0x6c, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0xc2, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0xc3, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x30, 0x0a, 0x13, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0xa1, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0xa2, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x30, 0x0a,
	0x13, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0xa3, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x41, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0xa4, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x61,
	0x72, 0x2e, 0x43, 0x61, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x74, 0x6f,
	0x52, 0x10, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x85, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x86, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x87, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0xe9, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0xea, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0xeb, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x33, 0x0a, 0x14, 0x72, 0x65, 0x73, 0x57, 0x65, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x42, 0x61, 0x72, 0x18, 0xec, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x72, 0x65, 0x73, 0x57, 0x65, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x42, 0x61, 0x72, 0x12, 0x2d, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x57, 0x65, 0x62, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x67, 0x18, 0xed, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x72, 0x65, 0x73, 0x57, 0x65, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x54, 0x61, 0x67, 0x12, 0x31, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x48, 0x35, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x61, 0x72, 0x18, 0xee, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x72, 0x65, 0x73, 0x48, 0x35, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x42, 0x61, 0x72, 0x12, 0x2b, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x48, 0x35, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x67, 0x18, 0xef, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x72, 0x65, 0x73, 0x48, 0x35, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x54, 0x61, 0x67, 0x22, 0x9b, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x72, 0x44, 0x74, 0x6f, 0x12, 0x1d, 0x0a, 0x03, 0x63, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x03,
	0x63, 0x61, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x74,
	0x6f, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x22, 0x33, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x49, 0x64, 0x73, 0x44, 0x74, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x8b, 0x02, 0x0a, 0x13, 0x43, 0x61, 0x72, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x54, 0x61, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x75, 0x73, 0x65, 0x54, 0x61, 0x67, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x6e,
	0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x4f,
	0x75, 0x74, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x75, 0x73, 0x65, 0x4f, 0x75, 0x74, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75,
	0x73, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x75, 0x73, 0x65,
	0x43, 0x6f, 0x73, 0x74, 0x22, 0x39, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x44, 0x74, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2b, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x44, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72,
	0x44, 0x74, 0x6f, 0x52, 0x0a, 0x43, 0x61, 0x72, 0x44, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0x2d, 0x0a, 0x07, 0x43, 0x61, 0x72, 0x54, 0x61, 0x67, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x46,
	0x0a, 0x0e, 0x43, 0x61, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x74, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x6e, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x4e, 0x6f, 0x44,
	0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x61, 0x72, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x36, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x4e, 0x6f, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x61, 0x72, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x41,
	0x0a, 0x17, 0x43, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x22, 0x52, 0x0a, 0x16, 0x43, 0x61, 0x72, 0x4e, 0x6f, 0x4f, 0x72, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x61, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x72, 0x4e,
	0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x50, 0x6c, 0x61, 0x74, 0x65, 0x22, 0x5a, 0x0a, 0x10, 0x43, 0x61, 0x72, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x61, 0x72, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x22, 0xe4, 0x02, 0x0a, 0x14, 0x43, 0x61, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x61, 0x72, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x72,
	0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72,
	0x6f, 0x6d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x6f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65,
	0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66,
	0x72, 0x6f, 0x6d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x6f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x22, 0xb1, 0x03, 0x0a, 0x13, 0x43, 0x61, 0x72,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x74, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x63, 0x61, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x66, 0x72, 0x6f,
	0x6d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x6f, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x61, 0x72, 0x4e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x61, 0x72, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50,
	0x6c, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x6f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x6f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x54, 0x0a, 0x12,
	0x43, 0x61, 0x72, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x50, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x61, 0x72,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x32, 0x85, 0x0a, 0x0a, 0x03, 0x43, 0x61, 0x72, 0x12, 0x26, 0x0a, 0x03, 0x41, 0x64,
	0x64, 0x12, 0x0b, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x44, 0x74, 0x6f, 0x1a, 0x10,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x2c, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x63,
	0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x49, 0x64, 0x73, 0x44, 0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x2f, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x63, 0x61, 0x72,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x44, 0x74, 0x6f, 0x1a, 0x10, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x29, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0e, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x43,
	0x61, 0x72, 0x49, 0x64, 0x73, 0x44, 0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e,
	0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x46, 0x6f, 0x72, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x63,
	0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x49, 0x64, 0x73, 0x44, 0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x2e, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x43,
	0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x33, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x11,
	0x2e, 0x63, 0x61, 0x72, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x46, 0x72, 0x6f, 0x6d,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x41, 0x64, 0x64,
	0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x63, 0x61, 0x72, 0x2e,
	0x41, 0x64, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0d, 0x41,
	0x64, 0x64, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x43, 0x61, 0x72, 0x12, 0x15, 0x2e, 0x63,
	0x61, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x43, 0x61, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x09, 0x4c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x43, 0x61, 0x72, 0x12, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x64,
	0x44, 0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x61, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x43, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x63, 0x61, 0x72,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72,
	0x42, 0x79, 0x43, 0x61, 0x72, 0x4e, 0x6f, 0x12, 0x0d, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61,
	0x72, 0x4e, 0x6f, 0x44, 0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x72, 0x42, 0x79, 0x4e, 0x6f, 0x46, 0x75, 0x7a, 0x7a, 0x79, 0x12, 0x0d, 0x2e,
	0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x4e, 0x6f, 0x44, 0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0d, 0x2e, 0x63, 0x61, 0x72,
	0x2e, 0x43, 0x61, 0x72, 0x4e, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x42, 0x79, 0x43, 0x61, 0x72, 0x4e, 0x6f, 0x4f, 0x72,
	0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x63,
	0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x4e, 0x6f, 0x4f, 0x72, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a,
	0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x18,
	0x2e, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x11,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x19, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x48, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x42, 0x79, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x46, 0x75, 0x7a, 0x7a, 0x79, 0x12, 0x17, 0x2e,
	0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x64, 0x2d,
	0x62, 0x6a, 0x2f, 0x62, 0x32, 0x63, 0x2d, 0x63, 0x61, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x63,
	0x61, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_carProto_car_proto_rawDescOnce sync.Once
	file_carProto_car_proto_rawDescData = file_carProto_car_proto_rawDesc
)

func file_carProto_car_proto_rawDescGZIP() []byte {
	file_carProto_car_proto_rawDescOnce.Do(func() {
		file_carProto_car_proto_rawDescData = protoimpl.X.CompressGZIP(file_carProto_car_proto_rawDescData)
	})
	return file_carProto_car_proto_rawDescData
}

var file_carProto_car_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_carProto_car_proto_goTypes = []interface{}{
	(*GetValidStateReq)(nil),                 // 0: car.GetValidStateReq
	(*ChangeCarStateReq)(nil),                // 1: car.ChangeCarStateReq
	(*SourceParams)(nil),                     // 2: car.SourceParams
	(*AddFromSourceParams)(nil),              // 3: car.AddFromSourceParams
	(*AddFromSourceListParams)(nil),          // 4: car.AddFromSourceListParams
	(*AddPartnerCarReq)(nil),                 // 5: car.AddPartnerCarReq
	(*CarListParams)(nil),                    // 6: car.CarListParams
	(*CarSourceDto)(nil),                     // 7: car.CarSourceDto
	(*CarDto)(nil),                           // 8: car.CarDto
	(*UpdateCarDto)(nil),                     // 9: car.UpdateCarDto
	(*CarIdsDto)(nil),                        // 10: car.CarIdsDto
	(*CarSimpleInfoParams)(nil),              // 11: car.CarSimpleInfoParams
	(*CarDtoList)(nil),                       // 12: car.CarDtoList
	(*CarTags)(nil),                          // 13: car.CarTags
	(*CarResourceDto)(nil),                   // 14: car.CarResourceDto
	(*CarNoDto)(nil),                         // 15: car.CarNoDto
	(*CarNoReq)(nil),                         // 16: car.CarNoReq
	(*CarDetailAccessDataResp)(nil),          // 17: car.CarDetailAccessDataResp
	(*CarNoOrLicensePlateDto)(nil),           // 18: car.CarNoOrLicensePlateDto
	(*CarTransferStore)(nil),                 // 19: car.CarTransferStore
	(*CarTransferStoreList)(nil),             // 20: car.CarTransferStoreList
	(*CarTransferStoreDto)(nil),              // 21: car.CarTransferStoreDto
	(*CarLicensePlateReq)(nil),               // 22: car.CarLicensePlateReq
	(*common.Page)(nil),                      // 23: common.Page
	(*reportProto.ReportDamagePointDto)(nil), // 24: report.ReportDamagePointDto
	(*common.IdDto)(nil),                     // 25: common.IdDto
	(*common.Response)(nil),                  // 26: common.Response
}
var file_carProto_car_proto_depIdxs = []int32{
	23, // 0: car.SourceParams.page:type_name -> common.Page
	3,  // 1: car.AddFromSourceListParams.list:type_name -> car.AddFromSourceParams
	23, // 2: car.CarListParams.page:type_name -> common.Page
	14, // 3: car.CarDto.images_inner:type_name -> car.CarResourceDto
	14, // 4: car.CarDto.images_outer:type_name -> car.CarResourceDto
	13, // 5: car.CarDto.tag:type_name -> car.CarTags
	14, // 6: car.CarDto.recondition_files:type_name -> car.CarResourceDto
	8,  // 7: car.UpdateCarDto.car:type_name -> car.CarDto
	24, // 8: car.UpdateCarDto.points:type_name -> report.ReportDamagePointDto
	8,  // 9: car.CarDtoList.CarDtoList:type_name -> car.CarDto
	23, // 10: car.CarTransferStoreList.page:type_name -> common.Page
	8,  // 11: car.Car.Add:input_type -> car.CarDto
	10, // 12: car.Car.Delete:input_type -> car.CarIdsDto
	9,  // 13: car.Car.Update:input_type -> car.UpdateCarDto
	10, // 14: car.Car.Get:input_type -> car.CarIdsDto
	11, // 15: car.Car.GetSimpleInfo:input_type -> car.CarSimpleInfoParams
	10, // 16: car.Car.GetForWebsite:input_type -> car.CarIdsDto
	6,  // 17: car.Car.List:input_type -> car.CarListParams
	2,  // 18: car.Car.SourceList:input_type -> car.SourceParams
	3,  // 19: car.Car.AddFromSource:input_type -> car.AddFromSourceParams
	4,  // 20: car.Car.AddFromSourceList:input_type -> car.AddFromSourceListParams
	5,  // 21: car.Car.AddPartnerCar:input_type -> car.AddPartnerCarReq
	25, // 22: car.Car.LaunchCar:input_type -> common.IdDto
	0,  // 23: car.Car.GetValidState:input_type -> car.GetValidStateReq
	1,  // 24: car.Car.ChangeCarState:input_type -> car.ChangeCarStateReq
	1,  // 25: car.Car.ChangeInventoryStatus:input_type -> car.ChangeCarStateReq
	15, // 26: car.Car.GetCarByCarNo:input_type -> car.CarNoDto
	15, // 27: car.Car.GetCarByNoFuzzy:input_type -> car.CarNoDto
	16, // 28: car.Car.GetCarDetailAccessData:input_type -> car.CarNoReq
	18, // 29: car.Car.GetCarByCarNoOrLicensePlate:input_type -> car.CarNoOrLicensePlateDto
	21, // 30: car.Car.TransferStore:input_type -> car.CarTransferStoreDto
	20, // 31: car.Car.TransferStoreList:input_type -> car.CarTransferStoreList
	22, // 32: car.Car.GetCarByLicensePlateFuzzy:input_type -> car.CarLicensePlateReq
	26, // 33: car.Car.Add:output_type -> common.Response
	26, // 34: car.Car.Delete:output_type -> common.Response
	26, // 35: car.Car.Update:output_type -> common.Response
	26, // 36: car.Car.Get:output_type -> common.Response
	26, // 37: car.Car.GetSimpleInfo:output_type -> common.Response
	26, // 38: car.Car.GetForWebsite:output_type -> common.Response
	26, // 39: car.Car.List:output_type -> common.Response
	26, // 40: car.Car.SourceList:output_type -> common.Response
	26, // 41: car.Car.AddFromSource:output_type -> common.Response
	26, // 42: car.Car.AddFromSourceList:output_type -> common.Response
	26, // 43: car.Car.AddPartnerCar:output_type -> common.Response
	26, // 44: car.Car.LaunchCar:output_type -> common.Response
	26, // 45: car.Car.GetValidState:output_type -> common.Response
	26, // 46: car.Car.ChangeCarState:output_type -> common.Response
	26, // 47: car.Car.ChangeInventoryStatus:output_type -> common.Response
	26, // 48: car.Car.GetCarByCarNo:output_type -> common.Response
	26, // 49: car.Car.GetCarByNoFuzzy:output_type -> common.Response
	26, // 50: car.Car.GetCarDetailAccessData:output_type -> common.Response
	26, // 51: car.Car.GetCarByCarNoOrLicensePlate:output_type -> common.Response
	26, // 52: car.Car.TransferStore:output_type -> common.Response
	26, // 53: car.Car.TransferStoreList:output_type -> common.Response
	26, // 54: car.Car.GetCarByLicensePlateFuzzy:output_type -> common.Response
	33, // [33:55] is the sub-list for method output_type
	11, // [11:33] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_carProto_car_proto_init() }
func file_carProto_car_proto_init() {
	if File_carProto_car_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_carProto_car_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetValidStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeCarStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFromSourceParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddFromSourceListParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPartnerCarReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarListParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarSourceDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCarDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarIdsDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarSimpleInfoParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarDtoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarTags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarResourceDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarNoDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarNoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarDetailAccessDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarNoOrLicensePlateDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarTransferStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarTransferStoreList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarTransferStoreDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carProto_car_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarLicensePlateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_carProto_car_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_carProto_car_proto_goTypes,
		DependencyIndexes: file_carProto_car_proto_depIdxs,
		MessageInfos:      file_carProto_car_proto_msgTypes,
	}.Build()
	File_carProto_car_proto = out.File
	file_carProto_car_proto_rawDesc = nil
	file_carProto_car_proto_goTypes = nil
	file_carProto_car_proto_depIdxs = nil
}
