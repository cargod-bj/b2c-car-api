// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: carList/carList.proto

package carList

import (
	reportProto "github.com/cargod-bj/b2c-car-api/reportProto"
	common "github.com/cargod-bj/b2c-proto-common/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 新增上架车辆dto
type CarListDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 车辆id，如果为新增，则此字段为0，否则为车辆id
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//车辆在car表里的id
	CarId uint64 `protobuf:"varint,2,opt,name=car_id,json=carId,proto3" json:"car_id,omitempty"`
	// 车辆的创建时间，如果为新增，或更新，则此字段无效
	CreateTime uint64 `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// 车辆的更新时间，如果为新增，或更新，则此字段无效
	UpdateTime uint64 `protobuf:"varint,4,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// 检查报告id
	InspectionId uint64 `protobuf:"varint,101,opt,name=inspection_id,json=inspectionId,proto3" json:"inspection_id,omitempty"`
	// 车辆状态
	Status uint32 `protobuf:"varint,102,opt,name=status,proto3" json:"status,omitempty"`
	// 门店id
	StoreId uint64 `protobuf:"varint,103,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	// 停车场id
	ParkingId    uint64 `protobuf:"varint,104,opt,name=parking_id,json=parkingId,proto3" json:"parking_id,omitempty"`
	CarStateName string `protobuf:"bytes,105,opt,name=carStateName,proto3" json:"carStateName,omitempty"`
	// 品牌id
	BrandId uint32 `protobuf:"varint,201,opt,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"`
	// 车型id
	ModelId uint32 `protobuf:"varint,202,opt,name=model_id,json=modelId,proto3" json:"model_id,omitempty"`
	// 车variant
	CarVariant string `protobuf:"bytes,203,opt,name=car_variant,json=carVariant,proto3" json:"car_variant,omitempty"`
	// 车照片url
	Image string `protobuf:"bytes,301,opt,name=image,proto3" json:"image,omitempty"`
	// 排量
	CarEngine string `protobuf:"bytes,401,opt,name=car_engine,json=carEngine,proto3" json:"car_engine,omitempty"`
	// 年份
	CarYear uint32 `protobuf:"varint,402,opt,name=car_year,json=carYear,proto3" json:"car_year,omitempty"`
	// 里程
	CarMileage uint32 `protobuf:"varint,403,opt,name=car_mileage,json=carMileage,proto3" json:"car_mileage,omitempty"`
	// 驾驶类型 手动,自动
	CarTransmission uint32 `protobuf:"varint,404,opt,name=car_transmission,json=carTransmission,proto3" json:"car_transmission,omitempty"`
	// 卖价
	ExpSellingPrice string `protobuf:"bytes,501,opt,name=exp_selling_price,json=expSellingPrice,proto3" json:"exp_selling_price,omitempty"`
	// 来源
	Source string `protobuf:"bytes,601,opt,name=source,proto3" json:"source,omitempty"`
	// 城市地区
	Location string `protobuf:"bytes,701,opt,name=location,proto3" json:"location,omitempty"`
	// 城市地区
	LocationAddress string `protobuf:"bytes,702,opt,name=location_address,json=locationAddress,proto3" json:"location_address,omitempty"`
	//经销商id
	DealerId uint64 `protobuf:"varint,708,opt,name=dealer_id,json=dealerId,proto3" json:"dealer_id,omitempty"`
	// 经销商类型
	DealerType uint32 `protobuf:"varint,704,opt,name=dealer_type,json=dealerType,proto3" json:"dealer_type,omitempty"`
	//汽车类型例如suv
	CarTypeId uint32 `protobuf:"varint,707,opt,name=car_type_id,json=carTypeId,proto3" json:"car_type_id,omitempty"`
	//燃油类型
	FuelType uint32 `protobuf:"varint,709,opt,name=fuel_type,json=fuelType,proto3" json:"fuel_type,omitempty"`
	//座椅个数
	Seat uint32 `protobuf:"varint,710,opt,name=seat,proto3" json:"seat,omitempty"`
	//车漆颜色
	Color uint32 `protobuf:"varint,711,opt,name=color,proto3" json:"color,omitempty"`
	// spinCar链接
	SpinCarUrl string `protobuf:"bytes,303,opt,name=spin_car_url,json=spinCarUrl,proto3" json:"spin_car_url,omitempty"`
	//车辆特征
	CarTypeName          string   `protobuf:"bytes,712,opt,name=car_type_name,json=carTypeName,proto3" json:"car_type_name,omitempty"`
	ModelName            string   `protobuf:"bytes,705,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	BrandName            string   `protobuf:"bytes,706,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`
	RecommendOrder       uint32   `protobuf:"varint,713,opt,name=recommend_order,json=recommendOrder,proto3" json:"recommend_order,omitempty"`
	Type                 uint32   `protobuf:"varint,714,opt,name=type,proto3" json:"type,omitempty"`
	Url                  string   `protobuf:"bytes,715,opt,name=url,proto3" json:"url,omitempty"`
	LocationId           string   `protobuf:"bytes,716,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	CarTransmissionName  string   `protobuf:"bytes,717,opt,name=car_transmission_name,json=carTransmissionName,proto3" json:"car_transmission_name,omitempty"`
	RegistrationTypeName string   `protobuf:"bytes,718,opt,name=registration_type_name,json=registrationTypeName,proto3" json:"registration_type_name,omitempty"`
	FuelTypeName         string   `protobuf:"bytes,719,opt,name=fuel_type_name,json=fuelTypeName,proto3" json:"fuel_type_name,omitempty"`
	ColorName            string   `protobuf:"bytes,720,opt,name=colorName,proto3" json:"colorName,omitempty"`
	RegistrationDate     uint64   `protobuf:"varint,721,opt,name=registration_date,json=registrationDate,proto3" json:"registration_date,omitempty"`
	RegistrationType     uint32   `protobuf:"varint,722,opt,name=registration_type,json=registrationType,proto3" json:"registration_type,omitempty"`
	InnerImage           []string `protobuf:"bytes,723,rep,name=inner_image,json=innerImage,proto3" json:"inner_image,omitempty"`
	OuterImage           []string `protobuf:"bytes,724,rep,name=outer_image,json=outerImage,proto3" json:"outer_image,omitempty"`
	ShowTime             uint64   `protobuf:"varint,725,opt,name=show_time,json=showTime,proto3" json:"show_time,omitempty"` //浏览时间
	//排序
	Seq                    uint32 `protobuf:"varint,800,opt,name=seq,proto3" json:"seq,omitempty"`
	SeqTmp                 uint32 `protobuf:"varint,810,opt,name=seqTmp,proto3" json:"seqTmp,omitempty"`
	CarNo                  string `protobuf:"bytes,801,opt,name=carNo,proto3" json:"carNo,omitempty"`
	VinCode                string `protobuf:"bytes,802,opt,name=vinCode,proto3" json:"vinCode,omitempty"`
	StoreCity              string `protobuf:"bytes,803,opt,name=storeCity,proto3" json:"storeCity,omitempty"`
	OpenHours              string `protobuf:"bytes,804,opt,name=openHours,proto3" json:"openHours,omitempty"`
	TestDriverServiceHours string `protobuf:"bytes,805,opt,name=testDriverServiceHours,proto3" json:"testDriverServiceHours,omitempty"`
	StoreName              string `protobuf:"bytes,806,opt,name=storeName,proto3" json:"storeName,omitempty"`
	StoreAddress           string `protobuf:"bytes,807,opt,name=storeAddress,proto3" json:"storeAddress,omitempty"`
	StorePhone             string `protobuf:"bytes,808,opt,name=storePhone,proto3" json:"storePhone,omitempty"`
	CarState               uint32 `protobuf:"varint,809,opt,name=carState,proto3" json:"carState,omitempty"`
	//座椅个数
	SeatSize                    string   `protobuf:"bytes,811,opt,name=seatSize,proto3" json:"seatSize,omitempty"`
	SkipUrl                     string   `protobuf:"bytes,812,opt,name=skipUrl,proto3" json:"skipUrl,omitempty"`                           //广告位跳转url
	SaleStatus                  uint32   `protobuf:"varint,813,opt,name=saleStatus,proto3" json:"saleStatus,omitempty"`                    //是否上架
	MapUrl                      string   `protobuf:"bytes,814,opt,name=mapUrl,proto3" json:"mapUrl,omitempty"`                             //地图
	CarTag                      string   `protobuf:"bytes,815,opt,name=carTag,proto3" json:"carTag,omitempty"`                             //标签
	CarTagType                  uint32   `protobuf:"varint,816,opt,name=carTagType,proto3" json:"carTagType,omitempty"`                    //标签类型
	Description                 string   `protobuf:"bytes,817,opt,name=description,proto3" json:"description,omitempty"`                   //第三方车描述
	StoreBusinessHours          string   `protobuf:"bytes,818,opt,name=storeBusinessHours,proto3" json:"storeBusinessHours,omitempty"`     //门店营业时间
	CampaignStartTime           uint64   `protobuf:"varint,819,opt,name=campaignStartTime,proto3" json:"campaignStartTime,omitempty"`      //限时活动开始时间
	CampaignEndTime             uint64   `protobuf:"varint,820,opt,name=campaignEndTime,proto3" json:"campaignEndTime,omitempty"`          //限时活动结束时间
	CampaignPrice               string   `protobuf:"bytes,821,opt,name=campaignPrice,proto3" json:"campaignPrice,omitempty"`               //限时活动车价
	CampaignId                  uint64   `protobuf:"varint,822,opt,name=campaignId,proto3" json:"campaignId,omitempty"`                    //限时活动id
	CampaignName                string   `protobuf:"bytes,823,opt,name=campaignName,proto3" json:"campaignName,omitempty"`                 //限时活动名称
	ResWebDetailPriceBar        string   `protobuf:"bytes,824,opt,name=resWebDetailPriceBar,proto3" json:"resWebDetailPriceBar,omitempty"` //限时活动详情图片
	ResWebListItemTag           string   `protobuf:"bytes,825,opt,name=resWebListItemTag,proto3" json:"resWebListItemTag,omitempty"`       //限时活动背景
	ResH5DetailPriceBar         string   `protobuf:"bytes,826,opt,name=resH5DetailPriceBar,proto3" json:"resH5DetailPriceBar,omitempty"`   //限时活动详情图片
	ResH5ListItemTag            string   `protobuf:"bytes,827,opt,name=resH5ListItemTag,proto3" json:"resH5ListItemTag,omitempty"`         //限时活动背景
	SpareKey                    uint32   `protobuf:"varint,828,opt,name=spareKey,proto3" json:"spareKey,omitempty"`
	ServiceBook                 uint32   `protobuf:"varint,829,opt,name=serviceBook,proto3" json:"serviceBook,omitempty"`
	PrincipleWarranty           uint32   `protobuf:"varint,830,opt,name=principleWarranty,proto3" json:"principleWarranty,omitempty"`
	WarrantyExpirationDate      uint64   `protobuf:"varint,831,opt,name=warrantyExpirationDate,proto3" json:"warrantyExpirationDate,omitempty"`
	WarrantyMaxMileage          uint64   `protobuf:"varint,832,opt,name=warrantyMaxMileage,proto3" json:"warrantyMaxMileage,omitempty"`
	RoadTaxExpiry               uint64   `protobuf:"varint,833,opt,name=roadTaxExpiry,proto3" json:"roadTaxExpiry,omitempty"`
	GovernmentInsuranceExpiry   uint64   `protobuf:"varint,834,opt,name=governmentInsuranceExpiry,proto3" json:"governmentInsuranceExpiry,omitempty"`
	HighLightTags               []string `protobuf:"bytes,835,rep,name=highLightTags,proto3" json:"highLightTags,omitempty"`                             //highLightTags
	DiscountedAmount            string   `protobuf:"bytes,836,opt,name=discountedAmount,proto3" json:"discountedAmount,omitempty"`                       //活动补贴金额
	ResWebBannerDetailPageRight string   `protobuf:"bytes,837,opt,name=resWebBannerDetailPageRight,proto3" json:"resWebBannerDetailPageRight,omitempty"` // 活动页面图片资源
	BannerBgColorLeftLabel      string   `protobuf:"bytes,838,opt,name=bannerBgColorLeftLabel,proto3" json:"bannerBgColorLeftLabel,omitempty"`           //banner左侧label背景颜色
	BannerBgColorRightLabel     string   `protobuf:"bytes,839,opt,name=bannerBgColorRightLabel,proto3" json:"bannerBgColorRightLabel,omitempty"`         //banner右侧label背景颜色
	BannerTitleColor            string   `protobuf:"bytes,840,opt,name=bannerTitleColor,proto3" json:"bannerTitleColor,omitempty"`                       //banner title 颜色
	BannerDateColor             string   `protobuf:"bytes,841,opt,name=bannerDateColor,proto3" json:"bannerDateColor,omitempty"`                         //banner date 颜色
	LicensePlate                string   `protobuf:"bytes,842,opt,name=licensePlate,proto3" json:"licensePlate,omitempty"`                               //车牌号
}

func (x *CarListDto) Reset() {
	*x = CarListDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carList_carList_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarListDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarListDto) ProtoMessage() {}

func (x *CarListDto) ProtoReflect() protoreflect.Message {
	mi := &file_carList_carList_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarListDto.ProtoReflect.Descriptor instead.
func (*CarListDto) Descriptor() ([]byte, []int) {
	return file_carList_carList_proto_rawDescGZIP(), []int{0}
}

func (x *CarListDto) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CarListDto) GetCarId() uint64 {
	if x != nil {
		return x.CarId
	}
	return 0
}

func (x *CarListDto) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *CarListDto) GetUpdateTime() uint64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *CarListDto) GetInspectionId() uint64 {
	if x != nil {
		return x.InspectionId
	}
	return 0
}

func (x *CarListDto) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CarListDto) GetStoreId() uint64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *CarListDto) GetParkingId() uint64 {
	if x != nil {
		return x.ParkingId
	}
	return 0
}

func (x *CarListDto) GetCarStateName() string {
	if x != nil {
		return x.CarStateName
	}
	return ""
}

func (x *CarListDto) GetBrandId() uint32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *CarListDto) GetModelId() uint32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *CarListDto) GetCarVariant() string {
	if x != nil {
		return x.CarVariant
	}
	return ""
}

func (x *CarListDto) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CarListDto) GetCarEngine() string {
	if x != nil {
		return x.CarEngine
	}
	return ""
}

func (x *CarListDto) GetCarYear() uint32 {
	if x != nil {
		return x.CarYear
	}
	return 0
}

func (x *CarListDto) GetCarMileage() uint32 {
	if x != nil {
		return x.CarMileage
	}
	return 0
}

func (x *CarListDto) GetCarTransmission() uint32 {
	if x != nil {
		return x.CarTransmission
	}
	return 0
}

func (x *CarListDto) GetExpSellingPrice() string {
	if x != nil {
		return x.ExpSellingPrice
	}
	return ""
}

func (x *CarListDto) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *CarListDto) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *CarListDto) GetLocationAddress() string {
	if x != nil {
		return x.LocationAddress
	}
	return ""
}

func (x *CarListDto) GetDealerId() uint64 {
	if x != nil {
		return x.DealerId
	}
	return 0
}

func (x *CarListDto) GetDealerType() uint32 {
	if x != nil {
		return x.DealerType
	}
	return 0
}

func (x *CarListDto) GetCarTypeId() uint32 {
	if x != nil {
		return x.CarTypeId
	}
	return 0
}

func (x *CarListDto) GetFuelType() uint32 {
	if x != nil {
		return x.FuelType
	}
	return 0
}

func (x *CarListDto) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *CarListDto) GetColor() uint32 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (x *CarListDto) GetSpinCarUrl() string {
	if x != nil {
		return x.SpinCarUrl
	}
	return ""
}

func (x *CarListDto) GetCarTypeName() string {
	if x != nil {
		return x.CarTypeName
	}
	return ""
}

func (x *CarListDto) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *CarListDto) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *CarListDto) GetRecommendOrder() uint32 {
	if x != nil {
		return x.RecommendOrder
	}
	return 0
}

func (x *CarListDto) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CarListDto) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CarListDto) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *CarListDto) GetCarTransmissionName() string {
	if x != nil {
		return x.CarTransmissionName
	}
	return ""
}

func (x *CarListDto) GetRegistrationTypeName() string {
	if x != nil {
		return x.RegistrationTypeName
	}
	return ""
}

func (x *CarListDto) GetFuelTypeName() string {
	if x != nil {
		return x.FuelTypeName
	}
	return ""
}

func (x *CarListDto) GetColorName() string {
	if x != nil {
		return x.ColorName
	}
	return ""
}

func (x *CarListDto) GetRegistrationDate() uint64 {
	if x != nil {
		return x.RegistrationDate
	}
	return 0
}

func (x *CarListDto) GetRegistrationType() uint32 {
	if x != nil {
		return x.RegistrationType
	}
	return 0
}

func (x *CarListDto) GetInnerImage() []string {
	if x != nil {
		return x.InnerImage
	}
	return nil
}

func (x *CarListDto) GetOuterImage() []string {
	if x != nil {
		return x.OuterImage
	}
	return nil
}

func (x *CarListDto) GetShowTime() uint64 {
	if x != nil {
		return x.ShowTime
	}
	return 0
}

func (x *CarListDto) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *CarListDto) GetSeqTmp() uint32 {
	if x != nil {
		return x.SeqTmp
	}
	return 0
}

func (x *CarListDto) GetCarNo() string {
	if x != nil {
		return x.CarNo
	}
	return ""
}

func (x *CarListDto) GetVinCode() string {
	if x != nil {
		return x.VinCode
	}
	return ""
}

func (x *CarListDto) GetStoreCity() string {
	if x != nil {
		return x.StoreCity
	}
	return ""
}

func (x *CarListDto) GetOpenHours() string {
	if x != nil {
		return x.OpenHours
	}
	return ""
}

func (x *CarListDto) GetTestDriverServiceHours() string {
	if x != nil {
		return x.TestDriverServiceHours
	}
	return ""
}

func (x *CarListDto) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

func (x *CarListDto) GetStoreAddress() string {
	if x != nil {
		return x.StoreAddress
	}
	return ""
}

func (x *CarListDto) GetStorePhone() string {
	if x != nil {
		return x.StorePhone
	}
	return ""
}

func (x *CarListDto) GetCarState() uint32 {
	if x != nil {
		return x.CarState
	}
	return 0
}

func (x *CarListDto) GetSeatSize() string {
	if x != nil {
		return x.SeatSize
	}
	return ""
}

func (x *CarListDto) GetSkipUrl() string {
	if x != nil {
		return x.SkipUrl
	}
	return ""
}

func (x *CarListDto) GetSaleStatus() uint32 {
	if x != nil {
		return x.SaleStatus
	}
	return 0
}

func (x *CarListDto) GetMapUrl() string {
	if x != nil {
		return x.MapUrl
	}
	return ""
}

func (x *CarListDto) GetCarTag() string {
	if x != nil {
		return x.CarTag
	}
	return ""
}

func (x *CarListDto) GetCarTagType() uint32 {
	if x != nil {
		return x.CarTagType
	}
	return 0
}

func (x *CarListDto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CarListDto) GetStoreBusinessHours() string {
	if x != nil {
		return x.StoreBusinessHours
	}
	return ""
}

func (x *CarListDto) GetCampaignStartTime() uint64 {
	if x != nil {
		return x.CampaignStartTime
	}
	return 0
}

func (x *CarListDto) GetCampaignEndTime() uint64 {
	if x != nil {
		return x.CampaignEndTime
	}
	return 0
}

func (x *CarListDto) GetCampaignPrice() string {
	if x != nil {
		return x.CampaignPrice
	}
	return ""
}

func (x *CarListDto) GetCampaignId() uint64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

func (x *CarListDto) GetCampaignName() string {
	if x != nil {
		return x.CampaignName
	}
	return ""
}

func (x *CarListDto) GetResWebDetailPriceBar() string {
	if x != nil {
		return x.ResWebDetailPriceBar
	}
	return ""
}

func (x *CarListDto) GetResWebListItemTag() string {
	if x != nil {
		return x.ResWebListItemTag
	}
	return ""
}

func (x *CarListDto) GetResH5DetailPriceBar() string {
	if x != nil {
		return x.ResH5DetailPriceBar
	}
	return ""
}

func (x *CarListDto) GetResH5ListItemTag() string {
	if x != nil {
		return x.ResH5ListItemTag
	}
	return ""
}

func (x *CarListDto) GetSpareKey() uint32 {
	if x != nil {
		return x.SpareKey
	}
	return 0
}

func (x *CarListDto) GetServiceBook() uint32 {
	if x != nil {
		return x.ServiceBook
	}
	return 0
}

func (x *CarListDto) GetPrincipleWarranty() uint32 {
	if x != nil {
		return x.PrincipleWarranty
	}
	return 0
}

func (x *CarListDto) GetWarrantyExpirationDate() uint64 {
	if x != nil {
		return x.WarrantyExpirationDate
	}
	return 0
}

func (x *CarListDto) GetWarrantyMaxMileage() uint64 {
	if x != nil {
		return x.WarrantyMaxMileage
	}
	return 0
}

func (x *CarListDto) GetRoadTaxExpiry() uint64 {
	if x != nil {
		return x.RoadTaxExpiry
	}
	return 0
}

func (x *CarListDto) GetGovernmentInsuranceExpiry() uint64 {
	if x != nil {
		return x.GovernmentInsuranceExpiry
	}
	return 0
}

func (x *CarListDto) GetHighLightTags() []string {
	if x != nil {
		return x.HighLightTags
	}
	return nil
}

func (x *CarListDto) GetDiscountedAmount() string {
	if x != nil {
		return x.DiscountedAmount
	}
	return ""
}

func (x *CarListDto) GetResWebBannerDetailPageRight() string {
	if x != nil {
		return x.ResWebBannerDetailPageRight
	}
	return ""
}

func (x *CarListDto) GetBannerBgColorLeftLabel() string {
	if x != nil {
		return x.BannerBgColorLeftLabel
	}
	return ""
}

func (x *CarListDto) GetBannerBgColorRightLabel() string {
	if x != nil {
		return x.BannerBgColorRightLabel
	}
	return ""
}

func (x *CarListDto) GetBannerTitleColor() string {
	if x != nil {
		return x.BannerTitleColor
	}
	return ""
}

func (x *CarListDto) GetBannerDateColor() string {
	if x != nil {
		return x.BannerDateColor
	}
	return ""
}

func (x *CarListDto) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

//carlist查询条件
type CarListCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpSellingPriceFrom uint64   `protobuf:"varint,1,opt,name=exp_selling_price_from,json=expSellingPriceFrom,proto3" json:"exp_selling_price_from,omitempty"` //卖价
	ExpSellingPriceTo   uint64   `protobuf:"varint,2,opt,name=exp_selling_price_to,json=expSellingPriceTo,proto3" json:"exp_selling_price_to,omitempty"`
	ModelId             []uint64 `protobuf:"varint,3,rep,packed,name=model_id,json=modelId,proto3" json:"model_id,omitempty"` //车系
	ModelName           []string `protobuf:"bytes,4,rep,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	BrandId             []uint64 `protobuf:"varint,5,rep,packed,name=brand_id,json=brandId,proto3" json:"brand_id,omitempty"` //品牌
	BrandName           []string `protobuf:"bytes,6,rep,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`
	Variant             []string `protobuf:"bytes,7,rep,name=variant,proto3" json:"variant,omitempty"` //型号
	Status              uint32   `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	YearFrom            uint32   `protobuf:"varint,9,opt,name=year_from,json=yearFrom,proto3" json:"year_from,omitempty"` //年份
	YearTo              uint32   `protobuf:"varint,10,opt,name=year_to,json=yearTo,proto3" json:"year_to,omitempty"`
	MilageFrom          uint64   `protobuf:"varint,11,opt,name=milage_from,json=milageFrom,proto3" json:"milage_from,omitempty"` //里程
	MilageTo            uint64   `protobuf:"varint,12,opt,name=milage_to,json=milageTo,proto3" json:"milage_to,omitempty"`
	Transmission        []string `protobuf:"bytes,13,rep,name=transmission,proto3" json:"transmission,omitempty"`                      //驾驶类型 手动，自动
	Engine              []string `protobuf:"bytes,14,rep,name=engine,proto3" json:"engine,omitempty"`                                  //排量
	Color               []uint32 `protobuf:"varint,15,rep,packed,name=color,proto3" json:"color,omitempty"`                            //颜色
	FuelType            []uint32 `protobuf:"varint,16,rep,packed,name=fuel_type,json=fuelType,proto3" json:"fuel_type,omitempty"`      //燃油
	SeatType            []uint32 `protobuf:"varint,17,rep,packed,name=seat_type,json=seatType,proto3" json:"seat_type,omitempty"`      //座位数
	ParkingId           []uint64 `protobuf:"varint,18,rep,packed,name=parking_id,json=parkingId,proto3" json:"parking_id,omitempty"`   //停车场
	StoreId             []uint64 `protobuf:"varint,20,rep,packed,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`         //店铺
	Source              []string `protobuf:"bytes,22,rep,name=source,proto3" json:"source,omitempty"`                                  //来源
	Location            string   `protobuf:"bytes,23,opt,name=location,proto3" json:"location,omitempty"`                              //城市
	LocationId          []string `protobuf:"bytes,27,rep,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`        //地址id
	StateName           string   `protobuf:"bytes,37,opt,name=state_name,json=stateName,proto3" json:"state_name,omitempty"`           //州名
	StateId             []string `protobuf:"bytes,38,rep,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`                 //州id
	DealerId            []uint64 `protobuf:"varint,24,rep,packed,name=dealer_id,json=dealerId,proto3" json:"dealer_id,omitempty"`      //经销商id
	CarTypeId           []uint32 `protobuf:"varint,30,rep,packed,name=car_type_id,json=carTypeId,proto3" json:"car_type_id,omitempty"` //汽车类型
	RecommendCount      uint32   `protobuf:"varint,31,opt,name=recommendCount,proto3" json:"recommendCount,omitempty"`                 //推荐个数
	Keywords            string   `protobuf:"bytes,32,opt,name=keywords,proto3" json:"keywords,omitempty"`                              //关键字
	DealerType          uint32   `protobuf:"varint,33,opt,name=dealerType,proto3" json:"dealerType,omitempty"`                         //经销商类型
	//carlist排序条件
	SortKey    string `protobuf:"bytes,25,opt,name=sort_key,json=sortKey,proto3" json:"sort_key,omitempty"`
	SortType   uint32 `protobuf:"varint,26,opt,name=sort_type,json=sortType,proto3" json:"sort_type,omitempty"`
	Page       uint32 `protobuf:"varint,28,opt,name=page,proto3" json:"page,omitempty"`
	Limit      uint32 `protobuf:"varint,29,opt,name=limit,proto3" json:"limit,omitempty"`
	CarPrice   uint64 `protobuf:"varint,34,opt,name=car_price,json=carPrice,proto3" json:"car_price,omitempty"` //这里是单个车推荐位价格，排序使用
	IsHomePage uint32 `protobuf:"varint,35,opt,name=isHomePage,proto3" json:"isHomePage,omitempty"`             //是否是首页
	CampaignId uint64 `protobuf:"varint,36,opt,name=campaignId,proto3" json:"campaignId,omitempty"`             //活动id
}

func (x *CarListCondition) Reset() {
	*x = CarListCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carList_carList_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarListCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarListCondition) ProtoMessage() {}

func (x *CarListCondition) ProtoReflect() protoreflect.Message {
	mi := &file_carList_carList_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarListCondition.ProtoReflect.Descriptor instead.
func (*CarListCondition) Descriptor() ([]byte, []int) {
	return file_carList_carList_proto_rawDescGZIP(), []int{1}
}

func (x *CarListCondition) GetExpSellingPriceFrom() uint64 {
	if x != nil {
		return x.ExpSellingPriceFrom
	}
	return 0
}

func (x *CarListCondition) GetExpSellingPriceTo() uint64 {
	if x != nil {
		return x.ExpSellingPriceTo
	}
	return 0
}

func (x *CarListCondition) GetModelId() []uint64 {
	if x != nil {
		return x.ModelId
	}
	return nil
}

func (x *CarListCondition) GetModelName() []string {
	if x != nil {
		return x.ModelName
	}
	return nil
}

func (x *CarListCondition) GetBrandId() []uint64 {
	if x != nil {
		return x.BrandId
	}
	return nil
}

func (x *CarListCondition) GetBrandName() []string {
	if x != nil {
		return x.BrandName
	}
	return nil
}

func (x *CarListCondition) GetVariant() []string {
	if x != nil {
		return x.Variant
	}
	return nil
}

func (x *CarListCondition) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CarListCondition) GetYearFrom() uint32 {
	if x != nil {
		return x.YearFrom
	}
	return 0
}

func (x *CarListCondition) GetYearTo() uint32 {
	if x != nil {
		return x.YearTo
	}
	return 0
}

func (x *CarListCondition) GetMilageFrom() uint64 {
	if x != nil {
		return x.MilageFrom
	}
	return 0
}

func (x *CarListCondition) GetMilageTo() uint64 {
	if x != nil {
		return x.MilageTo
	}
	return 0
}

func (x *CarListCondition) GetTransmission() []string {
	if x != nil {
		return x.Transmission
	}
	return nil
}

func (x *CarListCondition) GetEngine() []string {
	if x != nil {
		return x.Engine
	}
	return nil
}

func (x *CarListCondition) GetColor() []uint32 {
	if x != nil {
		return x.Color
	}
	return nil
}

func (x *CarListCondition) GetFuelType() []uint32 {
	if x != nil {
		return x.FuelType
	}
	return nil
}

func (x *CarListCondition) GetSeatType() []uint32 {
	if x != nil {
		return x.SeatType
	}
	return nil
}

func (x *CarListCondition) GetParkingId() []uint64 {
	if x != nil {
		return x.ParkingId
	}
	return nil
}

func (x *CarListCondition) GetStoreId() []uint64 {
	if x != nil {
		return x.StoreId
	}
	return nil
}

func (x *CarListCondition) GetSource() []string {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *CarListCondition) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *CarListCondition) GetLocationId() []string {
	if x != nil {
		return x.LocationId
	}
	return nil
}

func (x *CarListCondition) GetStateName() string {
	if x != nil {
		return x.StateName
	}
	return ""
}

func (x *CarListCondition) GetStateId() []string {
	if x != nil {
		return x.StateId
	}
	return nil
}

func (x *CarListCondition) GetDealerId() []uint64 {
	if x != nil {
		return x.DealerId
	}
	return nil
}

func (x *CarListCondition) GetCarTypeId() []uint32 {
	if x != nil {
		return x.CarTypeId
	}
	return nil
}

func (x *CarListCondition) GetRecommendCount() uint32 {
	if x != nil {
		return x.RecommendCount
	}
	return 0
}

func (x *CarListCondition) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *CarListCondition) GetDealerType() uint32 {
	if x != nil {
		return x.DealerType
	}
	return 0
}

func (x *CarListCondition) GetSortKey() string {
	if x != nil {
		return x.SortKey
	}
	return ""
}

func (x *CarListCondition) GetSortType() uint32 {
	if x != nil {
		return x.SortType
	}
	return 0
}

func (x *CarListCondition) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CarListCondition) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CarListCondition) GetCarPrice() uint64 {
	if x != nil {
		return x.CarPrice
	}
	return 0
}

func (x *CarListCondition) GetIsHomePage() uint32 {
	if x != nil {
		return x.IsHomePage
	}
	return 0
}

func (x *CarListCondition) GetCampaignId() uint64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

// 上架车辆的id
type CarListIdDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 车辆id
	Ids []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	// 本地化
	Local string `protobuf:"bytes,3,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *CarListIdDto) Reset() {
	*x = CarListIdDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carList_carList_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarListIdDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarListIdDto) ProtoMessage() {}

func (x *CarListIdDto) ProtoReflect() protoreflect.Message {
	mi := &file_carList_carList_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarListIdDto.ProtoReflect.Descriptor instead.
func (*CarListIdDto) Descriptor() ([]byte, []int) {
	return file_carList_carList_proto_rawDescGZIP(), []int{2}
}

func (x *CarListIdDto) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *CarListIdDto) GetLocal() string {
	if x != nil {
		return x.Local
	}
	return ""
}

//查询单个车辆
type CarListId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 车辆id
	Id             uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RecommendCount uint32 `protobuf:"varint,2,opt,name=recommendCount,proto3" json:"recommendCount,omitempty"`
	// 本地化
	Local string `protobuf:"bytes,3,opt,name=local,proto3" json:"local,omitempty"`
}

func (x *CarListId) Reset() {
	*x = CarListId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carList_carList_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarListId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarListId) ProtoMessage() {}

func (x *CarListId) ProtoReflect() protoreflect.Message {
	mi := &file_carList_carList_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarListId.ProtoReflect.Descriptor instead.
func (*CarListId) Descriptor() ([]byte, []int) {
	return file_carList_carList_proto_rawDescGZIP(), []int{3}
}

func (x *CarListId) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CarListId) GetRecommendCount() uint32 {
	if x != nil {
		return x.RecommendCount
	}
	return 0
}

func (x *CarListId) GetLocal() string {
	if x != nil {
		return x.Local
	}
	return ""
}

// 上架车辆的位置
type LocationDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 车辆位置
	Location   string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	LocationId string `protobuf:"bytes,2,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
}

func (x *LocationDto) Reset() {
	*x = LocationDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carList_carList_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationDto) ProtoMessage() {}

func (x *LocationDto) ProtoReflect() protoreflect.Message {
	mi := &file_carList_carList_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationDto.ProtoReflect.Descriptor instead.
func (*LocationDto) Descriptor() ([]byte, []int) {
	return file_carList_carList_proto_rawDescGZIP(), []int{4}
}

func (x *LocationDto) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *LocationDto) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

type CarListDtoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarListDto []*CarListDto `protobuf:"bytes,1,rep,name=CarListDto,proto3" json:"CarListDto,omitempty"`
}

func (x *CarListDtoList) Reset() {
	*x = CarListDtoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carList_carList_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarListDtoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarListDtoList) ProtoMessage() {}

func (x *CarListDtoList) ProtoReflect() protoreflect.Message {
	mi := &file_carList_carList_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarListDtoList.ProtoReflect.Descriptor instead.
func (*CarListDtoList) Descriptor() ([]byte, []int) {
	return file_carList_carList_proto_rawDescGZIP(), []int{5}
}

func (x *CarListDtoList) GetCarListDto() []*CarListDto {
	if x != nil {
		return x.CarListDto
	}
	return nil
}

//返回包含推荐位的结果
type ResultList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarLists      []*CarListDto `protobuf:"bytes,1,rep,name=carLists,proto3" json:"carLists,omitempty"`
	RecommendList []*CarListDto `protobuf:"bytes,2,rep,name=recommendList,proto3" json:"recommendList,omitempty"`
	Total         uint32        `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	AdvertSize    uint32        `protobuf:"varint,4,opt,name=advertSize,proto3" json:"advertSize,omitempty"`
}

func (x *ResultList) Reset() {
	*x = ResultList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carList_carList_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultList) ProtoMessage() {}

func (x *ResultList) ProtoReflect() protoreflect.Message {
	mi := &file_carList_carList_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultList.ProtoReflect.Descriptor instead.
func (*ResultList) Descriptor() ([]byte, []int) {
	return file_carList_carList_proto_rawDescGZIP(), []int{6}
}

func (x *ResultList) GetCarLists() []*CarListDto {
	if x != nil {
		return x.CarLists
	}
	return nil
}

func (x *ResultList) GetRecommendList() []*CarListDto {
	if x != nil {
		return x.RecommendList
	}
	return nil
}

func (x *ResultList) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ResultList) GetAdvertSize() uint32 {
	if x != nil {
		return x.AdvertSize
	}
	return 0
}

//返回包含推荐位的车辆详情结果
type CarListDetailResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarList       *CarListDto                            `protobuf:"bytes,1,opt,name=carList,proto3" json:"carList,omitempty"`
	RecommendList []*CarListDto                          `protobuf:"bytes,2,rep,name=recommendList,proto3" json:"recommendList,omitempty"`
	Report        []*reportProto.ReportDamageCategoryDto `protobuf:"bytes,3,rep,name=report,proto3" json:"report,omitempty"`
}

func (x *CarListDetailResult) Reset() {
	*x = CarListDetailResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carList_carList_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarListDetailResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarListDetailResult) ProtoMessage() {}

func (x *CarListDetailResult) ProtoReflect() protoreflect.Message {
	mi := &file_carList_carList_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarListDetailResult.ProtoReflect.Descriptor instead.
func (*CarListDetailResult) Descriptor() ([]byte, []int) {
	return file_carList_carList_proto_rawDescGZIP(), []int{7}
}

func (x *CarListDetailResult) GetCarList() *CarListDto {
	if x != nil {
		return x.CarList
	}
	return nil
}

func (x *CarListDetailResult) GetRecommendList() []*CarListDto {
	if x != nil {
		return x.RecommendList
	}
	return nil
}

func (x *CarListDetailResult) GetReport() []*reportProto.ReportDamageCategoryDto {
	if x != nil {
		return x.Report
	}
	return nil
}

//根据车辆No或者车牌号查询车辆信息
type CarListNo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 车辆No
	CarNo          string `protobuf:"bytes,1,opt,name=CarNo,proto3" json:"CarNo,omitempty"`
	RecommendCount uint32 `protobuf:"varint,2,opt,name=recommendCount,proto3" json:"recommendCount,omitempty"`
	// 本地化
	Local        string `protobuf:"bytes,3,opt,name=local,proto3" json:"local,omitempty"`
	Token        string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	LicensePlate string `protobuf:"bytes,5,opt,name=LicensePlate,proto3" json:"LicensePlate,omitempty"`
}

func (x *CarListNo) Reset() {
	*x = CarListNo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carList_carList_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarListNo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarListNo) ProtoMessage() {}

func (x *CarListNo) ProtoReflect() protoreflect.Message {
	mi := &file_carList_carList_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarListNo.ProtoReflect.Descriptor instead.
func (*CarListNo) Descriptor() ([]byte, []int) {
	return file_carList_carList_proto_rawDescGZIP(), []int{8}
}

func (x *CarListNo) GetCarNo() string {
	if x != nil {
		return x.CarNo
	}
	return ""
}

func (x *CarListNo) GetRecommendCount() uint32 {
	if x != nil {
		return x.RecommendCount
	}
	return 0
}

func (x *CarListNo) GetLocal() string {
	if x != nil {
		return x.Local
	}
	return ""
}

func (x *CarListNo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CarListNo) GetLicensePlate() string {
	if x != nil {
		return x.LicensePlate
	}
	return ""
}

//保存车辆置顶排序
type TopCarDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 车辆Id
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 排序
	TmpSeq uint32 `protobuf:"varint,3,opt,name=tmpSeq,proto3" json:"tmpSeq,omitempty"`
}

func (x *TopCarDto) Reset() {
	*x = TopCarDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carList_carList_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopCarDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopCarDto) ProtoMessage() {}

func (x *TopCarDto) ProtoReflect() protoreflect.Message {
	mi := &file_carList_carList_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopCarDto.ProtoReflect.Descriptor instead.
func (*TopCarDto) Descriptor() ([]byte, []int) {
	return file_carList_carList_proto_rawDescGZIP(), []int{9}
}

func (x *TopCarDto) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TopCarDto) GetTmpSeq() uint32 {
	if x != nil {
		return x.TmpSeq
	}
	return 0
}

//保存车辆置顶排序
type TopCarListDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 车辆排序DTO
	TopCarListDto []*TopCarDto `protobuf:"bytes,1,rep,name=TopCarListDto,proto3" json:"TopCarListDto,omitempty"`
}

func (x *TopCarListDto) Reset() {
	*x = TopCarListDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carList_carList_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopCarListDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopCarListDto) ProtoMessage() {}

func (x *TopCarListDto) ProtoReflect() protoreflect.Message {
	mi := &file_carList_carList_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopCarListDto.ProtoReflect.Descriptor instead.
func (*TopCarListDto) Descriptor() ([]byte, []int) {
	return file_carList_carList_proto_rawDescGZIP(), []int{10}
}

func (x *TopCarListDto) GetTopCarListDto() []*TopCarDto {
	if x != nil {
		return x.TopCarListDto
	}
	return nil
}

var File_carList_carList_proto protoreflect.FileDescriptor

var file_carList_carList_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x2f, 0x63, 0x61, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x63, 0x61, 0x72, 0x1a, 0x39, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x64, 0x2d,
	0x62, 0x6a, 0x2f, 0x62, 0x32, 0x63, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xda, 0x18, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x74, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x63, 0x61, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73,
	0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x68, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0xca, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x61, 0x72, 0x5f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0xcb, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x15,
	0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0xad, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x5f, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x18, 0x91, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x72, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x5f, 0x79, 0x65, 0x61,
	0x72, 0x18, 0x92, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x61, 0x72, 0x59, 0x65, 0x61,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x5f, 0x6d, 0x69, 0x6c, 0x65, 0x61, 0x67, 0x65,
	0x18, 0x93, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x4d, 0x69, 0x6c, 0x65,
	0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x61, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x94, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f,
	0x63, 0x61, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x2b, 0x0a, 0x11, 0x65, 0x78, 0x70, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0xf5, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x70,
	0x53, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0xd9, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0xbd, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0xbe, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0xc4, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0xc0, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x64, 0x65, 0x61, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x61, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0xc3, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x75, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0xc5, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a,
	0x04, 0x73, 0x65, 0x61, 0x74, 0x18, 0xc6, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x65,
	0x61, 0x74, 0x12, 0x15, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0xc7, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x69,
	0x6e, 0x5f, 0x63, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0xaf, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x70, 0x69, 0x6e, 0x43, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x61, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0xc8, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0xc1, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0xc2, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0xc9, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x13, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0xca, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x11, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0xcb, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0xcc, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x15, 0x63, 0x61, 0x72, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0xcd,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x61, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x16, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0xce, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x75, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0xcf, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x65, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0xd0, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0xd1, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0xd2, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0xd3, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0xd4, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0xd5, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x68, 0x6f,
	0x77, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x11, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0xa0, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x06, 0x73, 0x65, 0x71, 0x54,
	0x6d, 0x70, 0x18, 0xaa, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x65, 0x71, 0x54, 0x6d,
	0x70, 0x12, 0x15, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x4e, 0x6f, 0x18, 0xa1, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x61, 0x72, 0x4e, 0x6f, 0x12, 0x19, 0x0a, 0x07, 0x76, 0x69, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0xa2, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x69, 0x74, 0x79,
	0x18, 0xa3, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x69,
	0x74, 0x79, 0x12, 0x1d, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x18,
	0xa4, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x12, 0x37, 0x0a, 0x16, 0x74, 0x65, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x18, 0xa5, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x16, 0x74, 0x65, 0x73, 0x74, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x09, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0xa6, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0xa7, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f,
	0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0xa8, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x1b, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0xa9, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x63, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x08,
	0x73, 0x65, 0x61, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0xab, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x61, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x07, 0x73, 0x6b, 0x69,
	0x70, 0x55, 0x72, 0x6c, 0x18, 0xac, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x69,
	0x70, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0xad, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x06, 0x6d, 0x61, 0x70, 0x55, 0x72, 0x6c, 0x18,
	0xae, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x17,
	0x0a, 0x06, 0x63, 0x61, 0x72, 0x54, 0x61, 0x67, 0x18, 0xaf, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x61, 0x72, 0x54, 0x61, 0x67, 0x12, 0x1f, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x54, 0x61,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0xb0, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x61,
	0x72, 0x54, 0x61, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xb1, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x12, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x18, 0xb2, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x11,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0xb3, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x0f, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0xb4,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0d, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0xb5, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a,
	0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x18, 0xb6, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0xb7,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x14, 0x72, 0x65, 0x73, 0x57, 0x65, 0x62, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x61, 0x72, 0x18, 0xb8, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x73, 0x57, 0x65, 0x62, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x61, 0x72, 0x12, 0x2d, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x57,
	0x65, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x67, 0x18, 0xb9, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x73, 0x57, 0x65, 0x62, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x67, 0x12, 0x31, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x48, 0x35,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x61, 0x72, 0x18, 0xba,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x73, 0x48, 0x35, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x61, 0x72, 0x12, 0x2b, 0x0a, 0x10, 0x72, 0x65,
	0x73, 0x48, 0x35, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x67, 0x18, 0xbb,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x73, 0x48, 0x35, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x54, 0x61, 0x67, 0x12, 0x1b, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x72, 0x65,
	0x4b, 0x65, 0x79, 0x18, 0xbc, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x70, 0x61, 0x72,
	0x65, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42,
	0x6f, 0x6f, 0x6b, 0x18, 0xbd, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x2d, 0x0a, 0x11, 0x70, 0x72, 0x69, 0x6e, 0x63,
	0x69, 0x70, 0x6c, 0x65, 0x57, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x74, 0x79, 0x18, 0xbe, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x11, 0x70, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x6c, 0x65, 0x57, 0x61,
	0x72, 0x72, 0x61, 0x6e, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x16, 0x77, 0x61, 0x72, 0x72, 0x61, 0x6e,
	0x74, 0x79, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x18, 0xbf, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x77, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x74,
	0x79, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x2f, 0x0a, 0x12, 0x77, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x74, 0x79, 0x4d, 0x61, 0x78, 0x4d, 0x69,
	0x6c, 0x65, 0x61, 0x67, 0x65, 0x18, 0xc0, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x77, 0x61,
	0x72, 0x72, 0x61, 0x6e, 0x74, 0x79, 0x4d, 0x61, 0x78, 0x4d, 0x69, 0x6c, 0x65, 0x61, 0x67, 0x65,
	0x12, 0x25, 0x0a, 0x0d, 0x72, 0x6f, 0x61, 0x64, 0x54, 0x61, 0x78, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x79, 0x18, 0xc1, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x72, 0x6f, 0x61, 0x64, 0x54, 0x61,
	0x78, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x3d, 0x0a, 0x19, 0x67, 0x6f, 0x76, 0x65, 0x72,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x18, 0xc2, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x67, 0x6f, 0x76,
	0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x75, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0d, 0x68, 0x69, 0x67, 0x68, 0x4c, 0x69,
	0x67, 0x68, 0x74, 0x54, 0x61, 0x67, 0x73, 0x18, 0xc3, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d,
	0x68, 0x69, 0x67, 0x68, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x2b, 0x0a,
	0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0xc4, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x1b, 0x72, 0x65,
	0x73, 0x57, 0x65, 0x62, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x69, 0x67, 0x68, 0x74, 0x18, 0xc5, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1b, 0x72, 0x65, 0x73, 0x57, 0x65, 0x62, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x37, 0x0a,
	0x16, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4c, 0x65,
	0x66, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0xc6, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4c, 0x65, 0x66,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x39, 0x0a, 0x17, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0xc7, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x2b, 0x0a, 0x10, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0xc8, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x29,
	0x0a, 0x0f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0xc9, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0c, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x18, 0xca, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x22, 0xc7,
	0x08, 0x0a, 0x10, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x16, 0x65, 0x78, 0x70, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x13, 0x65, 0x78, 0x70, 0x53, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x2f, 0x0a, 0x14, 0x65, 0x78, 0x70, 0x5f,
	0x73, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x65, 0x78, 0x70, 0x53, 0x65, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x79, 0x65, 0x61, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07,
	0x79, 0x65, 0x61, 0x72, 0x5f, 0x74, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x79,
	0x65, 0x61, 0x72, 0x54, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x69, 0x6c, 0x61, 0x67, 0x65, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x69, 0x6c, 0x61,
	0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6c, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x69, 0x6c, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x65, 0x6c, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x11, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x09, 0x70, 0x61, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x16, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x1b, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x25, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x26, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x61, 0x6c,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x18, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x61,
	0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x61, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x61,
	0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64,
	0x65, 0x61, 0x6c, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6f, 0x72,
	0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x61, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x63, 0x61, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x48, 0x6f,
	0x6d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x73,
	0x48, 0x6f, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x18, 0x24, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x64, 0x44, 0x74, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x22, 0x59, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a,
	0x0e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x22, 0x4a, 0x0a, 0x0b, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x0e, 0x43, 0x61, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x44, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x43, 0x61, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x44, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x74, 0x6f, 0x52, 0x0a,
	0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x74, 0x6f, 0x22, 0xa6, 0x01, 0x0a, 0x0a, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x08, 0x63, 0x61, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x61,
	0x72, 0x2e, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x74, 0x6f, 0x52, 0x08, 0x63, 0x61,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x74, 0x6f, 0x52, 0x0d,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x13, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x63,
	0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x74, 0x6f, 0x52, 0x07, 0x63,
	0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x74, 0x6f, 0x52, 0x0d,
	0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a,
	0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x6d,
	0x61, 0x67, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x74, 0x6f, 0x52, 0x06,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x99, 0x01, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x61, 0x72, 0x4e, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61,
	0x74, 0x65, 0x22, 0x33, 0x0a, 0x09, 0x54, 0x6f, 0x70, 0x43, 0x61, 0x72, 0x44, 0x74, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x6d, 0x70, 0x53, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x74, 0x6d, 0x70, 0x53, 0x65, 0x71, 0x22, 0x45, 0x0a, 0x0d, 0x54, 0x6f, 0x70, 0x43, 0x61,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x74, 0x6f, 0x12, 0x34, 0x0a, 0x0d, 0x54, 0x6f, 0x70, 0x43,
	0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x54, 0x6f, 0x70, 0x43, 0x61, 0x72, 0x44, 0x74, 0x6f, 0x52,
	0x0d, 0x54, 0x6f, 0x70, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x74, 0x6f, 0x32, 0xfa,
	0x04, 0x0a, 0x07, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x03, 0x41, 0x64,
	0x64, 0x12, 0x0f, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x11, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64,
	0x44, 0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x0f, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44,
	0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x11, 0x2e,
	0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x44, 0x74, 0x6f,
	0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x28, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a,
	0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x15, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0c, 0x4c, 0x69,
	0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x0e, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f,
	0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x43, 0x61,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4e, 0x6f, 0x46, 0x75, 0x7a,
	0x7a, 0x79, 0x12, 0x0e, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x4e, 0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0e, 0x53, 0x61, 0x76, 0x65, 0x54, 0x6f,
	0x70, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x2e, 0x63, 0x61, 0x72, 0x2e, 0x54,
	0x6f, 0x70, 0x43, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x39, 0x0a, 0x11, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x70, 0x43, 0x61,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x44, 0x74, 0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2a, 0x5a, 0x28, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x64,
	0x2d, 0x62, 0x6a, 0x2f, 0x62, 0x32, 0x63, 0x2d, 0x63, 0x61, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f,
	0x63, 0x61, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_carList_carList_proto_rawDescOnce sync.Once
	file_carList_carList_proto_rawDescData = file_carList_carList_proto_rawDesc
)

func file_carList_carList_proto_rawDescGZIP() []byte {
	file_carList_carList_proto_rawDescOnce.Do(func() {
		file_carList_carList_proto_rawDescData = protoimpl.X.CompressGZIP(file_carList_carList_proto_rawDescData)
	})
	return file_carList_carList_proto_rawDescData
}

var file_carList_carList_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_carList_carList_proto_goTypes = []interface{}{
	(*CarListDto)(nil),                          // 0: car.CarListDto
	(*CarListCondition)(nil),                    // 1: car.CarListCondition
	(*CarListIdDto)(nil),                        // 2: car.CarListIdDto
	(*CarListId)(nil),                           // 3: car.CarListId
	(*LocationDto)(nil),                         // 4: car.LocationDto
	(*CarListDtoList)(nil),                      // 5: car.CarListDtoList
	(*ResultList)(nil),                          // 6: car.ResultList
	(*CarListDetailResult)(nil),                 // 7: car.CarListDetailResult
	(*CarListNo)(nil),                           // 8: car.CarListNo
	(*TopCarDto)(nil),                           // 9: car.TopCarDto
	(*TopCarListDto)(nil),                       // 10: car.TopCarListDto
	(*reportProto.ReportDamageCategoryDto)(nil), // 11: report.ReportDamageCategoryDto
	(*common.Page)(nil),                         // 12: common.Page
	(*common.EmptyDto)(nil),                     // 13: common.EmptyDto
	(*common.Response)(nil),                     // 14: common.Response
}
var file_carList_carList_proto_depIdxs = []int32{
	0,  // 0: car.CarListDtoList.CarListDto:type_name -> car.CarListDto
	0,  // 1: car.ResultList.carLists:type_name -> car.CarListDto
	0,  // 2: car.ResultList.recommendList:type_name -> car.CarListDto
	0,  // 3: car.CarListDetailResult.carList:type_name -> car.CarListDto
	0,  // 4: car.CarListDetailResult.recommendList:type_name -> car.CarListDto
	11, // 5: car.CarListDetailResult.report:type_name -> report.ReportDamageCategoryDto
	9,  // 6: car.TopCarListDto.TopCarListDto:type_name -> car.TopCarDto
	0,  // 7: car.CarList.Add:input_type -> car.CarListDto
	2,  // 8: car.CarList.Delete:input_type -> car.CarListIdDto
	0,  // 9: car.CarList.Update:input_type -> car.CarListDto
	2,  // 10: car.CarList.Get:input_type -> car.CarListIdDto
	12, // 11: car.CarList.List:input_type -> common.Page
	1,  // 12: car.CarList.ListCondition:input_type -> car.CarListCondition
	12, // 13: car.CarList.ListLocation:input_type -> common.Page
	8,  // 14: car.CarList.GetCarListDetail:input_type -> car.CarListNo
	4,  // 15: car.CarList.GetTopCarList:input_type -> car.LocationDto
	8,  // 16: car.CarList.GetCarListByNoFuzzy:input_type -> car.CarListNo
	10, // 17: car.CarList.SaveTopCarList:input_type -> car.TopCarListDto
	13, // 18: car.CarList.RefreshTopCarList:input_type -> common.EmptyDto
	14, // 19: car.CarList.Add:output_type -> common.Response
	14, // 20: car.CarList.Delete:output_type -> common.Response
	14, // 21: car.CarList.Update:output_type -> common.Response
	14, // 22: car.CarList.Get:output_type -> common.Response
	14, // 23: car.CarList.List:output_type -> common.Response
	14, // 24: car.CarList.ListCondition:output_type -> common.Response
	14, // 25: car.CarList.ListLocation:output_type -> common.Response
	14, // 26: car.CarList.GetCarListDetail:output_type -> common.Response
	14, // 27: car.CarList.GetTopCarList:output_type -> common.Response
	14, // 28: car.CarList.GetCarListByNoFuzzy:output_type -> common.Response
	14, // 29: car.CarList.SaveTopCarList:output_type -> common.Response
	14, // 30: car.CarList.RefreshTopCarList:output_type -> common.Response
	19, // [19:31] is the sub-list for method output_type
	7,  // [7:19] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_carList_carList_proto_init() }
func file_carList_carList_proto_init() {
	if File_carList_carList_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_carList_carList_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarListDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carList_carList_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarListCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carList_carList_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarListIdDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carList_carList_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarListId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carList_carList_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carList_carList_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarListDtoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carList_carList_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carList_carList_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarListDetailResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carList_carList_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarListNo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carList_carList_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopCarDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carList_carList_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopCarListDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_carList_carList_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_carList_carList_proto_goTypes,
		DependencyIndexes: file_carList_carList_proto_depIdxs,
		MessageInfos:      file_carList_carList_proto_msgTypes,
	}.Build()
	File_carList_carList_proto = out.File
	file_carList_carList_proto_rawDesc = nil
	file_carList_carList_proto_goTypes = nil
	file_carList_carList_proto_depIdxs = nil
}
