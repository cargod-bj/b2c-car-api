syntax = "proto3";

package report;

import "github.com/cargod-bj/b2c-proto-common/common/common.proto";

option go_package = "github.com/cargod-bj/b2c-car-api/reportProto";

/*
 * 报告服务
 */
service Report {
  // 根据leadId获取report的damage信息
  // 返回：common.Response -> List<Any> = List<ReconditionDto>
  rpc GetDamageInfo(common.IdDto) returns (common.Response);
}

// damage的顶层类别，每个顶层类别可能包含多个 子类别
message ReportDamageCategoryDto {
  // 当前category的id
  uint32 id = 1;
  // 当前category的Name
  string name = 2;
  // 当前category的子项，如果没有子项则为nil
  repeated ReportDamageSubCategoryDto children = 3;
}

// damage的子类别，每个子类别可能包含多个 监测点
message ReportDamageSubCategoryDto {
  // 当前category的id
  uint32 id = 1;
  // 当前category的Name
  string name = 2;
  // 当前category的子项，如果没有子项则为nil
  repeated ReportDamagePointDto children = 3;
}

// damage的监测点，每个监测点可能包含多个 tag点，多个 损坏照片
message ReportDamagePointDto {
  // 当前point的id
  uint64 id = 1;
  // 当前point的Name
  string name = 2;
  // 当前point上的损坏点列表
  repeated string tags = 3;
  // 当前point上的损坏点图片
  repeated string photos = 4;
  // 是否已通过
  bool isPassed = 5;
  // 是否为na
  bool isNA = 6;
  // 当前监测点上的value值
  string tagValue = 7;
}
