// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: carPurchase/car_purchase.proto

package carPurchaseProto

import (
	carPurchaseCheckList "github.com/cargod-bj/b2c-car-api/carPurchaseCheckList"
	common "github.com/cargod-bj/b2c-proto-common/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//用inspectionId查询车辆请求参数
type InspectionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InspectionId uint64 `protobuf:"varint,1,opt,name=inspectionId,proto3" json:"inspectionId,omitempty"`
}

func (x *InspectionReq) Reset() {
	*x = InspectionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carPurchase_car_purchase_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InspectionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectionReq) ProtoMessage() {}

func (x *InspectionReq) ProtoReflect() protoreflect.Message {
	mi := &file_carPurchase_car_purchase_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectionReq.ProtoReflect.Descriptor instead.
func (*InspectionReq) Descriptor() ([]byte, []int) {
	return file_carPurchase_car_purchase_proto_rawDescGZIP(), []int{0}
}

func (x *InspectionReq) GetInspectionId() uint64 {
	if x != nil {
		return x.InspectionId
	}
	return 0
}

//创建C2B来的采购单请求参数
type CreateC2BReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InspectionId  uint64 `protobuf:"varint,1,opt,name=inspectionId,proto3" json:"inspectionId,omitempty"`  //C2B唯一标识
	PurchaseType  uint32 `protobuf:"varint,2,opt,name=purchaseType,proto3" json:"purchaseType,omitempty"`  //采购类型
	PurchasePrice string `protobuf:"bytes,3,opt,name=purchasePrice,proto3" json:"purchasePrice,omitempty"` //采购价格
	HandingFee    string `protobuf:"bytes,4,opt,name=handingFee,proto3" json:"handingFee,omitempty"`       //手续费
	State         uint32 `protobuf:"varint,5,opt,name=state,proto3" json:"state,omitempty"`                //州
	City          uint32 `protobuf:"varint,6,opt,name=city,proto3" json:"city,omitempty"`                  //市
	Address       string `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`             //地址
	OperatorId    uint64 `protobuf:"varint,8,opt,name=operatorId,proto3" json:"operatorId,omitempty"`      //操作人
}

func (x *CreateC2BReq) Reset() {
	*x = CreateC2BReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carPurchase_car_purchase_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateC2BReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateC2BReq) ProtoMessage() {}

func (x *CreateC2BReq) ProtoReflect() protoreflect.Message {
	mi := &file_carPurchase_car_purchase_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateC2BReq.ProtoReflect.Descriptor instead.
func (*CreateC2BReq) Descriptor() ([]byte, []int) {
	return file_carPurchase_car_purchase_proto_rawDescGZIP(), []int{1}
}

func (x *CreateC2BReq) GetInspectionId() uint64 {
	if x != nil {
		return x.InspectionId
	}
	return 0
}

func (x *CreateC2BReq) GetPurchaseType() uint32 {
	if x != nil {
		return x.PurchaseType
	}
	return 0
}

func (x *CreateC2BReq) GetPurchasePrice() string {
	if x != nil {
		return x.PurchasePrice
	}
	return ""
}

func (x *CreateC2BReq) GetHandingFee() string {
	if x != nil {
		return x.HandingFee
	}
	return ""
}

func (x *CreateC2BReq) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *CreateC2BReq) GetCity() uint32 {
	if x != nil {
		return x.City
	}
	return 0
}

func (x *CreateC2BReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateC2BReq) GetOperatorId() uint64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

//创建采购单请求参数
type CreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarSource       uint32 `protobuf:"varint,1,opt,name=carSource,proto3" json:"carSource,omitempty"` //来源
	BrandId         uint32 `protobuf:"varint,2,opt,name=brandId,proto3" json:"brandId,omitempty"`
	ModelId         uint32 `protobuf:"varint,3,opt,name=modelId,proto3" json:"modelId,omitempty"`
	Year            uint32 `protobuf:"varint,4,opt,name=year,proto3" json:"year,omitempty"`
	VariantId       uint32 `protobuf:"varint,5,opt,name=variantId,proto3" json:"variantId,omitempty"`
	CarEngine       string `protobuf:"bytes,6,opt,name=carEngine,proto3" json:"carEngine,omitempty"`
	CarTransmission uint32 `protobuf:"varint,7,opt,name=carTransmission,proto3" json:"carTransmission,omitempty"`
	PlateNumber     string `protobuf:"bytes,8,opt,name=plateNumber,proto3" json:"plateNumber,omitempty"`
	PurchaseType    uint32 `protobuf:"varint,9,opt,name=purchaseType,proto3" json:"purchaseType,omitempty"`
	PurchasePrice   string `protobuf:"bytes,10,opt,name=purchasePrice,proto3" json:"purchasePrice,omitempty"`
	HandingFee      string `protobuf:"bytes,11,opt,name=handingFee,proto3" json:"handingFee,omitempty"`
	State           uint32 `protobuf:"varint,12,opt,name=state,proto3" json:"state,omitempty"`
	City            uint32 `protobuf:"varint,13,opt,name=city,proto3" json:"city,omitempty"`
	Address         string `protobuf:"bytes,14,opt,name=address,proto3" json:"address,omitempty"`
	OperatorId      uint64 `protobuf:"varint,15,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
}

func (x *CreateReq) Reset() {
	*x = CreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carPurchase_car_purchase_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReq) ProtoMessage() {}

func (x *CreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_carPurchase_car_purchase_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReq.ProtoReflect.Descriptor instead.
func (*CreateReq) Descriptor() ([]byte, []int) {
	return file_carPurchase_car_purchase_proto_rawDescGZIP(), []int{2}
}

func (x *CreateReq) GetCarSource() uint32 {
	if x != nil {
		return x.CarSource
	}
	return 0
}

func (x *CreateReq) GetBrandId() uint32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *CreateReq) GetModelId() uint32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *CreateReq) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *CreateReq) GetVariantId() uint32 {
	if x != nil {
		return x.VariantId
	}
	return 0
}

func (x *CreateReq) GetCarEngine() string {
	if x != nil {
		return x.CarEngine
	}
	return ""
}

func (x *CreateReq) GetCarTransmission() uint32 {
	if x != nil {
		return x.CarTransmission
	}
	return 0
}

func (x *CreateReq) GetPlateNumber() string {
	if x != nil {
		return x.PlateNumber
	}
	return ""
}

func (x *CreateReq) GetPurchaseType() uint32 {
	if x != nil {
		return x.PurchaseType
	}
	return 0
}

func (x *CreateReq) GetPurchasePrice() string {
	if x != nil {
		return x.PurchasePrice
	}
	return ""
}

func (x *CreateReq) GetHandingFee() string {
	if x != nil {
		return x.HandingFee
	}
	return ""
}

func (x *CreateReq) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *CreateReq) GetCity() uint32 {
	if x != nil {
		return x.City
	}
	return 0
}

func (x *CreateReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateReq) GetOperatorId() uint64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

type UpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint64                               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CarSource        uint32                               `protobuf:"varint,2,opt,name=carSource,proto3" json:"carSource,omitempty"`
	InspectionId     uint64                               `protobuf:"varint,3,opt,name=inspectionId,proto3" json:"inspectionId,omitempty"`
	BrandId          uint32                               `protobuf:"varint,4,opt,name=brandId,proto3" json:"brandId,omitempty"`
	ModelId          uint32                               `protobuf:"varint,5,opt,name=modelId,proto3" json:"modelId,omitempty"`
	Year             uint32                               `protobuf:"varint,6,opt,name=year,proto3" json:"year,omitempty"`
	VariantId        uint32                               `protobuf:"varint,7,opt,name=variantId,proto3" json:"variantId,omitempty"`
	CarEngine        string                               `protobuf:"bytes,8,opt,name=carEngine,proto3" json:"carEngine,omitempty"`
	CarTransmission  uint32                               `protobuf:"varint,9,opt,name=carTransmission,proto3" json:"carTransmission,omitempty"`
	PlateNumber      string                               `protobuf:"bytes,10,opt,name=plateNumber,proto3" json:"plateNumber,omitempty"`
	PurchaseType     uint32                               `protobuf:"varint,11,opt,name=purchaseType,proto3" json:"purchaseType,omitempty"`
	PurchasePrice    string                               `protobuf:"bytes,12,opt,name=purchasePrice,proto3" json:"purchasePrice,omitempty"`
	HandingFee       string                               `protobuf:"bytes,13,opt,name=handingFee,proto3" json:"handingFee,omitempty"`
	State            uint32                               `protobuf:"varint,14,opt,name=state,proto3" json:"state,omitempty"`
	City             uint32                               `protobuf:"varint,15,opt,name=city,proto3" json:"city,omitempty"`
	Address          string                               `protobuf:"bytes,16,opt,name=address,proto3" json:"address,omitempty"`
	PurchaseStatus   uint32                               `protobuf:"varint,17,opt,name=purchaseStatus,proto3" json:"purchaseStatus,omitempty"`
	CollectionDate   uint64                               `protobuf:"varint,18,opt,name=collectionDate,proto3" json:"collectionDate,omitempty"`
	RejectReason     uint32                               `protobuf:"varint,19,opt,name=rejectReason,proto3" json:"rejectReason,omitempty"`
	Remark           string                               `protobuf:"bytes,20,opt,name=remark,proto3" json:"remark,omitempty"`
	OperatorId       uint64                               `protobuf:"varint,21,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	CheckList        []*carPurchaseCheckList.ChecklistDto `protobuf:"bytes,22,rep,name=checkList,proto3" json:"checkList,omitempty"`
	BiddingResult    uint32                               `protobuf:"varint,23,opt,name=biddingResult,proto3" json:"biddingResult,omitempty"`
	CollectionResult uint32                               `protobuf:"varint,24,opt,name=collectionResult,proto3" json:"collectionResult,omitempty"`
}

func (x *UpdateReq) Reset() {
	*x = UpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carPurchase_car_purchase_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReq) ProtoMessage() {}

func (x *UpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_carPurchase_car_purchase_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReq.ProtoReflect.Descriptor instead.
func (*UpdateReq) Descriptor() ([]byte, []int) {
	return file_carPurchase_car_purchase_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateReq) GetCarSource() uint32 {
	if x != nil {
		return x.CarSource
	}
	return 0
}

func (x *UpdateReq) GetInspectionId() uint64 {
	if x != nil {
		return x.InspectionId
	}
	return 0
}

func (x *UpdateReq) GetBrandId() uint32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *UpdateReq) GetModelId() uint32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *UpdateReq) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *UpdateReq) GetVariantId() uint32 {
	if x != nil {
		return x.VariantId
	}
	return 0
}

func (x *UpdateReq) GetCarEngine() string {
	if x != nil {
		return x.CarEngine
	}
	return ""
}

func (x *UpdateReq) GetCarTransmission() uint32 {
	if x != nil {
		return x.CarTransmission
	}
	return 0
}

func (x *UpdateReq) GetPlateNumber() string {
	if x != nil {
		return x.PlateNumber
	}
	return ""
}

func (x *UpdateReq) GetPurchaseType() uint32 {
	if x != nil {
		return x.PurchaseType
	}
	return 0
}

func (x *UpdateReq) GetPurchasePrice() string {
	if x != nil {
		return x.PurchasePrice
	}
	return ""
}

func (x *UpdateReq) GetHandingFee() string {
	if x != nil {
		return x.HandingFee
	}
	return ""
}

func (x *UpdateReq) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *UpdateReq) GetCity() uint32 {
	if x != nil {
		return x.City
	}
	return 0
}

func (x *UpdateReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UpdateReq) GetPurchaseStatus() uint32 {
	if x != nil {
		return x.PurchaseStatus
	}
	return 0
}

func (x *UpdateReq) GetCollectionDate() uint64 {
	if x != nil {
		return x.CollectionDate
	}
	return 0
}

func (x *UpdateReq) GetRejectReason() uint32 {
	if x != nil {
		return x.RejectReason
	}
	return 0
}

func (x *UpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateReq) GetOperatorId() uint64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *UpdateReq) GetCheckList() []*carPurchaseCheckList.ChecklistDto {
	if x != nil {
		return x.CheckList
	}
	return nil
}

func (x *UpdateReq) GetBiddingResult() uint32 {
	if x != nil {
		return x.BiddingResult
	}
	return 0
}

func (x *UpdateReq) GetCollectionResult() uint32 {
	if x != nil {
		return x.CollectionResult
	}
	return 0
}

type ListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNo           uint32 `protobuf:"varint,1,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize         uint32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PurchaseNo       string `protobuf:"bytes,3,opt,name=purchaseNo,proto3" json:"purchaseNo,omitempty"`
	PurchaseStatus   uint32 `protobuf:"varint,4,opt,name=purchaseStatus,proto3" json:"purchaseStatus,omitempty"`
	CarSource        uint32 `protobuf:"varint,5,opt,name=carSource,proto3" json:"carSource,omitempty"`
	CarNo            string `protobuf:"bytes,6,opt,name=carNo,proto3" json:"carNo,omitempty"`
	InspectionId     uint64 `protobuf:"varint,7,opt,name=inspectionId,proto3" json:"inspectionId,omitempty"`
	PlateNumber      string `protobuf:"bytes,8,opt,name=plateNumber,proto3" json:"plateNumber,omitempty"`
	PurchaseType     uint32 `protobuf:"varint,9,opt,name=purchaseType,proto3" json:"purchaseType,omitempty"`
	CreatedTimeBegin uint64 `protobuf:"varint,10,opt,name=createdTimeBegin,proto3" json:"createdTimeBegin,omitempty"`
	CreatedTimeEnd   uint64 `protobuf:"varint,11,opt,name=createdTimeEnd,proto3" json:"createdTimeEnd,omitempty"`
	ApplyStatus      uint32 `protobuf:"varint,12,opt,name=applyStatus,proto3" json:"applyStatus,omitempty"`
	UploadResult     uint32 `protobuf:"varint,13,opt,name=uploadResult,proto3" json:"uploadResult,omitempty"`
	ChecklistResult  uint32 `protobuf:"varint,14,opt,name=checklistResult,proto3" json:"checklistResult,omitempty"`
}

func (x *ListReq) Reset() {
	*x = ListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carPurchase_car_purchase_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReq) ProtoMessage() {}

func (x *ListReq) ProtoReflect() protoreflect.Message {
	mi := &file_carPurchase_car_purchase_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReq.ProtoReflect.Descriptor instead.
func (*ListReq) Descriptor() ([]byte, []int) {
	return file_carPurchase_car_purchase_proto_rawDescGZIP(), []int{4}
}

func (x *ListReq) GetPageNo() uint32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *ListReq) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListReq) GetPurchaseNo() string {
	if x != nil {
		return x.PurchaseNo
	}
	return ""
}

func (x *ListReq) GetPurchaseStatus() uint32 {
	if x != nil {
		return x.PurchaseStatus
	}
	return 0
}

func (x *ListReq) GetCarSource() uint32 {
	if x != nil {
		return x.CarSource
	}
	return 0
}

func (x *ListReq) GetCarNo() string {
	if x != nil {
		return x.CarNo
	}
	return ""
}

func (x *ListReq) GetInspectionId() uint64 {
	if x != nil {
		return x.InspectionId
	}
	return 0
}

func (x *ListReq) GetPlateNumber() string {
	if x != nil {
		return x.PlateNumber
	}
	return ""
}

func (x *ListReq) GetPurchaseType() uint32 {
	if x != nil {
		return x.PurchaseType
	}
	return 0
}

func (x *ListReq) GetCreatedTimeBegin() uint64 {
	if x != nil {
		return x.CreatedTimeBegin
	}
	return 0
}

func (x *ListReq) GetCreatedTimeEnd() uint64 {
	if x != nil {
		return x.CreatedTimeEnd
	}
	return 0
}

func (x *ListReq) GetApplyStatus() uint32 {
	if x != nil {
		return x.ApplyStatus
	}
	return 0
}

func (x *ListReq) GetUploadResult() uint32 {
	if x != nil {
		return x.UploadResult
	}
	return 0
}

func (x *ListReq) GetChecklistResult() uint32 {
	if x != nil {
		return x.ChecklistResult
	}
	return 0
}

type PurchaseDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 uint64                               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PurchaseNo         string                               `protobuf:"bytes,2,opt,name=purchaseNo,proto3" json:"purchaseNo,omitempty"`
	CarNo              string                               `protobuf:"bytes,3,opt,name=carNo,proto3" json:"carNo,omitempty"`
	InspectionId       uint64                               `protobuf:"varint,4,opt,name=inspectionId,proto3" json:"inspectionId,omitempty"`
	CarSource          uint32                               `protobuf:"varint,5,opt,name=carSource,proto3" json:"carSource,omitempty"`
	BrandId            uint64                               `protobuf:"varint,6,opt,name=brandId,proto3" json:"brandId,omitempty"`
	ModelId            uint64                               `protobuf:"varint,7,opt,name=modelId,proto3" json:"modelId,omitempty"`
	Year               uint32                               `protobuf:"varint,8,opt,name=year,proto3" json:"year,omitempty"`
	VariantId          uint64                               `protobuf:"varint,9,opt,name=variantId,proto3" json:"variantId,omitempty"`
	CarEngine          string                               `protobuf:"bytes,10,opt,name=carEngine,proto3" json:"carEngine,omitempty"`
	CarTransmission    uint32                               `protobuf:"varint,11,opt,name=carTransmission,proto3" json:"carTransmission,omitempty"`
	PlateNumber        string                               `protobuf:"bytes,12,opt,name=plateNumber,proto3" json:"plateNumber,omitempty"`
	PurchaseType       uint32                               `protobuf:"varint,13,opt,name=purchaseType,proto3" json:"purchaseType,omitempty"`
	PurchasePrice      string                               `protobuf:"bytes,14,opt,name=purchasePrice,proto3" json:"purchasePrice,omitempty"`
	HandingFee         string                               `protobuf:"bytes,15,opt,name=handingFee,proto3" json:"handingFee,omitempty"`
	State              uint32                               `protobuf:"varint,16,opt,name=state,proto3" json:"state,omitempty"`
	City               uint32                               `protobuf:"varint,17,opt,name=city,proto3" json:"city,omitempty"`
	Address            string                               `protobuf:"bytes,18,opt,name=address,proto3" json:"address,omitempty"`
	CreateTime         uint64                               `protobuf:"varint,19,opt,name=createTime,proto3" json:"createTime,omitempty"`
	CreateBy           uint64                               `protobuf:"varint,20,opt,name=createBy,proto3" json:"createBy,omitempty"`
	UpdateTime         uint64                               `protobuf:"varint,21,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	PurchaseStatus     uint32                               `protobuf:"varint,22,opt,name=purchaseStatus,proto3" json:"purchaseStatus,omitempty"`
	RejectedReason     uint32                               `protobuf:"varint,23,opt,name=rejectedReason,proto3" json:"rejectedReason,omitempty"`
	Remark             string                               `protobuf:"bytes,24,opt,name=remark,proto3" json:"remark,omitempty"`
	CollectionDate     uint64                               `protobuf:"varint,25,opt,name=collectionDate,proto3" json:"collectionDate,omitempty"`
	UploadResult       uint32                               `protobuf:"varint,26,opt,name=uploadResult,proto3" json:"uploadResult,omitempty"`
	ChecklistResult    uint32                               `protobuf:"varint,27,opt,name=checklistResult,proto3" json:"checklistResult,omitempty"`
	CarSourceName      string                               `protobuf:"bytes,28,opt,name=carSourceName,proto3" json:"carSourceName,omitempty"`
	CarModel           string                               `protobuf:"bytes,29,opt,name=carModel,proto3" json:"carModel,omitempty"`
	PurchaseTypeName   string                               `protobuf:"bytes,30,opt,name=purchaseTypeName,proto3" json:"purchaseTypeName,omitempty"`
	BiddingResultName  string                               `protobuf:"bytes,31,opt,name=biddingResultName,proto3" json:"biddingResultName,omitempty"`
	PurchaseStatusName string                               `protobuf:"bytes,32,opt,name=purchaseStatusName,proto3" json:"purchaseStatusName,omitempty"`
	ApplyStatus        uint32                               `protobuf:"varint,33,opt,name=applyStatus,proto3" json:"applyStatus,omitempty"`
	ApplyStatusName    string                               `protobuf:"bytes,34,opt,name=applyStatusName,proto3" json:"applyStatusName,omitempty"`
	CheckList          []*carPurchaseCheckList.ChecklistDto `protobuf:"bytes,35,rep,name=checkList,proto3" json:"checkList,omitempty"`
	CarState           uint32                               `protobuf:"varint,36,opt,name=carState,proto3" json:"carState,omitempty"`
	BiddingResult      uint32                               `protobuf:"varint,37,opt,name=biddingResult,proto3" json:"biddingResult,omitempty"`
	CollectionResult   uint32                               `protobuf:"varint,38,opt,name=collectionResult,proto3" json:"collectionResult,omitempty"`
}

func (x *PurchaseDto) Reset() {
	*x = PurchaseDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carPurchase_car_purchase_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseDto) ProtoMessage() {}

func (x *PurchaseDto) ProtoReflect() protoreflect.Message {
	mi := &file_carPurchase_car_purchase_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseDto.ProtoReflect.Descriptor instead.
func (*PurchaseDto) Descriptor() ([]byte, []int) {
	return file_carPurchase_car_purchase_proto_rawDescGZIP(), []int{5}
}

func (x *PurchaseDto) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PurchaseDto) GetPurchaseNo() string {
	if x != nil {
		return x.PurchaseNo
	}
	return ""
}

func (x *PurchaseDto) GetCarNo() string {
	if x != nil {
		return x.CarNo
	}
	return ""
}

func (x *PurchaseDto) GetInspectionId() uint64 {
	if x != nil {
		return x.InspectionId
	}
	return 0
}

func (x *PurchaseDto) GetCarSource() uint32 {
	if x != nil {
		return x.CarSource
	}
	return 0
}

func (x *PurchaseDto) GetBrandId() uint64 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *PurchaseDto) GetModelId() uint64 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *PurchaseDto) GetYear() uint32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *PurchaseDto) GetVariantId() uint64 {
	if x != nil {
		return x.VariantId
	}
	return 0
}

func (x *PurchaseDto) GetCarEngine() string {
	if x != nil {
		return x.CarEngine
	}
	return ""
}

func (x *PurchaseDto) GetCarTransmission() uint32 {
	if x != nil {
		return x.CarTransmission
	}
	return 0
}

func (x *PurchaseDto) GetPlateNumber() string {
	if x != nil {
		return x.PlateNumber
	}
	return ""
}

func (x *PurchaseDto) GetPurchaseType() uint32 {
	if x != nil {
		return x.PurchaseType
	}
	return 0
}

func (x *PurchaseDto) GetPurchasePrice() string {
	if x != nil {
		return x.PurchasePrice
	}
	return ""
}

func (x *PurchaseDto) GetHandingFee() string {
	if x != nil {
		return x.HandingFee
	}
	return ""
}

func (x *PurchaseDto) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *PurchaseDto) GetCity() uint32 {
	if x != nil {
		return x.City
	}
	return 0
}

func (x *PurchaseDto) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *PurchaseDto) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *PurchaseDto) GetCreateBy() uint64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *PurchaseDto) GetUpdateTime() uint64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *PurchaseDto) GetPurchaseStatus() uint32 {
	if x != nil {
		return x.PurchaseStatus
	}
	return 0
}

func (x *PurchaseDto) GetRejectedReason() uint32 {
	if x != nil {
		return x.RejectedReason
	}
	return 0
}

func (x *PurchaseDto) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PurchaseDto) GetCollectionDate() uint64 {
	if x != nil {
		return x.CollectionDate
	}
	return 0
}

func (x *PurchaseDto) GetUploadResult() uint32 {
	if x != nil {
		return x.UploadResult
	}
	return 0
}

func (x *PurchaseDto) GetChecklistResult() uint32 {
	if x != nil {
		return x.ChecklistResult
	}
	return 0
}

func (x *PurchaseDto) GetCarSourceName() string {
	if x != nil {
		return x.CarSourceName
	}
	return ""
}

func (x *PurchaseDto) GetCarModel() string {
	if x != nil {
		return x.CarModel
	}
	return ""
}

func (x *PurchaseDto) GetPurchaseTypeName() string {
	if x != nil {
		return x.PurchaseTypeName
	}
	return ""
}

func (x *PurchaseDto) GetBiddingResultName() string {
	if x != nil {
		return x.BiddingResultName
	}
	return ""
}

func (x *PurchaseDto) GetPurchaseStatusName() string {
	if x != nil {
		return x.PurchaseStatusName
	}
	return ""
}

func (x *PurchaseDto) GetApplyStatus() uint32 {
	if x != nil {
		return x.ApplyStatus
	}
	return 0
}

func (x *PurchaseDto) GetApplyStatusName() string {
	if x != nil {
		return x.ApplyStatusName
	}
	return ""
}

func (x *PurchaseDto) GetCheckList() []*carPurchaseCheckList.ChecklistDto {
	if x != nil {
		return x.CheckList
	}
	return nil
}

func (x *PurchaseDto) GetCarState() uint32 {
	if x != nil {
		return x.CarState
	}
	return 0
}

func (x *PurchaseDto) GetBiddingResult() uint32 {
	if x != nil {
		return x.BiddingResult
	}
	return 0
}

func (x *PurchaseDto) GetCollectionResult() uint32 {
	if x != nil {
		return x.CollectionResult
	}
	return 0
}

type PurchaseDtoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchaseDtoList []*PurchaseDto `protobuf:"bytes,1,rep,name=PurchaseDtoList,proto3" json:"PurchaseDtoList,omitempty"`
	PageNo          uint32         `protobuf:"varint,2,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize        uint32         `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Total           uint64         `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *PurchaseDtoList) Reset() {
	*x = PurchaseDtoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carPurchase_car_purchase_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseDtoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseDtoList) ProtoMessage() {}

func (x *PurchaseDtoList) ProtoReflect() protoreflect.Message {
	mi := &file_carPurchase_car_purchase_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseDtoList.ProtoReflect.Descriptor instead.
func (*PurchaseDtoList) Descriptor() ([]byte, []int) {
	return file_carPurchase_car_purchase_proto_rawDescGZIP(), []int{6}
}

func (x *PurchaseDtoList) GetPurchaseDtoList() []*PurchaseDto {
	if x != nil {
		return x.PurchaseDtoList
	}
	return nil
}

func (x *PurchaseDtoList) GetPageNo() uint32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *PurchaseDtoList) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PurchaseDtoList) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type LogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNo     uint32 `protobuf:"varint,1,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize   uint32 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	PurchaseId string `protobuf:"bytes,3,opt,name=purchaseId,proto3" json:"purchaseId,omitempty"`
}

func (x *LogReq) Reset() {
	*x = LogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carPurchase_car_purchase_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogReq) ProtoMessage() {}

func (x *LogReq) ProtoReflect() protoreflect.Message {
	mi := &file_carPurchase_car_purchase_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogReq.ProtoReflect.Descriptor instead.
func (*LogReq) Descriptor() ([]byte, []int) {
	return file_carPurchase_car_purchase_proto_rawDescGZIP(), []int{7}
}

func (x *LogReq) GetPageNo() uint32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *LogReq) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *LogReq) GetPurchaseId() string {
	if x != nil {
		return x.PurchaseId
	}
	return ""
}

type PurchaseLogDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PurchaseId         uint64 `protobuf:"varint,2,opt,name=purchaseId,proto3" json:"purchaseId,omitempty"`
	PurchaseStatus     uint32 `protobuf:"varint,3,opt,name=purchaseStatus,proto3" json:"purchaseStatus,omitempty"`
	PurchasePrice      string `protobuf:"bytes,4,opt,name=purchasePrice,proto3" json:"purchasePrice,omitempty"`
	HandingFee         string `protobuf:"bytes,5,opt,name=handingFee,proto3" json:"handingFee,omitempty"`
	CreateBy           uint64 `protobuf:"varint,6,opt,name=createBy,proto3" json:"createBy,omitempty"`
	CreateTime         uint64 `protobuf:"varint,7,opt,name=createTime,proto3" json:"createTime,omitempty"`
	CreateByName       string `protobuf:"bytes,8,opt,name=createByName,proto3" json:"createByName,omitempty"`
	PurchaseStatusName string `protobuf:"bytes,9,opt,name=purchaseStatusName,proto3" json:"purchaseStatusName,omitempty"`
}

func (x *PurchaseLogDto) Reset() {
	*x = PurchaseLogDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carPurchase_car_purchase_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseLogDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseLogDto) ProtoMessage() {}

func (x *PurchaseLogDto) ProtoReflect() protoreflect.Message {
	mi := &file_carPurchase_car_purchase_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseLogDto.ProtoReflect.Descriptor instead.
func (*PurchaseLogDto) Descriptor() ([]byte, []int) {
	return file_carPurchase_car_purchase_proto_rawDescGZIP(), []int{8}
}

func (x *PurchaseLogDto) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PurchaseLogDto) GetPurchaseId() uint64 {
	if x != nil {
		return x.PurchaseId
	}
	return 0
}

func (x *PurchaseLogDto) GetPurchaseStatus() uint32 {
	if x != nil {
		return x.PurchaseStatus
	}
	return 0
}

func (x *PurchaseLogDto) GetPurchasePrice() string {
	if x != nil {
		return x.PurchasePrice
	}
	return ""
}

func (x *PurchaseLogDto) GetHandingFee() string {
	if x != nil {
		return x.HandingFee
	}
	return ""
}

func (x *PurchaseLogDto) GetCreateBy() uint64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *PurchaseLogDto) GetCreateTime() uint64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *PurchaseLogDto) GetCreateByName() string {
	if x != nil {
		return x.CreateByName
	}
	return ""
}

func (x *PurchaseLogDto) GetPurchaseStatusName() string {
	if x != nil {
		return x.PurchaseStatusName
	}
	return ""
}

type PurchaseLogDtoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchaseLogDtoList []*PurchaseLogDto `protobuf:"bytes,1,rep,name=PurchaseLogDtoList,proto3" json:"PurchaseLogDtoList,omitempty"`
	PageNo             uint32            `protobuf:"varint,2,opt,name=pageNo,proto3" json:"pageNo,omitempty"`
	PageSize           uint32            `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Total              uint64            `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *PurchaseLogDtoList) Reset() {
	*x = PurchaseLogDtoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carPurchase_car_purchase_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseLogDtoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseLogDtoList) ProtoMessage() {}

func (x *PurchaseLogDtoList) ProtoReflect() protoreflect.Message {
	mi := &file_carPurchase_car_purchase_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseLogDtoList.ProtoReflect.Descriptor instead.
func (*PurchaseLogDtoList) Descriptor() ([]byte, []int) {
	return file_carPurchase_car_purchase_proto_rawDescGZIP(), []int{9}
}

func (x *PurchaseLogDtoList) GetPurchaseLogDtoList() []*PurchaseLogDto {
	if x != nil {
		return x.PurchaseLogDtoList
	}
	return nil
}

func (x *PurchaseLogDtoList) GetPageNo() uint32 {
	if x != nil {
		return x.PageNo
	}
	return 0
}

func (x *PurchaseLogDtoList) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PurchaseLogDtoList) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type PlateNumberReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PlateNumber string `protobuf:"bytes,2,opt,name=plateNumber,proto3" json:"plateNumber,omitempty"`
}

func (x *PlateNumberReq) Reset() {
	*x = PlateNumberReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_carPurchase_car_purchase_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlateNumberReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlateNumberReq) ProtoMessage() {}

func (x *PlateNumberReq) ProtoReflect() protoreflect.Message {
	mi := &file_carPurchase_car_purchase_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlateNumberReq.ProtoReflect.Descriptor instead.
func (*PlateNumberReq) Descriptor() ([]byte, []int) {
	return file_carPurchase_car_purchase_proto_rawDescGZIP(), []int{10}
}

func (x *PlateNumberReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlateNumberReq) GetPlateNumber() string {
	if x != nil {
		return x.PlateNumber
	}
	return ""
}

var File_carPurchase_car_purchase_proto protoreflect.FileDescriptor

var file_carPurchase_car_purchase_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x63, 0x61, 0x72, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2f, 0x63, 0x61,
	0x72, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x10, 0x63, 0x61, 0x72, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x61, 0x72, 0x67, 0x6f, 0x64, 0x2d, 0x62, 0x6a, 0x2f, 0x62, 0x32, 0x63, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x63,
	0x61, 0x72, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x2f, 0x63, 0x61, 0x72, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x33, 0x0a, 0x0d, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x80, 0x02, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x32, 0x42, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x69, 0x6e,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x46,
	0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x46, 0x65, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0xc7, 0x03, 0x0a, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x61, 0x72, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61,
	0x72, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x61, 0x72, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x63, 0x61, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x22, 0x9b, 0x06, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x61, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x72,
	0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x63, 0x61, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x68, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x09,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x63, 0x61, 0x72, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74,
	0x44, 0x74, 0x6f, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x62, 0x69, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x69, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xe7, 0x03, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4e, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4e, 0x6f,
	0x12, 0x26, 0x0a, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x61, 0x72,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x4e, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x72, 0x4e, 0x6f, 0x12, 0x22, 0x0a, 0x0c,
	0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x65, 0x67,
	0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x45, 0x6e, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70,
	0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x95, 0x0a, 0x0a, 0x0b, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4e, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x61,
	0x72, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x61, 0x72, 0x4e, 0x6f,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x61, 0x72, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x72,
	0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x63, 0x61, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x68, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x6c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61,
	0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x61, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x1d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x10,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x62, 0x69, 0x64, 0x64,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x69, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x61, 0x70, 0x70,
	0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x23, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x61, 0x72, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x44, 0x74, 0x6f, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x24, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x62, 0x69, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x69, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x0f, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44,
	0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0f, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x44, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x63, 0x61, 0x72, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x74, 0x6f, 0x52, 0x0f,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x5c, 0x0a, 0x06, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x64, 0x22, 0xbe, 0x02, 0x0a, 0x0e, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x61,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x12, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x74, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x50, 0x0a, 0x12, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x74,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x61,
	0x72, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x74, 0x6f, 0x52, 0x12, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x74, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x42, 0x0a, 0x0e, 0x50,
	0x6c, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x32,
	0xa3, 0x04, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12,
	0x49, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x42, 0x79, 0x49, 0x6e, 0x73, 0x70, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x63, 0x61, 0x72, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x32, 0x42, 0x12, 0x1e, 0x2e, 0x63, 0x61, 0x72, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x32, 0x42, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x06, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x63, 0x61, 0x72, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x1b, 0x2e, 0x63, 0x61, 0x72, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x35, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x63, 0x61, 0x72, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x64, 0x44, 0x74,
	0x6f, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x64, 0x44, 0x74, 0x6f, 0x1a, 0x10,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x37, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e,
	0x63, 0x61, 0x72, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x20, 0x2e, 0x63, 0x61, 0x72, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x64, 0x2d, 0x62, 0x6a, 0x2f, 0x62, 0x32,
	0x63, 0x2d, 0x63, 0x61, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x72, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_carPurchase_car_purchase_proto_rawDescOnce sync.Once
	file_carPurchase_car_purchase_proto_rawDescData = file_carPurchase_car_purchase_proto_rawDesc
)

func file_carPurchase_car_purchase_proto_rawDescGZIP() []byte {
	file_carPurchase_car_purchase_proto_rawDescOnce.Do(func() {
		file_carPurchase_car_purchase_proto_rawDescData = protoimpl.X.CompressGZIP(file_carPurchase_car_purchase_proto_rawDescData)
	})
	return file_carPurchase_car_purchase_proto_rawDescData
}

var file_carPurchase_car_purchase_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_carPurchase_car_purchase_proto_goTypes = []interface{}{
	(*InspectionReq)(nil),                     // 0: carPurchaseProto.InspectionReq
	(*CreateC2BReq)(nil),                      // 1: carPurchaseProto.CreateC2BReq
	(*CreateReq)(nil),                         // 2: carPurchaseProto.CreateReq
	(*UpdateReq)(nil),                         // 3: carPurchaseProto.UpdateReq
	(*ListReq)(nil),                           // 4: carPurchaseProto.ListReq
	(*PurchaseDto)(nil),                       // 5: carPurchaseProto.PurchaseDto
	(*PurchaseDtoList)(nil),                   // 6: carPurchaseProto.PurchaseDtoList
	(*LogReq)(nil),                            // 7: carPurchaseProto.LogReq
	(*PurchaseLogDto)(nil),                    // 8: carPurchaseProto.PurchaseLogDto
	(*PurchaseLogDtoList)(nil),                // 9: carPurchaseProto.PurchaseLogDtoList
	(*PlateNumberReq)(nil),                    // 10: carPurchaseProto.PlateNumberReq
	(*carPurchaseCheckList.ChecklistDto)(nil), // 11: carPurchaseCheckList.ChecklistDto
	(*common.IdDto)(nil),                      // 12: common.IdDto
	(*common.Response)(nil),                   // 13: common.Response
}
var file_carPurchase_car_purchase_proto_depIdxs = []int32{
	11, // 0: carPurchaseProto.UpdateReq.checkList:type_name -> carPurchaseCheckList.ChecklistDto
	11, // 1: carPurchaseProto.PurchaseDto.checkList:type_name -> carPurchaseCheckList.ChecklistDto
	5,  // 2: carPurchaseProto.PurchaseDtoList.PurchaseDtoList:type_name -> carPurchaseProto.PurchaseDto
	8,  // 3: carPurchaseProto.PurchaseLogDtoList.PurchaseLogDtoList:type_name -> carPurchaseProto.PurchaseLogDto
	0,  // 4: carPurchaseProto.CarPurchase.GetCarByInspection:input_type -> carPurchaseProto.InspectionReq
	1,  // 5: carPurchaseProto.CarPurchase.CreateC2B:input_type -> carPurchaseProto.CreateC2BReq
	2,  // 6: carPurchaseProto.CarPurchase.Create:input_type -> carPurchaseProto.CreateReq
	3,  // 7: carPurchaseProto.CarPurchase.Update:input_type -> carPurchaseProto.UpdateReq
	4,  // 8: carPurchaseProto.CarPurchase.List:input_type -> carPurchaseProto.ListReq
	12, // 9: carPurchaseProto.CarPurchase.Detail:input_type -> common.IdDto
	12, // 10: carPurchaseProto.CarPurchase.Delete:input_type -> common.IdDto
	7,  // 11: carPurchaseProto.CarPurchase.LogList:input_type -> carPurchaseProto.LogReq
	10, // 12: carPurchaseProto.CarPurchase.GetByPlateNumber:input_type -> carPurchaseProto.PlateNumberReq
	13, // 13: carPurchaseProto.CarPurchase.GetCarByInspection:output_type -> common.Response
	13, // 14: carPurchaseProto.CarPurchase.CreateC2B:output_type -> common.Response
	13, // 15: carPurchaseProto.CarPurchase.Create:output_type -> common.Response
	13, // 16: carPurchaseProto.CarPurchase.Update:output_type -> common.Response
	13, // 17: carPurchaseProto.CarPurchase.List:output_type -> common.Response
	13, // 18: carPurchaseProto.CarPurchase.Detail:output_type -> common.Response
	13, // 19: carPurchaseProto.CarPurchase.Delete:output_type -> common.Response
	13, // 20: carPurchaseProto.CarPurchase.LogList:output_type -> common.Response
	13, // 21: carPurchaseProto.CarPurchase.GetByPlateNumber:output_type -> common.Response
	13, // [13:22] is the sub-list for method output_type
	4,  // [4:13] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_carPurchase_car_purchase_proto_init() }
func file_carPurchase_car_purchase_proto_init() {
	if File_carPurchase_car_purchase_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_carPurchase_car_purchase_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InspectionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carPurchase_car_purchase_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateC2BReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carPurchase_car_purchase_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carPurchase_car_purchase_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carPurchase_car_purchase_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carPurchase_car_purchase_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carPurchase_car_purchase_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseDtoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carPurchase_car_purchase_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carPurchase_car_purchase_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseLogDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carPurchase_car_purchase_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseLogDtoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_carPurchase_car_purchase_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlateNumberReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_carPurchase_car_purchase_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_carPurchase_car_purchase_proto_goTypes,
		DependencyIndexes: file_carPurchase_car_purchase_proto_depIdxs,
		MessageInfos:      file_carPurchase_car_purchase_proto_msgTypes,
	}.Build()
	File_carPurchase_car_purchase_proto = out.File
	file_carPurchase_car_purchase_proto_rawDesc = nil
	file_carPurchase_car_purchase_proto_goTypes = nil
	file_carPurchase_car_purchase_proto_depIdxs = nil
}
